{"version":3,"sources":["../src/default-stop-marker.js"],"names":["Styled","BaseMapStyled","coreUtils","FromToLocationPicker","PropTypes","React","Component","CircleMarker","Popup","S","types","languageConfigType","leafletPathType","stopLayerStopType","StopMarker","onClickView","props","setViewedStop","stop","stopId","id","onFromClick","setLocation","onToClick","locationType","lat","lon","name","location","languageConfig","leafletPath","radius","code","geometries","userFacingId","split","extraPathOptions","geoJson","properties","color","fillColor","stopViewer","propTypes","isRequired","number","func","defaultProps","fillOpacity","weight"],"mappings":"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","sourcesContent":["import { Styled as BaseMapStyled } from \"@opentripplanner/base-map\";\nimport coreUtils from \"@opentripplanner/core-utils\";\nimport FromToLocationPicker from \"@opentripplanner/from-to-location-picker\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { CircleMarker, Popup } from \"react-leaflet\";\n\nimport * as S from \"./styled\";\n\nconst {\n  languageConfigType,\n  leafletPathType,\n  stopLayerStopType\n} = coreUtils.types;\n\nexport default class StopMarker extends Component {\n  onClickView = () => {\n    const { setViewedStop, stop } = this.props;\n    setViewedStop({ stopId: stop.id });\n  };\n\n  onFromClick = () => {\n    this.setLocation(\"from\");\n  };\n\n  onToClick = () => {\n    this.setLocation(\"to\");\n  };\n\n  setLocation(locationType) {\n    const { setLocation, stop } = this.props;\n    const { lat, lon, name } = stop;\n    setLocation({ location: { lat, lon, name }, locationType });\n  }\n\n  render() {\n    const { languageConfig, leafletPath, radius, stop } = this.props;\n    const { code, geometries, id, lat, lon, name } = stop;\n    const userFacingId = code || id.split(\":\")[1] || id;\n\n    const extraPathOptions = {};\n    // We pull the color from the GeoJSON properties instead of directly from\n    // the stop object because we only want the stop icon to be route-colored\n    // if it is a flex zone, and only flex zone stops have the color inserted\n    // into the GeoJSON properties.\n    //\n    // However, all stops may have a color attribute\n    if (geometries?.geoJson?.properties?.color) {\n      extraPathOptions.fillColor = geometries.geoJson.properties.color;\n    }\n    return (\n      <CircleMarker\n        /* eslint-disable-next-line react/jsx-props-no-spreading */\n        {...leafletPath}\n        /* eslint-disable-next-line react/jsx-props-no-spreading */\n        {...extraPathOptions}\n        center={[lat, lon]}\n        radius={radius}\n      >\n        <Popup>\n          <BaseMapStyled.MapOverlayPopup>\n            <BaseMapStyled.PopupTitle>{name}</BaseMapStyled.PopupTitle>\n            <BaseMapStyled.PopupRow>\n              <span>\n                <b>Stop ID:</b> {userFacingId}\n              </span>\n              <S.ViewStopButton onClick={this.onClickView}>\n                {languageConfig.stopViewer || \"Stop Viewer\"}\n              </S.ViewStopButton>\n            </BaseMapStyled.PopupRow>\n\n            {/* The \"Set as [from/to]\" ButtonGroup */}\n            <BaseMapStyled.PopupRow>\n              <b>Plan a trip:</b>\n              <FromToLocationPicker\n                onFromClick={this.onFromClick}\n                onToClick={this.onToClick}\n              />\n            </BaseMapStyled.PopupRow>\n          </BaseMapStyled.MapOverlayPopup>\n        </Popup>\n      </CircleMarker>\n    );\n  }\n}\n\nStopMarker.propTypes = {\n  languageConfig: languageConfigType.isRequired,\n  leafletPath: leafletPathType,\n  radius: PropTypes.number,\n  setLocation: PropTypes.func.isRequired,\n  setViewedStop: PropTypes.func.isRequired,\n  stop: stopLayerStopType.isRequired\n};\n\nStopMarker.defaultProps = {\n  leafletPath: {\n    color: \"#000\",\n    fillColor: \"#FFF\",\n    fillOpacity: 1,\n    weight: 1\n  },\n  radius: 5\n};\n"],"file":"default-stop-marker.js"}