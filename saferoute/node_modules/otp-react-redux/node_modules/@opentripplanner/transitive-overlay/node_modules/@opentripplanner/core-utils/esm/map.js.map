{"version":3,"sources":["../src/map.ts"],"names":["getPlaceName","isAccessMode","isFlex","isTransit","toSentenceCase","coordsToString","getDetailText","latlngToString","logDeprecationWarning","currentPositionToLocation","currentPosition","error","coords","console","warn","lat","latitude","lon","longitude","category","stringToCoords","str","split","map","c","constructLocation","latlng","lng","formatStoredPlaceName","location","withDetails","displayName","type","name","detailText","matchLatLon","location1","location2","itineraryToTransitive","itin","companies","getRouteLabel","disableFlexArc","tdata","journeys","streetEdges","places","patterns","routes","stops","streetEdgeId","patternId","journey","journey_id","journey_name","segments","push","place_id","place_lat","legs","from","place_lon","length","to","forEach","leg","idx","mode","fromPlaceId","bikeShareId","vertexType","toPlaceId","segment","arc","hailedCar","edge_id","geometry","legGeometry","place_name","stopId","hasInterStopGeometry","interStopGeometry","hasLegGeometry","points","hasIntermediateStopGeometry","intermediateStops","ptnId","pattern","pattern_id","pattern_name","route_id","routeId","stop_id","stop_name","stop_lat","stop_lon","stop","i","routeLabel","routeShortName","agency_id","agencyId","route_short_name","route_long_name","routeLongName","route_type","routeType","route_color","routeColor","from_stop_index","to_stop_index","Object","values","isBikeshareStation","place","lastIndexOf","isEScooterStation","isCarWalkTransition","isValidLat","Number","isFinite","isValidLng","isValidLatLng","arr","Array","isArray"],"mappings":"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","sourcesContent":["import {\n  Company,\n  Itinerary,\n  LatLngArray,\n  Leg,\n  Location,\n  TransitiveData,\n  UserPosition\n} from \"@opentripplanner/types\";\nimport {\n  getPlaceName,\n  isAccessMode,\n  isFlex,\n  isTransit,\n  toSentenceCase\n} from \"./itinerary\";\n\nimport {\n  coordsToString,\n  getDetailText,\n  latlngToString,\n  logDeprecationWarning\n} from \"./deprecated\";\n\nexport { coordsToString, getDetailText, latlngToString };\n\nexport function currentPositionToLocation(\n  currentPosition: UserPosition\n): Location {\n  if (currentPosition.error || !currentPosition.coords) {\n    console.warn(\n      \"Cannot construct location from current position due to geolocation error or missing coordinates.\"\n    );\n    return null;\n  }\n  return {\n    lat: currentPosition.coords.latitude,\n    lon: currentPosition.coords.longitude,\n    category: \"CURRENT_LOCATION\"\n  };\n}\n\nexport function stringToCoords(str: string): number[] {\n  return (str && str.split(\",\").map(c => +c)) || [];\n}\n\nexport function constructLocation(latlng: {\n  lat: number;\n  lng: number;\n}): Location {\n  return {\n    lat: latlng.lat,\n    lon: latlng.lng\n  };\n}\n\nexport function formatStoredPlaceName(\n  location: Location,\n  withDetails = true\n): string {\n  if (withDetails) {\n    logDeprecationWarning(\"the formatStoredPlaceName withDetails parameter\");\n  }\n\n  let displayName =\n    location.type === \"home\" || location.type === \"work\"\n      ? toSentenceCase(location.type)\n      : location.name;\n  if (withDetails) {\n    const detailText = getDetailText(location);\n    if (detailText) displayName += ` (${detailText})`;\n  }\n  return displayName;\n}\n\nexport function matchLatLon(location1: Location, location2: Location): boolean {\n  if (!location1 || !location2) return location1 === location2;\n  return location1.lat === location2.lat && location1.lon === location2.lon;\n}\n\n/**\n * Converts an OTP itinerary object to a transtive.js itinerary object.\n * @param {*} itin Required OTP itinerary (see @opentripplanner/core-utils/types#itineraryType) to convert.\n * @param {*} companies Optional list of companies, used for labeling vehicle rental locations.\n * @param {*} getRouteLabel Optional function that takes an itinerary leg (see @opentripplanner/core-utils/types#legType)\n *                          and returns a string representing the route label to display for that leg.\n * @returns An itinerary in the transitive.js format.\n */\nexport function itineraryToTransitive(\n  itin: Itinerary,\n  companies: Company[],\n  getRouteLabel: (leg: Leg) => string,\n  disableFlexArc: boolean\n): TransitiveData {\n  const tdata = {\n    journeys: [],\n    streetEdges: [],\n    places: [],\n    patterns: [],\n    routes: [],\n    stops: []\n  };\n  const routes = {};\n  const stops = {};\n  let streetEdgeId = 0;\n  let patternId = 0;\n\n  const journey = {\n    journey_id: \"itin\",\n    // This string is not shown in the UI\n    journey_name: \"Iterarary-derived Journey\",\n    segments: []\n  };\n\n  // add 'from' and 'to' places to the tdata places array\n  tdata.places.push({\n    place_id: \"from\",\n    place_lat: itin.legs[0].from.lat,\n    place_lon: itin.legs[0].from.lon\n  });\n  tdata.places.push({\n    place_id: \"to\",\n    place_lat: itin.legs[itin.legs.length - 1].to.lat,\n    place_lon: itin.legs[itin.legs.length - 1].to.lon\n  });\n\n  itin.legs.forEach((leg, idx) => {\n    if (isAccessMode(leg.mode)) {\n      let fromPlaceId: string;\n      if (leg.from.bikeShareId) {\n        fromPlaceId = `bicycle_rent_station_${leg.from.bikeShareId}`;\n        if (\n          // OTP2 Scooter case\n          leg.mode === \"SCOOTER\"\n        ) {\n          fromPlaceId = `escooter_rent_station_${leg.from.bikeShareId}`;\n        }\n      } else if (leg.from.vertexType === \"VEHICLERENTAL\") {\n        // OTP1 Scooter case\n        fromPlaceId = `escooter_rent_station_${leg.from.name}`;\n      } else if (\n        leg.mode === \"CAR\" &&\n        idx > 0 &&\n        itin.legs[idx - 1].mode === \"WALK\"\n      ) {\n        // create a special place ID for car legs preceded by walking legs\n        fromPlaceId = `itin_car_${streetEdgeId}_from`;\n      } else if (!fromPlaceId) {\n        fromPlaceId = `itin_street_${streetEdgeId}_from`;\n      }\n\n      let toPlaceId;\n      if (leg.to.bikeShareId) {\n        toPlaceId = `bicycle_rent_station_${leg.to.bikeShareId}`;\n        // OTP2 scooter case\n        // Need to check next leg since this is a \"to\" place \"\n        if (leg.mode === \"SCOOTER\" || itin.legs?.[idx + 1].mode === \"SCOOTER\") {\n          toPlaceId = `escooter_rent_station_${leg.to.bikeShareId}`;\n        }\n      } else if (leg.to.vertexType === \"VEHICLERENTAL\") {\n        toPlaceId = `escooter_rent_station_${leg.to.name}`;\n      } else if (\n        leg.mode === \"CAR\" &&\n        idx < itin.legs.length - 1 &&\n        itin.legs[idx + 1].mode === \"WALK\"\n      ) {\n        // create a special place ID for car legs followed by walking legs\n        toPlaceId = `itin_car_${streetEdgeId}_to`;\n      } else if (!toPlaceId) {\n        toPlaceId = `itin_street_${streetEdgeId}_to`;\n      }\n\n      const segment = {\n        arc: false,\n        type: leg.mode,\n        streetEdges: [streetEdgeId],\n        from: { type: \"PLACE\", place_id: fromPlaceId },\n        to: { type: \"PLACE\", place_id: toPlaceId }\n      };\n      // For TNC segments, draw using an arc\n      if (leg.mode === \"CAR\" && leg.hailedCar) segment.arc = true;\n      journey.segments.push(segment);\n\n      tdata.streetEdges.push({\n        edge_id: streetEdgeId,\n        geometry: leg.legGeometry\n      });\n      tdata.places.push({\n        place_id: fromPlaceId,\n        // Do not label the from place in addition to the to place. Otherwise,\n        // in some cases (bike rental station) the label for a single place will\n        // appear twice on the rendered transitive view.\n        // See https://github.com/conveyal/trimet-mod-otp/issues/152\n        // place_name: leg.from.name,\n        place_lat: leg.from.lat,\n        place_lon: leg.from.lon\n      });\n      tdata.places.push({\n        place_id: toPlaceId,\n        // This string is not shown in the UI\n        place_name: getPlaceName(leg.to, companies),\n        place_lat: leg.to.lat,\n        place_lon: leg.to.lon\n      });\n      streetEdgeId++;\n    }\n\n    if (isTransit(leg.mode)) {\n      // Flex routes sometimes have the same from and to IDs, but\n      // these stops still need to be rendered separately!\n      if (leg.from.stopId === leg.to.stopId) {\n        leg.to.stopId = `${leg.to.stopId}_flexed_to`;\n      }\n      // determine if we have valid inter-stop geometry\n      const hasInterStopGeometry = !!leg.interStopGeometry;\n      const hasLegGeometry = !!leg.legGeometry?.points;\n      const hasIntermediateStopGeometry =\n        hasInterStopGeometry &&\n        leg.intermediateStops &&\n        leg.interStopGeometry.length === leg.intermediateStops.length + 1;\n\n      // create leg-specific pattern\n      const ptnId = `ptn_${patternId}`;\n      const pattern = {\n        pattern_id: ptnId,\n        // This string is not shown in the UI\n        pattern_name: `Pattern ${patternId}`,\n        route_id: leg.routeId,\n        stops: []\n      };\n\n      // add 'from' stop to stops dictionary and pattern object\n      stops[leg.from.stopId] = {\n        stop_id: leg.from.stopId,\n        stop_name: leg.from.name,\n        stop_lat: leg.from.lat,\n        stop_lon: leg.from.lon\n      };\n      pattern.stops.push({ stop_id: leg.from.stopId });\n\n      // add intermediate stops to stops dictionary and pattern object\n      // If there is no intermediateStopGeometry, do not add the intermediate stops\n      // as it will be straight lines instead of the nice legGeometry (but only if\n      // the legGeometry exists).\n      if (\n        leg.intermediateStops &&\n        (hasIntermediateStopGeometry || !hasLegGeometry)\n      ) {\n        leg.intermediateStops.forEach((stop, i) => {\n          stops[stop.stopId] = {\n            stop_id: stop.stopId,\n            stop_name: stop.name,\n            stop_lat: stop.lat,\n            stop_lon: stop.lon\n          };\n          pattern.stops.push({\n            stop_id: stop.stopId,\n            geometry:\n              hasIntermediateStopGeometry && leg.interStopGeometry[i].points\n          });\n        });\n      }\n\n      // add 'to' stop to stops dictionary and pattern object\n      stops[leg.to.stopId] = {\n        stop_id: leg.to.stopId,\n        stop_name: leg.to.name,\n        stop_lat: leg.to.lat,\n        stop_lon: leg.to.lon\n      };\n      pattern.stops.push({\n        stop_id: leg.to.stopId,\n        geometry:\n          // Some legs don't have intermediateStopGeometry, but do have valid legGeometry\n          (hasInterStopGeometry || hasLegGeometry) &&\n          (hasIntermediateStopGeometry\n            ? leg.interStopGeometry[leg.interStopGeometry.length - 1].points\n            : leg.legGeometry.points)\n      });\n\n      // add route to the route dictionary\n      // with a custom route label if specified.\n      const routeLabel =\n        typeof getRouteLabel === \"function\"\n          ? getRouteLabel(leg)\n          : leg.routeShortName;\n      routes[leg.routeId] = {\n        agency_id: leg.agencyId,\n        route_id: leg.routeId,\n        route_short_name: routeLabel || \"\",\n        route_long_name: leg.routeLongName || \"\",\n        route_type: leg.routeType,\n        route_color: leg.routeColor\n      };\n\n      // add the pattern to the tdata patterns array\n      tdata.patterns.push(pattern);\n\n      // add the pattern reference to the journey object\n      journey.segments.push({\n        arc:\n          typeof disableFlexArc === \"undefined\" ? isFlex(leg) : !disableFlexArc,\n        type: \"TRANSIT\",\n        patterns: [\n          {\n            pattern_id: ptnId,\n            from_stop_index: 0,\n            to_stop_index: hasIntermediateStopGeometry\n              ? leg.intermediateStops.length + 2 - 1\n              : 1\n          }\n        ]\n      });\n\n      patternId++;\n    }\n  });\n\n  // add the routes and stops to the tdata arrays\n  tdata.routes.push(...Object.values(routes));\n  tdata.stops.push(...Object.values(stops));\n\n  // add the journey to the tdata journeys array\n  tdata.journeys.push(journey);\n\n  // console.log('derived tdata', tdata);\n  return tdata;\n}\n\ntype TransitivePlaceRaw = {\n  place_id: string;\n};\nexport function isBikeshareStation(place: TransitivePlaceRaw): boolean {\n  return place.place_id.lastIndexOf(\"bicycle_rent_station\") !== -1;\n}\n\nexport function isEScooterStation(place: TransitivePlaceRaw): boolean {\n  return place.place_id.lastIndexOf(\"escooter_rent_station\") !== -1;\n}\n\nexport function isCarWalkTransition(place: TransitivePlaceRaw): boolean {\n  return place.place_id.lastIndexOf(\"itin_car_\") !== -1;\n}\n\nexport function isValidLat(lat: number): boolean {\n  return Number.isFinite(lat) && lat >= -90 && lat <= 90;\n}\n\nexport function isValidLng(lng: number): boolean {\n  return Number.isFinite(lng) && lng >= -180 && lng <= 180;\n}\n\nexport function isValidLatLng(arr: LatLngArray): boolean {\n  return (\n    Array.isArray(arr) &&\n    arr.length === 2 &&\n    isValidLat(arr[0]) &&\n    isValidLng(arr[1])\n  );\n}\n"],"file":"map.js"}