{"version":3,"sources":["../../src/TripOptions/styled.ts"],"names":["ScrollContainer","SVG","styled","css","Check","PlusCircle","isServerEnv","modeButtonAriaLabel","TripOptionsContainer","div","TripOptionsSubContainer","TransitOptionsContainer","buttonIconCss","GreenCheck","UncheckedIcon","Image","img","FeaturedOptionImageWrapper","ModeIconWrapper","span","QuestionButton","button","attrs","FeaturedOptionQuestionContainer","MaxHeightImage","OptionButton","props","ariaChecked","selected","ariaLabel","role","tabIndex","disabled","OptionLabel","OptionIcon","OptionImage","iconFillOverride","Checkbox","mode","inset","FeaturedOptionContainer","OverlayContainer","OverlayHeader","h3","OverlayOptions","ul","ScrollableRow"],"mappings":"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","sourcesContent":["import ScrollContainer from \"react-indiana-drag-scroll\";\nimport SVG from \"react-inlinesvg\"\nimport styled, { css } from \"styled-components\";\nimport { Check } from \"@styled-icons/bootstrap/Check\";\nimport { PlusCircle } from \"@styled-icons/boxicons-regular/PlusCircle\";\nimport { isServerEnv } from \"./util\";\n// Prettier does not support typescript annotation\n// eslint-disable-next-line prettier/prettier\nimport type { ButtonProps } from \"./Checkbox\"\n\n// todo: move this string to localization file (and possibly add more exact info on each particular mode)\nconst modeButtonAriaLabel = \"Opens a dialog that describes this mode, with optional links to third party services.\";\n\nexport const TripOptionsContainer = styled.div`\n  background-color: #0d5eac;\n  color: white;\n  font-weight: 40;\n  max-width: 992px; /* Maximum mobile width */\n  min-height: 400px;\n`;\nexport const TripOptionsSubContainer = styled.div`\n  max-width: 700px;\n  padding: 12px;\n`;\n\nexport const TransitOptionsContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  > button {\n    flex: 1;\n  }\n`;\n\nexport const buttonIconCss = css`\n  border-radius: 50%;\n  height: 2.5em;\n  margin-bottom: 10px;\n  width: 2.5em;\n  z-index: 10;\n`;\n\nexport const GreenCheck = styled(Check)`\n  ${buttonIconCss}\n  background-color: rgb(84, 174, 88);\n  color: white;\n`;\n\nexport const UncheckedIcon = styled(PlusCircle)`\n  ${buttonIconCss}\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n`;\n\nexport const FeaturedOptionImageWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 1em;\n\n  * {\n    max-height: 200px;\n    width: 100%; /* safari requires explicit width to render svg */\n  }\n`;\n\nexport const ModeIconWrapper = styled.span`\n/* Adjust the checkmark/plus if it is next to a custom icon */\n  ~ ${/* sc-selector */ GreenCheck},\n  ~ ${/* sc-selector */ UncheckedIcon} {\n    height: 1.5em;\n    margin-bottom: -1em;\n    position: relative;\n    right: -30px;\n    top: -50px;\n    width: 1.5em;\n  }\n\n  /* Custom icon for the item, should it be present */\n  & svg {\n    fill: white;\n    height: 3em;\n    position: relative;\n    width: 3em;\n  }\n`;\n\nexport const QuestionButton = styled.button.attrs({\n  \"aria-label\": modeButtonAriaLabel\n})`\n  background-color: rgba(0, 0, 0, 0);\n  border: none;\n  color: white;\n  cursor: pointer;\n  float: right;\n  opacity: 0.5;\n  > svg {\n    height: 1em;\n    width: 1em;\n  }\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const FeaturedOptionQuestionContainer = styled.div.attrs({\n  \"aria-label\": modeButtonAriaLabel\n})`\n  cursor: pointer;\n\n  &:hover ${QuestionButton} {\n    opacity: 1;\n  }\n`;\n\nexport const MaxHeightImage = styled(Image)`\n  max-height: 200px;\n`;\n\n\nexport const OptionButton = styled.button.attrs(( props: ButtonProps ) => ( {\n  \"aria-checked\": props.ariaChecked || props.selected,\n  \"aria-label\": props.ariaLabel,\n  role: \"checkbox\",\n  tabIndex: 0\n} ))`\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0);\n  border-color: ${(props: ButtonProps) => props.selected ? \"white\" : \"lightgrey\"};\n  border-radius: 7px;\n  border: solid 1px;\n  color: white;\n  cursor: ${(props: ButtonProps) => props.disabled ? \"not-allowed\" : \"pointer\"};\n  display: flex;\n  grid-gap: 10px;\n  justify-content: space-between;\n  margin-top: 7px;\n  min-width: 100%;\n  opacity: ${(props: ButtonProps) => (props.selected ? \"1\" : \"0.65\")};\n  padding: 7px 5px;\n  svg {\n    @media (max-width: 768px) {\n      max-height: 20px;\n      max-width: 20px;\n    }\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const OptionLabel = styled.div`\n  flex: 2;\n  text-align: left;\n`;\n\nexport const OptionIcon = styled.div`\n  > svg {\n    margin-bottom: 0px;\n  }\n`;\n\nexport const OptionImage = styled(SVG)`\n  max-height: 20px;\n  width: 50px;\n  ${(props: { iconFillOverride?: string }) => (props.iconFillOverride ? `fill: ${props.iconFillOverride};` : \"\")}\n`;\n\n\nexport const Checkbox = styled.button.attrs(( props: ButtonProps ) => ( {\n  \"aria-checked\": props.ariaChecked || props.selected,\n  \"aria-label\": props.ariaLabel,\n  role: \"checkbox\",\n  tabIndex: 0,\n} ))`\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0);\n  border: none;\n  color: white;\n  cursor: ${(props:ButtonProps) => props.disabled ? \"not-allowed\" : \"pointer\"};\n  display: flex;\n  flex-direction: column;\n  min-width: ${(props: ButtonProps) => (\n    props.mode === \"WALK\" || props.mode === \"BICYCLE\"\n      ? \"50px\"\n      : \"77px\"\n  )};\n  opacity: ${(props: ButtonProps) => (props.selected ? \"1\" : \"0.65\")};\n  padding: 20px 0px;\n  white-space: pre-wrap;\n\n  ${(props: ButtonProps) => (props.inset ? `\n    margin: 20px 0;\n    position: relative;\n\n    ${UncheckedIcon} {\n      background: #0d5eac;\n    }\n\n    ${GreenCheck}, ${UncheckedIcon} {\n      position: absolute;\n      right: 5.5%;\n      top: 11%;\n      @media (max-width: 768px) {\n        max-height: 20px;\n        max-width: 20px;\n      }\n    }\n  ` : \"\")}\n`;\n\nexport const FeaturedOptionContainer = styled.div`\n  display: flex;\n  min-height: 200px; /* ensures that if the featured image is too small, there is still \"padding\" */\n  > div {\n    flex: 1;\n  }\n`;\n\nexport const OverlayContainer = styled.div`\n  padding: 15px;\n`;\n\nexport const OverlayHeader = styled.h3`\n  text-align: center;\n`;\n\nexport const OverlayOptions = styled.ul`\n  list-style: none;\n  margin-left: 0;\n  padding-left: 0;\n\n  li > a {\n    align-items: center;\n    background-color: #fff;\n    border-radius: 7px;\n    color: #000;\n    display: flex;\n    height: 40px;\n    justify-content: space-between;\n    margin-bottom: 10px;\n    padding: 10px;\n    padding-bottom: 5px;\n    text-decoration: none;\n    .label, .label * {\n      height: 40px;\n    }\n    .open-link {\n      color: #777;\n    }\n  }\n`;\n\n\n// The ScrollContainer doesn't work in the jsdom/server environment, so replace it with a div\nexport const ScrollableRow = styled(isServerEnv ? \"div\" : ScrollContainer)<{ hideScrollbars: boolean }>`\n  background-color: #0a4c8d;\n  display: flex;\n  overflow-x: scroll;\n  padding: 0 12px;\n\n  /* Individual item in the row*/\n  > button {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    margin-right: 24px;\n  }\n  \n  /* hover effects */\n  &:hover > button:hover {\n    opacity: 1;\n  }\n  &:hover > button:hover svg {\n    opacity: 1;\n  }\n\n  -ms-overflow-style: none;  /* Trident */\n  scrollbar-width: none;  /* Gecko */\n\n  &::-webkit-scrollbar {\n    display: none; /* Webkit */\n  }\n`;\n"],"file":"styled.js"}