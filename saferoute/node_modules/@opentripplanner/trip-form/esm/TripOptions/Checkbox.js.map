{"version":3,"sources":["../../src/TripOptions/Checkbox.tsx"],"names":["React","TriMetModeIcon2021","TriMetModeIcon","S","Checkbox","props","ariaChecked","ariaLabel","checkboxIcons","checked","children","className","disabled","innerRef","inset","mode","onClick","selected","SimpleModeIcon","modeIcon","GreenCheck","PlusIcon","unchecked","UncheckedIcon"],"mappings":"AAAA,OAAOA,KAAP,MAAuD,OAAvD,C,CACA;AACA;;AACA,SAASC,kBAAkB,IAAIC,cAA/B,QAAqD,wBAArD;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAcA,eAAe,SAASC,QAAT,CACbC,KADa,EASC;AACd,MACEC,WADF,GAeID,KAfJ,CACEC,WADF;AAAA,MAEEC,SAFF,GAeIF,KAfJ,CAEEE,SAFF;AAAA,MAGEC,aAHF,GAeIH,KAfJ,CAGEG,aAHF;AAAA,MAIEC,OAJF,GAeIJ,KAfJ,CAIEI,OAJF;AAAA,MAKEC,QALF,GAeIL,KAfJ,CAKEK,QALF;AAAA,MAMEC,SANF,GAeIN,KAfJ,CAMEM,SANF;AAAA,MAOEC,QAPF,GAeIP,KAfJ,CAOEO,QAPF;AAAA,MAQEC,QARF,GAeIR,KAfJ,CAQEQ,QARF;AAAA,MASEC,KATF,GAeIT,KAfJ,CASES,KATF;AAAA,MAUEC,IAVF,GAeIV,KAfJ,CAUEU,IAVF;AAAA,MAWEC,OAXF,GAeIX,KAfJ,CAWEW,OAXF;AAAA,MAYEC,QAZF,GAeIZ,KAfJ,CAYEY,QAZF;AAAA,8BAeIZ,KAfJ,CAcEa,cAdF;AAAA,MAcEA,cAdF,sCAcmBhB,cAdnB;AAiBA,MAAMiB,QAAQ,GAAGJ,IAAI,iBAAI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEA;AAAtB,IAAzB;AACA,MAAMK,UAAU,GAAG,CAAAZ,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEC,OAAf,KAA0BN,CAAC,CAACiB,UAA/C;AACA,MAAMC,QAAQ,GAAG,CAAAb,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEc,SAAf,KAA4BnB,CAAC,CAACoB,aAA/C;AAEA,sBACE,oBAAC,CAAD,CAAG,QAAH;AACE,IAAA,WAAW,EAAEjB,WADf;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,SAAS,EAAEI,SAHb;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,KAAK,EAAEE,KALT;AAME,IAAA,IAAI,EAAEC,IANR;AAOE,IAAA,GAAG,EAAEF,QAPP;AAQE,IAAA,OAAO,EAAEG,OARX;AASE,IAAA,QAAQ,EAAEC;AATZ,KAWGF,IAAI,iBAAI,oBAAC,CAAD,CAAG,eAAH,QAAoBI,QAApB,CAXX,EAYGV,OAAO,gBAAG,oBAAC,UAAD,OAAH,gBAAoB,oBAAC,QAAD,OAZ9B,EAaGC,QAbH,CADF;AAiBD","sourcesContent":["import React, { FunctionComponent, ReactElement } from \"react\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore FIXME: Create TypeScript types for the icons package.\nimport { TriMetModeIcon2021 as TriMetModeIcon } from \"@opentripplanner/icons\";\nimport * as S from \"./styled\";\nimport { CheckboxIcons } from \"./types\";\n\n// FIXME: Move this to @opentripplanner/types added in https://github.com/opentripplanner/otp-ui/pull/281\nexport interface ButtonProps {\n  ariaChecked?: boolean;\n  ariaLabel?: string;\n  disabled?: boolean;\n  inset?: boolean;\n  mode?: string;\n  onClick(): void;\n  selected: boolean;\n}\n\nexport default function Checkbox(\n  props: {\n    checkboxIcons?: CheckboxIcons;\n    checked: boolean;\n    children: React.ReactNode | string;\n    className?: string;\n    innerRef?: React.MutableRefObject<HTMLInputElement>;\n    SimpleModeIcon?: FunctionComponent<{ mode: string }>;\n  } & ButtonProps\n): ReactElement {\n  const {\n    ariaChecked,\n    ariaLabel,\n    checkboxIcons,\n    checked,\n    children,\n    className,\n    disabled,\n    innerRef,\n    inset,\n    mode,\n    onClick,\n    selected,\n    // If no icon is passed, TriMetModIcon is the default\n    SimpleModeIcon = TriMetModeIcon\n  } = props;\n\n  const modeIcon = mode && <SimpleModeIcon mode={mode} />;\n  const GreenCheck = checkboxIcons?.checked || S.GreenCheck;\n  const PlusIcon = checkboxIcons?.unchecked || S.UncheckedIcon;\n\n  return (\n    <S.Checkbox\n      ariaChecked={ariaChecked}\n      ariaLabel={ariaLabel}\n      className={className}\n      disabled={disabled}\n      inset={inset}\n      mode={mode}\n      ref={innerRef}\n      onClick={onClick}\n      selected={selected}\n    >\n      {mode && <S.ModeIconWrapper>{modeIcon}</S.ModeIconWrapper>}\n      {checked ? <GreenCheck /> : <PlusIcon />}\n      {children}\n    </S.Checkbox>\n  );\n}\n"],"file":"Checkbox.js"}