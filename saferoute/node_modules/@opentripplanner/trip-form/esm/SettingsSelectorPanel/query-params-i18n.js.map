{"version":3,"sources":["../../src/SettingsSelectorPanel/query-params-i18n.tsx"],"names":["flatten","React","FormattedMessage","defaultEnglishMessages","defaultMessages","METERS_PER_MILE","SECONDS_PER_HOUR","roundMeters","meters","Math","round","getDurationOptions","intl","minuteOptions","map","minutes","text","formatNumber","style","unit","unitDisplay","value","getDistanceOptionsInMiles","mileOptions","miles","formatMessage","defaultMessage","description","id","centimiles","trim","getSpeedOptionsInMilesPerHour","milesPerHourOptions","mph","Number","toFixed","getBikeTripOptions","opts","getQueryParamMessagesWithI18n","maxWalkDistance","label","options","walkReluctance","labelLow","labelHigh","maxBikeDistance","optimizeBike","maxWalkTime","walkSpeed","maxBikeTime","bikeSpeed","maxEScooterDistance","watts","wheelchair"],"mappings":"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","sourcesContent":["import flatten from \"flat\";\nimport React from \"react\";\nimport { FormattedMessage, IntlShape } from \"react-intl\";\n\n// eslint-disable-next-line prettier/prettier\nimport type { CustomQueryParameters } from \"../types\";\n\n// Load the default messages.\nimport defaultEnglishMessages from \"../../i18n/en-US.yml\";\n\n// HACK: We should flatten the messages loaded above because\n// the YAML loaders behave differently between webpack and our version of jest:\n// - the yaml loader for webpack returns a nested object,\n// - the yaml loader for jest returns messages with flattened ids.\nexport const defaultMessages: Record<string, string> = flatten(\n  defaultEnglishMessages\n);\n\nconst METERS_PER_MILE = 1609.3;\nconst SECONDS_PER_HOUR = 3600;\n\n/**\n * Rounds a distance to the nearest integer if over 1000 meters.\n * Leave one decimal point otherwise.\n * (This is to be consistent with the rounding scheme in core-utils/query-params.)\n * @param meters The distance in meters to round.\n */\nfunction roundMeters(meters: number): number {\n  if (meters >= 1000) return Math.round(meters);\n  return Math.round(meters * 10) / 10;\n}\n\n/**\n * Gets a list of duration options.\n */\nfunction getDurationOptions(intl, minuteOptions) {\n  // intl is needed because <FormattedMessage> can't be used inside <option>.\n  return minuteOptions.map(minutes => ({\n    text:\n      minutes === 60\n        ? intl.formatNumber(1, {\n            style: \"unit\",\n            unit: \"hour\",\n            unitDisplay: \"long\"\n          })\n        : intl.formatNumber(minutes, {\n            style: \"unit\",\n            unit: \"minute\",\n            unitDisplay: \"long\"\n          }),\n    value: minutes\n  }));\n}\n\n/**\n * Gets a list of distance options in miles.\n */\nfunction getDistanceOptionsInMiles(intl, mileOptions) {\n  // intl is needed because <FormattedMessage> can't be used inside <option>.\n  return mileOptions.map(miles => ({\n    text: intl.formatMessage(\n      {\n        defaultMessage: `${miles} miles`,\n        description: \"Displays a distance in miles\",\n        id: \"otpUi.queryParameters.distanceInMiles\"\n      },\n      {\n        // 1 mile = 100 \"centimiles\". Pass that so that formatjs can pick up\n        // English exceptions for 1/10 mile, 1/4 mile, etc.\n        // (Decimal numbers don't work for the case selector.)\n        centimiles: miles * 100,\n        miles\n      }\n    ).trim(),\n    value: roundMeters(miles * METERS_PER_MILE)\n  }));\n}\n\n/**\n * Gets a list of speed options in miles per hour.\n */\nfunction getSpeedOptionsInMilesPerHour(intl, milesPerHourOptions) {\n  // intl is needed because <FormattedMessage> can't be used inside <option>.\n  return milesPerHourOptions.map(mph => ({\n    text: intl.formatMessage(\n      {\n        defaultMessage: `${mph} mph`,\n        description: \"Displays a speed in miles per hour\",\n        id: \"otpUi.queryParameters.speedInMilesPerHour\"\n      },\n      {\n        mph\n      }\n    ),\n    value: Number(((mph * METERS_PER_MILE) / SECONDS_PER_HOUR).toFixed(2))\n  }));\n}\n\n/**\n * Gets the bike trip optimization options.\n */\nfunction getBikeTripOptions(intl) {\n  const opts = [\n    {\n      text: intl.formatMessage({\n        defaultMessage:\n          defaultMessages[\"otpUi.queryParameters.optimizeBikeSpeed\"],\n        description: \"Option label for speed\",\n        id: \"otpUi.queryParameters.optimizeBikeSpeed\"\n      }),\n      value: \"QUICK\"\n    },\n    {\n      text: intl.formatMessage({\n        defaultMessage:\n          defaultMessages[\"otpUi.queryParameters.optimizeBikeFriendly\"],\n        description: \"Option label for bike-friendly trips\",\n        id: \"otpUi.queryParameters.optimizeBikeFriendly\"\n      }),\n      value: \"SAFE\"\n    },\n    {\n      text: intl.formatMessage({\n        defaultMessage:\n          defaultMessages[\"otpUi.queryParameters.optimizeBikeFlat\"],\n        description: \"Option label for flat bike trips\",\n        id: \"otpUi.queryParameters.optimizeBikeFlat\"\n      }),\n      value: \"FLAT\"\n    }\n  ];\n\n  return opts;\n}\n\n/**\n * Obtains a set of custom query parameters with localized labels and options.\n */\nexport function getQueryParamMessagesWithI18n(\n  intl: IntlShape\n): CustomQueryParameters {\n  return {\n    maxWalkDistance: {\n      label: (\n        <FormattedMessage\n          defaultMessage={\n            defaultMessages[\"otpUi.queryParameters.maxWalkDistance\"]\n          }\n          description=\"Max walk distance label\"\n          id=\"otpUi.queryParameters.maxWalkDistance\"\n        />\n      ),\n      options: getDistanceOptionsInMiles(intl, [0.1, 0.25, 0.5, 0.75, 1, 2, 5])\n    },\n    walkReluctance: {\n      label: (\n        <FormattedMessage\n          defaultMessage={\n            defaultMessages[\"otpUi.queryParameters.walkReluctance\"]\n          }\n          description=\"Walk reluctance label\"\n          id=\"otpUi.queryParameters.walkReluctance\"\n        />\n      ),\n      labelLow: <FormattedMessage\n        defaultMessage={\n          defaultMessages[\"otpUi.queryParameters.walkReluctanceLow\"]\n        }\n        description=\"Label displayed at left side of walk reluctance slider\"\n        id=\"otpUi.queryParameters.walkReluctanceLow\"\n      />,\n      labelHigh: <FormattedMessage\n        defaultMessage={\n          defaultMessages[\"otpUi.queryParameters.walkReluctanceHigh\"]\n        }\n        description=\"Label displayed at right side of walk reluctance slider\"\n        id=\"otpUi.queryParameters.walkReluctanceHigh\"\n      />\n    },\n    maxBikeDistance: {\n      label: (\n        <FormattedMessage\n          defaultMessage={\n            defaultMessages[\"otpUi.queryParameters.maxBikeDistance\"]\n          }\n          description=\"Max bike distance label\"\n          id=\"otpUi.queryParameters.maxBikeDistance\"\n        />\n      ),\n      options: getDistanceOptionsInMiles(intl, [\n        0.25,\n        0.5,\n        0.75,\n        1,\n        2,\n        3,\n        5,\n        10,\n        20,\n        30\n      ])\n    },\n    optimizeBike: {\n      label: (\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.queryParameters.optimizeFor\"]}\n          description=\"Optimize selector label\"\n          id=\"otpUi.queryParameters.optimizeFor\"\n        />\n      ),\n      options: () => getBikeTripOptions(intl)\n    },\n    maxWalkTime: {\n      label: (\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.queryParameters.maxWalkTime\"]}\n          description=\"Max walk time label\"\n          id=\"otpUi.queryParameters.maxWalkTime\"\n        />\n      ),\n      options: getDurationOptions(intl, [5, 10, 15, 20, 30, 45, 60])\n    },\n    walkSpeed: {\n      label: (\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.queryParameters.walkSpeed\"]}\n          description=\"Max walk speed label\"\n          id=\"otpUi.queryParameters.walkSpeed\"\n        />\n      ),\n      options: getSpeedOptionsInMilesPerHour(intl, [2, 3, 4])\n    },\n    maxBikeTime: {\n      label: (\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.queryParameters.maxBikeTime\"]}\n          description=\"Max bike time label\"\n          id=\"otpUi.queryParameters.maxBikeTime\"\n        />\n      ),\n      options: getDurationOptions(intl, [5, 10, 15, 20, 30, 45, 60])\n    },\n    bikeSpeed: {\n      label: (\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.queryParameters.bikeSpeed\"]}\n          description=\"Bike speed selector label\"\n          id=\"otpUi.queryParameters.bikeSpeed\"\n        />\n      ),\n      options: getSpeedOptionsInMilesPerHour(intl, [6, 8, 10, 12])\n    },\n    maxEScooterDistance: {\n      label: (\n        <FormattedMessage\n          defaultMessage={\n            defaultMessages[\"otpUi.queryParameters.maxEScooterDistance\"]\n          }\n          description=\"Max e-scooter distance label\"\n          id=\"otpUi.queryParameters.maxEScooterDistance\"\n        />\n      ),\n      options: getDistanceOptionsInMiles(intl, [\n        0.25,\n        0.5,\n        0.75,\n        1,\n        2,\n        3,\n        5,\n        10,\n        20,\n        30\n      ])\n    },\n    watts: {\n      label: (\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.queryParameters.watts\"]}\n          description=\"E-scooter power label\"\n          id=\"otpUi.queryParameters.watts\"\n        />\n      ),\n      options: [\n        {\n          text: intl.formatMessage({\n            defaultMessage:\n              defaultMessages[\"otpUi.queryParameters.watts125kidsHoverboard\"],\n            description: \"Label for a kid's e-scooter\",\n            id: \"otpUi.queryParameters.watts125kidsHoverboard\"\n          }),\n          value: 125\n        },\n        {\n          text: intl.formatMessage({\n            defaultMessage:\n              defaultMessages[\n                \"otpUi.queryParameters.watts250entryLevelEscooter\"\n              ],\n            description: \"Label for an entry-level e-scooter\",\n            id: \"otpUi.queryParameters.watts250entryLevelEscooter\"\n          }),\n          value: 250\n        },\n        {\n          text: intl.formatMessage({\n            defaultMessage:\n              defaultMessages[\"otpUi.queryParameters.watts500robustEscooter\"],\n            description: \"Label for a robust e-scooter\",\n            id: \"otpUi.queryParameters.watts500robustEscooter\"\n          }),\n          value: 500\n        },\n        {\n          text: intl.formatMessage({\n            defaultMessage:\n              defaultMessages[\n                \"otpUi.queryParameters.watts1500powerfulEscooter\"\n              ],\n            description: \"Label for a powerful e-scooter\",\n            id: \"otpUi.queryParameters.watts1500powerfulEscooter\"\n          }),\n          value: 1500\n        }\n      ]\n    },\n    wheelchair: {\n      label: (\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.queryParameters.wheelchair\"]}\n          description=\"Label for wheelchair option\"\n          id=\"otpUi.queryParameters.wheelchair\"\n        />\n      )\n    }\n  };\n}\n"],"file":"query-params-i18n.js"}