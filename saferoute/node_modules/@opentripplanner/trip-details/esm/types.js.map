{"version":3,"sources":["../src/types.ts"],"names":["FareTableText"],"mappings":"AAAA;AACA;AAoBA,WAAYA,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a","sourcesContent":["// Prettier does not recognize the import type syntax.\n// eslint-disable-next-line prettier/prettier\nimport type { MassUnitOption, Fare, Leg, FareDetails, Itinerary, Money } from \"@opentripplanner/types\";\nimport type { ReactElement } from \"react\";\n\nexport interface CaloriesDetailsProps {\n  bikeSeconds: number;\n  calories: number;\n  walkSeconds: number;\n}\n\nexport interface CO2ConfigType {\n  carbonIntensity?: Record<string, number>;\n  units?: MassUnitOption;\n  enabled?: boolean;\n}\n\nexport interface DepartureDetailsProps {\n  departureDate: Date;\n}\n\nexport enum FareTableText {\n  regular = \"regular\",\n  youth = \"youth\",\n  senior = \"senior\",\n  special = \"special\",\n  cash = \"cash\",\n  electronic = \"electronic\"\n}\n\nexport interface FareTableLayout {\n  cols: {\n    header: FareTableText;\n    key: string;\n  }[];\n  header: FareTableText;\n}\nexport interface TransitFareData {\n  [key: string]: Money\n}\n\nexport interface FareDetailsProps {\n  maxTNCFare: number;\n  minTNCFare: number;\n  transitFares: TransitFareData;\n}\n\nexport interface FareLegTableProps {\n  layout?: FareTableLayout[];\n  legs?: Leg[];\n  transitFareDetails?: FareDetails;\n  transitFares?: TransitFareData;\n}\n\nexport interface TransitFareProps {\n  fareKey: string;\n  fareNameFallback?: ReactElement;\n  fareKeyNameMap: {\n    [key: string]: string;\n  };\n  transitFares: Fare;\n}\n\nexport interface TripDetailsProps {\n  /**\n   * Slot for a custom component to render the expandable section for calories.\n   */\n  CaloriesDetails?: React.ElementType<CaloriesDetailsProps>;\n  /**\n   * Used for additional styling with styled components for example.\n   */\n  className?: string;\n  /**\n   * Determines which transit fare should be displayed by default, should there be multiple transit fare types.\n   */\n  defaultFareKey?: string;\n  /**\n   * Slot for a custom component to render the expandable section for departure.\n   */\n  DepartureDetails?: React.ElementType<DepartureDetailsProps>;\n  /**\n   * If this is set to true, a row will be added to the trip details displaying how\n   * many calories were burned on the active legs of the trip.\n   */\n  displayCalories?: boolean;\n  /**\n   * Slot for a custom component to render the expandable section for fares.\n   */\n  FareDetails?: React.ElementType<FareDetailsProps>;\n  /**\n   * Column and table configuration for fare details/fare by leg table.\n   */\n  fareDetailsLayout?: FareTableLayout[];\n  /**\n   * Mapping between fare keys and human-readable names for them.\n   */\n  fareKeyNameMap?: {\n    [name: string]: string;\n  };\n  /**\n   * Itinerary that the user has selected to view, contains multiple legs.\n   */\n  itinerary: Itinerary;\n  /**\n   * Object containing the CO2 config.\n   */\n  co2Config?: CO2ConfigType;\n}\n"],"file":"types.js"}