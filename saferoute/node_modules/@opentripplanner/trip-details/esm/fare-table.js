import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import flatten from "flat";
import React from "react";
import styled from "styled-components";
import { FormattedMessage } from "react-intl";
import { Transfer } from "@styled-icons/boxicons-regular/Transfer";
import { boldText, renderFare } from "./utils";
import { FareTableText } from "./types"; // Load the default messages.

import defaultEnglishMessages from "../i18n/en-US.yml"; // HACK: We should flatten the messages loaded above because
// the YAML loaders behave differently between webpack and our version of jest:
// - the yaml loader for webpack returns a nested object,
// - the yaml loader for jest returns messages with flattened ids.

var defaultMessages = flatten(defaultEnglishMessages);
var TableHeader = styled.thead.withConfig({
  displayName: "fare-table__TableHeader",
  componentId: "sc-i0o2oh-0"
})(["th{font-weight:normal;min-width:5ch;padding:0.75em 1.5em;text-align:center;}th:nth-of-type(2n + 1){background:#cccccc22;}th.main{background:#333333;color:#ffffffcc;}"]);
var Table = styled.table.withConfig({
  displayName: "fare-table__Table",
  componentId: "sc-i0o2oh-1"
})(["border-collapse:collapse;display:block;margin-bottom:16px;padding:0;td{text-align:right;}td:nth-of-type(2n + 1){background:#cccccc22;}td.no-zebra{background:none;}th:first-of-type{height:40px;}"]);
var TransferIcon = styled(Transfer).withConfig({
  displayName: "fare-table__TransferIcon",
  componentId: "sc-i0o2oh-2"
})(["padding-left:4px;"]);

var getFormattedTextForConfigKey = function getFormattedTextForConfigKey(textKey) {
  switch (textKey) {
    case FareTableText.cash:
      return /*#__PURE__*/React.createElement(FormattedMessage, {
        defaultMessage: defaultMessages["otpUi.TripDetails.fareDetailsHeaders.cash"],
        id: "otpUi.TripDetails.fareDetailsHeaders.cash"
      });

    case FareTableText.electronic:
      return /*#__PURE__*/React.createElement(FormattedMessage, {
        defaultMessage: defaultMessages["otpUi.TripDetails.fareDetailsHeaders.electronic"],
        id: "otpUi.TripDetails.fareDetailsHeaders.electronic"
      });

    case FareTableText.youth:
      return /*#__PURE__*/React.createElement(FormattedMessage, {
        defaultMessage: defaultMessages["otpUi.TripDetails.fareDetailsHeaders.youth"],
        id: "otpUi.TripDetails.fareDetailsHeaders.youth"
      });

    case FareTableText.senior:
      return /*#__PURE__*/React.createElement(FormattedMessage, {
        defaultMessage: defaultMessages["otpUi.TripDetails.fareDetailsHeaders.senior"],
        id: "otpUi.TripDetails.fareDetailsHeaders.senior"
      });

    case FareTableText.special:
      return /*#__PURE__*/React.createElement(FormattedMessage, {
        defaultMessage: defaultMessages["otpUi.TripDetails.fareDetailsHeaders.special"],
        id: "otpUi.TripDetails.fareDetailsHeaders.special"
      });

    case FareTableText.regular:
    default:
      return /*#__PURE__*/React.createElement(FormattedMessage, {
        defaultMessage: defaultMessages["otpUi.TripDetails.fareDetailsHeaders.regular"],
        id: "otpUi.TripDetails.fareDetailsHeaders.regular"
      });
  }
};

var FareTypeTable = function FareTypeTable(_ref) {
  var cols = _ref.cols,
      fareTotals = _ref.fareTotals,
      header = _ref.header,
      legs = _ref.legs;
  var colsToRender = cols.filter(function (col) {
    return fareTotals[col.key];
  });

  if (colsToRender.length) {
    return /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHeader, null, /*#__PURE__*/React.createElement("th", {
      className: "main"
    }, boldText(getFormattedTextForConfigKey(header))), colsToRender.map(function (col) {
      var _fare$currency;

      var fare = fareTotals[col.key];
      return /*#__PURE__*/React.createElement("th", {
        key: col.key
      }, boldText(getFormattedTextForConfigKey(col.header)), /*#__PURE__*/React.createElement("br", null), renderFare(fare === null || fare === void 0 ? void 0 : (_fare$currency = fare.currency) === null || _fare$currency === void 0 ? void 0 : _fare$currency.currencyCode, ((fare === null || fare === void 0 ? void 0 : fare.cents) || 0) / 100));
    })), legs.map(function (leg, index) {
      return /*#__PURE__*/React.createElement("tr", {
        key: index
      }, /*#__PURE__*/React.createElement("td", {
        className: "no-zebra"
      }, leg.routeShortName), colsToRender.map(function (col) {
        var _fare$price$currency;

        var fare = leg.fares[col.key];
        return /*#__PURE__*/React.createElement("td", {
          key: col.key
        }, renderFare(fare === null || fare === void 0 ? void 0 : (_fare$price$currency = fare.price.currency) === null || _fare$price$currency === void 0 ? void 0 : _fare$price$currency.currencyCode, ((fare === null || fare === void 0 ? void 0 : fare.price.cents) || 0) / 100), (fare === null || fare === void 0 ? void 0 : fare.isTransfer) && /*#__PURE__*/React.createElement(TransferIcon, {
          size: 16
        }));
      }));
    }));
  }

  return null;
};

var FareLegDetails = function FareLegDetails(_ref2) {
  var layout = _ref2.layout,
      legs = _ref2.legs,
      transitFareDetails = _ref2.transitFareDetails,
      transitFares = _ref2.transitFares;
  var fareKeys = Object.keys(transitFareDetails);
  var legsWithFares = legs.map(function (leg, index) {
    var fares = fareKeys.reduce(function (prev, key) {
      var _transitFareDetails$k;

      var fareForKey = (_transitFareDetails$k = transitFareDetails[key]) === null || _transitFareDetails$k === void 0 ? void 0 : _transitFareDetails$k.find(function (detail) {
        return detail.legIndex === index;
      });

      if (fareForKey) {
        prev[key] = fareForKey;
      }

      return prev;
    }, {});
    return _objectSpread(_objectSpread({}, leg), {}, {
      fares: fares
    });
  }).filter(function (leg) {
    return leg.transitLeg;
  });
  return /*#__PURE__*/React.createElement("div", null, layout.map(function (config) {
    return /*#__PURE__*/React.createElement(FareTypeTable, {
      cols: config.cols,
      fareTotals: transitFares,
      header: config.header,
      key: config.header,
      legs: legsWithFares
    });
  }));
};

export default FareLegDetails;
//# sourceMappingURL=fare-table.js.map