{"version":3,"sources":["../src/index.tsx"],"names":["flatten","coreUtils","React","FormattedMessage","FormattedNumber","CalendarAlt","Heartbeat","MoneyBillAlt","Leaf","Route","S","TripDetail","FareLegTable","boldText","renderFare","defaultEnglishMessages","defaultMessages","subText","contents","dietaryLink","CO2DescriptionLink","DefaultCaloriesDetails","bikeSeconds","calories","walkSeconds","bikeMinutes","Math","round","strong","walkMinutes","TransitFare","fareKey","fareNameFallback","fareKeyNameMap","transitFares","currentFare","name","value","currency","currencyCode","cents","TripDetails","CaloriesDetails","className","defaultFareKey","displayCalories","DepartureDetails","FareDetails","fareDetailsLayout","itinerary","co2Config","fareResult","calculateTncFares","maxTNCFare","minTNCFare","fare","fareDetails","details","companies","legs","forEach","leg","tncData","company","fareKeys","Object","keys","sort","length","defaultFare","TransitFareWrapper","TransitFareSingle","display","map","toLowerCase","departureDate","Date","startTime","calculatePhysicalActivity","bikeDuration","caloriesBurned","walkDuration","co2","enabled","calculateEmissions","carbonIntensity","units","containsFlex","some","isFlex","pickupBookingInfo","filter","info","dropOffBookingInfo","totalDistance","reduce","total","distance","sub","link","extraMessage","Set","message","join","Styled"],"mappings":"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","sourcesContent":["import flatten from \"flat\";\nimport coreUtils from \"@opentripplanner/core-utils\";\nimport React, { ReactElement } from \"react\";\nimport { FormattedMessage, FormattedNumber } from \"react-intl\";\nimport { CalendarAlt } from \"@styled-icons/fa-solid/CalendarAlt\";\nimport { Heartbeat } from \"@styled-icons/fa-solid/Heartbeat\";\nimport { MoneyBillAlt } from \"@styled-icons/fa-solid/MoneyBillAlt\";\nimport { Leaf } from \"@styled-icons/fa-solid/Leaf\";\nimport { Route } from \"@styled-icons/fa-solid/Route\";\n\nimport * as S from \"./styled\";\nimport TripDetail from \"./trip-detail\";\nimport FareLegTable from \"./fare-table\";\nimport { boldText, renderFare } from \"./utils\";\n\nimport {\n  CaloriesDetailsProps,\n  TransitFareProps,\n  TripDetailsProps\n} from \"./types\";\n\n// Load the default messages.\nimport defaultEnglishMessages from \"../i18n/en-US.yml\";\n\n// HACK: We should flatten the messages loaded above because\n// the YAML loaders behave differently between webpack and our version of jest:\n// - the yaml loader for webpack returns a nested object,\n// - the yaml loader for jest returns messages with flattened ids.\nconst defaultMessages: Record<string, string> = flatten(defaultEnglishMessages);\n\nconst subText = contents => <sub>{contents}</sub>;\n\n/**\n * Helper function to specify the link to dietary table.\n */\nfunction dietaryLink(contents: ReactElement): ReactElement {\n  return (\n    <a\n      href=\"https://health.gov/dietaryguidelines/dga2005/document/html/chapter3.htm#table4\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      {contents}\n    </a>\n  );\n}\n\nfunction CO2DescriptionLink(contents: ReactElement): ReactElement {\n  return (\n    <a\n      href=\"https://www.itf-oecd.org/sites/default/files/life-cycle-assessment-calculations-2020.xlsx\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      {contents}\n    </a>\n  );\n}\n\n/**\n * Default rendering if no component is provided for the CaloriesDetails\n * slot in the TripDetails component.\n */\nfunction DefaultCaloriesDetails({\n  bikeSeconds,\n  calories,\n  walkSeconds\n}: CaloriesDetailsProps): ReactElement {\n  return (\n    <FormattedMessage\n      defaultMessage={defaultMessages[\"otpUi.TripDetails.caloriesDescription\"]}\n      description=\"Text describing how the calories relate to the walking and biking duration of a trip.\"\n      id=\"otpUi.TripDetails.caloriesDescription\"\n      values={{\n        bikeMinutes: Math.round(bikeSeconds / 60),\n        calories: Math.round(calories),\n        dietaryLink,\n        strong: boldText,\n        walkMinutes: Math.round(walkSeconds / 60)\n      }}\n    />\n  );\n}\n\n/**\n * Helper component that renders a transit fare entry.\n */\nconst TransitFare = ({\n  fareKey,\n  fareNameFallback,\n  fareKeyNameMap,\n  transitFares\n}: TransitFareProps): ReactElement => {\n  const currentFare = transitFares[fareKey];\n\n  return (\n    <span>\n      <FormattedMessage\n        defaultMessage={defaultMessages[\"otpUi.TripDetails.transitFareEntry\"]}\n        description=\"Text showing the price of tickets on public transportation.\"\n        id=\"otpUi.TripDetails.transitFareEntry\"\n        values={{\n          name: fareKeyNameMap[fareKey] || fareNameFallback || fareKey,\n          strong: boldText,\n          value: renderFare(\n            currentFare.currency.currencyCode,\n            currentFare.cents / 100\n          )\n        }}\n      />\n    </span>\n  );\n};\n\n/**\n * Renders trip details such as departure instructions, fare amount, and calories spent.\n */\nexport function TripDetails({\n  CaloriesDetails = DefaultCaloriesDetails,\n  className = \"\",\n  defaultFareKey = \"regular\",\n  displayCalories = true,\n  DepartureDetails = null,\n  FareDetails = null,\n  fareDetailsLayout,\n  fareKeyNameMap = {},\n  itinerary,\n  co2Config\n}: TripDetailsProps): ReactElement {\n  // process the transit fare\n  const fareResult = coreUtils.itinerary.calculateTncFares(itinerary);\n  const { currencyCode, maxTNCFare, minTNCFare } = fareResult;\n  const transitFares = itinerary?.fare?.fare;\n  const fareDetails = itinerary.fare?.details;\n\n  let companies = \"\";\n  itinerary.legs.forEach(leg => {\n    if (leg.tncData) {\n      companies = leg.tncData.company;\n    }\n  });\n  let fare;\n\n  const fareKeys = transitFares && Object.keys(transitFares).sort();\n\n  if (transitFares && fareKeys.length > 0) {\n    let defaultFare = defaultFareKey;\n    if (!transitFares[defaultFareKey]) {\n      defaultFare = \"regular\";\n    }\n\n    // Depending on if there are additional fares to display either render a <span> or a <details>\n    const TransitFareWrapper =\n      transitFares && fareKeys.length > 1 ? S.TransitFare : S.TransitFareSingle;\n\n    fare = (\n      <S.Fare>\n        <TransitFareWrapper>\n          <summary style={{ display: fareKeys.length > 1 ? \"list-item\" : \"\" }}>\n            <TransitFare\n              fareNameFallback={\n                <FormattedMessage\n                  defaultMessage={\n                    defaultMessages[\"otpUi.TripDetails.transitFare\"]\n                  }\n                  description=\"Text showing the price of tickets on public transportation.\"\n                  id=\"otpUi.TripDetails.transitFare\"\n                />\n              }\n              fareKey={defaultFare}\n              fareKeyNameMap={fareKeyNameMap}\n              transitFares={transitFares}\n            />\n          </summary>\n          {fareDetailsLayout ? (\n            // Show full ƒare details by leg\n            <FareLegTable\n              layout={fareDetailsLayout}\n              legs={itinerary.legs}\n              transitFareDetails={fareDetails}\n              transitFares={transitFares}\n            />\n          ) : (\n            // Just show the fares for each payment type\n            fareKeys.map(fareKey => {\n              // Don't show the default fare twice!\n              if (fareKey === defaultFare) {\n                return null;\n              }\n              return (\n                <TransitFare\n                  fareKey={fareKey}\n                  key={fareKey}\n                  fareKeyNameMap={fareKeyNameMap}\n                  transitFares={transitFares}\n                />\n              );\n            })\n          )}\n        </TransitFareWrapper>\n        {minTNCFare !== 0 && (\n          <S.TNCFare>\n            <br />\n            <FormattedMessage\n              defaultMessage={defaultMessages[\"otpUi.TripDetails.tncFare\"]}\n              description=\"Text showing the price paid to transportation network companies.\"\n              id=\"otpUi.TripDetails.tncFare\"\n              values={{\n                companies: (\n                  // S.TNCFareCompanies capitalizes the TNC company ID (e.g. \"COMPANY\")\n                  // after it is converted to lowercase, so it renders as \"Company\".\n                  <S.TNCFareCompanies>\n                    {companies.toLowerCase()}\n                  </S.TNCFareCompanies>\n                ),\n                maxTNCFare: renderFare(currencyCode, maxTNCFare),\n                minTNCFare: renderFare(currencyCode, minTNCFare),\n                strong: boldText\n              }}\n            />\n          </S.TNCFare>\n        )}\n      </S.Fare>\n    );\n  }\n\n  const departureDate = new Date(itinerary.startTime);\n\n  // Compute calories burned.\n  const {\n    bikeDuration,\n    caloriesBurned,\n    walkDuration\n  } = coreUtils.itinerary.calculatePhysicalActivity(itinerary);\n\n  // Calculate CO2 if it's not provided by the itinerary\n  const co2 =\n    itinerary.co2 ||\n    (co2Config?.enabled &&\n      coreUtils.itinerary.calculateEmissions(\n        itinerary,\n        co2Config?.carbonIntensity,\n        co2Config?.units\n      ));\n\n  // Parse flex info and generate appropriate strings\n  const containsFlex = itinerary.legs.some(coreUtils.itinerary.isFlex);\n  const pickupBookingInfo = itinerary.legs\n    .map(leg => leg.pickupBookingInfo)\n    .filter(info => !!info);\n  const dropOffBookingInfo = itinerary.legs\n    .map(leg => leg.dropOffBookingInfo)\n    .filter(info => !!info);\n  const totalDistance = itinerary.legs.reduce(\n    (total, leg) => total + leg.distance,\n    0\n  );\n\n  return (\n    <S.TripDetails className={className}>\n      {/* this can be presentation as S.TripDetails is already labeled by this */}\n      <S.TripDetailsHeader id=\"trip-details-header\">\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.TripDetails.title\"]}\n          description=\"Title (heading) text of the component.\"\n          id=\"otpUi.TripDetails.title\"\n        />\n      </S.TripDetailsHeader>\n      <S.TripDetailsBody>\n        <TripDetail\n          // Any custom description for the Departure message needs to be handled by the slot.\n          description={\n            DepartureDetails && (\n              <DepartureDetails departureDate={departureDate} />\n            )\n          }\n          icon={<CalendarAlt size={17} />}\n          summary={\n            <S.Timing>\n              <FormattedMessage\n                defaultMessage={defaultMessages[\"otpUi.TripDetails.departure\"]}\n                description=\"Text showing the departure date/time for a trip.\"\n                id=\"otpUi.TripDetails.departure\"\n                values={{\n                  departureDate,\n                  strong: boldText\n                }}\n              />\n            </S.Timing>\n          }\n        />\n        {fare && (\n          <TripDetail\n            // Any custom description for the transit fare needs to be handled by the slot.\n            description={\n              FareDetails && (\n                <FareDetails\n                  maxTNCFare={maxTNCFare}\n                  minTNCFare={minTNCFare}\n                  transitFares={transitFares}\n                />\n              )\n            }\n            icon={<MoneyBillAlt size={17} />}\n            summary={fare}\n          />\n        )}\n        {displayCalories && caloriesBurned > 0 && (\n          <TripDetail\n            icon={<Heartbeat size={17} />}\n            summary={\n              <S.CaloriesSummary>\n                <FormattedMessage\n                  defaultMessage={defaultMessages[\"otpUi.TripDetails.calories\"]}\n                  description=\"Text showing the number of calories for the walking and biking legs of a trip.\"\n                  id=\"otpUi.TripDetails.calories\"\n                  values={{\n                    calories: caloriesBurned,\n                    strong: boldText\n                  }}\n                />\n              </S.CaloriesSummary>\n            }\n            description={\n              CaloriesDetails && (\n                <CaloriesDetails\n                  bikeSeconds={bikeDuration}\n                  calories={caloriesBurned}\n                  walkSeconds={walkDuration}\n                />\n              )\n            }\n          />\n        )}\n        {co2 > 0 && co2Config?.enabled && (\n          <TripDetail\n            icon={<Leaf size={17} />}\n            summary={\n              <S.CO2Summary>\n                <FormattedMessage\n                  defaultMessage={defaultMessages[\"otpUi.TripDetails.co2\"]}\n                  description=\"Text showing the quantity of CO2 emitted by this trip.\"\n                  id=\"otpUi.TripDetails.co2\"\n                  values={{\n                    co2: (\n                      <FormattedNumber\n                        value={Math.round(co2)}\n                        // eslint-disable-next-line react/style-prop-object\n                        style=\"unit\"\n                        unit={co2Config?.units || \"gram\"}\n                        unitDisplay=\"narrow\"\n                      />\n                    ),\n                    strong: boldText,\n                    sub: subText\n                  }}\n                />\n              </S.CO2Summary>\n            }\n            description={\n              <FormattedMessage\n                defaultMessage={\n                  defaultMessages[\"otpUi.TripDetails.co2description\"]\n                }\n                values={{\n                  link: CO2DescriptionLink,\n                  sub: subText,\n                  totalDistance\n                }}\n                description=\"Text explaining how the CO2 emissions is calculated.\"\n                id=\"otpUi.TripDetails.co2description\"\n              />\n            }\n          />\n        )}\n        {containsFlex && (\n          <TripDetail\n            summary={\n              <S.FlexSummary>\n                <FormattedMessage\n                  defaultMessage={\n                    defaultMessages[\"otpUi.TripDetails.tripIncludesFlex\"]\n                  }\n                  description=\"Text stating that portions of the trip include a flex (on-demand) transit service.\"\n                  id=\"otpUi.TripDetails.tripIncludesFlex\"\n                  values={{\n                    extraMessage: [\n                      ...new Set([\n                        ...pickupBookingInfo.map(info => info.message),\n                        ...dropOffBookingInfo.map(info => info.message)\n                      ])\n                    ].join(\" \")\n                  }}\n                />\n              </S.FlexSummary>\n            }\n            icon={<Route size={17} />}\n          />\n        )}\n      </S.TripDetailsBody>\n    </S.TripDetails>\n  );\n}\n\nexport default TripDetails;\n\n// Rename styled components for export\nexport { S as Styled, FareLegTable };\n"],"file":"index.js"}