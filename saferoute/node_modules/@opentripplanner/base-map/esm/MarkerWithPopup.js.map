{"version":3,"sources":["../src/MarkerWithPopup.tsx"],"names":["React","useState","Marker","LeafletStyleMarker","Popup","MarkerWithPopup","children","popupContents","popupProps","position","tooltipContents","showPopup","setShowPopup","showTooltip","setShowTooltip","cursor"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAmC,cAAnC;AACA,SAASC,kBAAT,EAA6BC,KAA7B,QAA0C,UAA1C;;AASA;AACA;AACA;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAME;AAAA,MALxBC,QAKwB,QALxBA,QAKwB;AAAA,MAJxBC,aAIwB,QAJxBA,aAIwB;AAAA,MAHxBC,UAGwB,QAHxBA,UAGwB;AAAA,MAFxBC,QAEwB,QAFxBA,QAEwB;AAAA,MADxBC,eACwB,QADxBA,eACwB;;AACxB,kBAAkCT,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOU,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAsCX,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAOY,WAAP;AAAA,MAAoBC,cAApB;;AAEA;AAAA;AACE;AACA;AACA,wBAAC,MAAD;AACE,MAAA,QAAQ,EAAEL,QAAQ,CAAC,CAAD,CADpB;AAEE,MAAA,SAAS,EAAEA,QAAQ,CAAC,CAAD,CAFrB;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMG,YAAY,CAAC,IAAD,CAAlB;AAAA,OAHX;AAIE,MAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAER,aAAa,GAAG,SAAH,GAAe;AAAtC;AAJT,oBAME;AACE,MAAA,YAAY,EAAE;AAAA,eAAMO,cAAc,CAAC,IAAD,CAApB;AAAA,OADhB;AAEE,MAAA,YAAY,EAAE;AAAA,eAAMA,cAAc,CAAC,KAAD,CAApB;AAAA;AAFhB,OAIGR,QAAQ,iBAAI,oBAAC,kBAAD,OAJf,CANF,EAaGO,WAAW,IAAIH,eAAf,iBACC,oBAAC,KAAD,CACE;AADF,mBAEMF,UAFN;AAGE,MAAA,MAAM,EAAC,OAHT;AAIE,MAAA,WAAW,EAAE,KAJf;AAKE,MAAA,YAAY,EAAE,KALhB;AAME,MAAA,QAAQ,EAAEC,QAAQ,CAAC,CAAD,CANpB;AAOE,MAAA,SAAS,EAAEA,QAAQ,CAAC,CAAD;AAPrB,QASGC,eATH,CAdJ,EA0BGC,SAAS,IAAIJ,aAAb,iBACC,oBAAC,KAAD,CACE;AADF,mBAEMC,UAFN;AAGE,MAAA,QAAQ,EAAEC,QAAQ,CAAC,CAAD,CAHpB;AAIE,MAAA,SAAS,EAAEA,QAAQ,CAAC,CAAD,CAJrB;AAKE,MAAA,QAAQ,EAAC,MALX;AAME,MAAA,OAAO,EAAE;AAAA,eAAMG,YAAY,CAAC,KAAD,CAAlB;AAAA;AANX,QAQGL,aARH,CA3BJ;AAHF;AA2CD,CArDD;;AAuDA,eAAeF,eAAf","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from \"react\";\nimport { Marker, PopupProps } from \"react-map-gl\";\nimport { LeafletStyleMarker, Popup } from \"./styled\";\n\ntype Props = React.ComponentPropsWithoutRef<React.ElementType> & {\n  popupContents?: React.ReactNode;\n  popupProps?: PopupProps;\n  position: [number, number];\n  tooltipContents?: React.ReactNode;\n};\n\n/**\n * A MapLibre marker with a connected popup or tooltip\n */\nconst MarkerWithPopup = ({\n  children,\n  popupContents,\n  popupProps,\n  position,\n  tooltipContents\n}: Props): JSX.Element => {\n  const [showPopup, setShowPopup] = useState(false);\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  return (\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    <Marker\n      latitude={position[0]}\n      longitude={position[1]}\n      onClick={() => setShowPopup(true)}\n      style={{ cursor: popupContents ? \"pointer\" : \"inherit\" }}\n    >\n      <span\n        onMouseEnter={() => setShowTooltip(true)}\n        onMouseLeave={() => setShowTooltip(false)}\n      >\n        {children || <LeafletStyleMarker />}\n      </span>\n      {/** TODO: adjust tooltip styling? */}\n      {showTooltip && tooltipContents && (\n        <Popup\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...popupProps}\n          anchor=\"right\"\n          closeButton={false}\n          closeOnClick={false}\n          latitude={position[0]}\n          longitude={position[1]}\n        >\n          {tooltipContents}\n        </Popup>\n      )}\n      {showPopup && popupContents && (\n        <Popup\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...popupProps}\n          latitude={position[0]}\n          longitude={position[1]}\n          maxWidth=\"100%\"\n          onClose={() => setShowPopup(false)}\n        >\n          {popupContents}\n        </Popup>\n      )}\n    </Marker>\n  );\n};\n\nexport default MarkerWithPopup;\n"],"file":"MarkerWithPopup.js"}