{"version":3,"sources":["../src/styled.js"],"names":["Map","PropTypes","React","styled","CaretDown","CaretUp","ExclamationTriangle","toModeBorder","toModeColor","toSafeRouteColor","ClearButton","button","props","theme","tertiaryColor","hoverColor","activeColor","LightBorderDiv","div","hideBorder","borderColor","TransparentButton","AnchorButton","a","LinkButton","ViewerButton","AccessBadge","attrs","mode","routeColor","AgencyInfo","CallAheadWarning","BookLaterContainer","BookLaterInnerContainer","BookLaterPointer","BookLaterText","BookTNCRideButton","BookTNCRideButtonContainer","TNCTravelTime","TNCCost","CaretToggle","expanded","propTypes","bool","isRequired","Destination","DetailsColumn","InnerLine","InterlineDot","InterlineName","IntermediateStops","ItineraryBody","LegBody","LegClickable","LegDescription","LegDescriptionHeadsignPrefix","span","LegDescriptionRouteLongName","LegDescriptionRouteShortName","LegDescriptionForTransit","LegIconContainer","LegLine","LineBadgeContainer","LineColumn","PlaceRowWrapper","PreviewContainer","active","TimeColumn","MapButton","MapButtonColumn","MapIcon","fill","secondaryColor","width","height","role","PlaceDetails","PlaceHeader","PlaceName","PlaceSubheader","PreviewDiagram","PreviewDiagramElevationChange","PreviewDiagramElevationGain","PreviewDiagramElevationLoss","PreviewDiagramTitle","RouteBadge","mainColor","badgeBorderColor","SROnly","SRHidden","Steps","StepDescriptionContainer","StepsHeader","StepIconContainer","StepRow","StepStreetName","StopIdSpan","StopMarker","StopName","StopRow","TransitAlert","TransitAlertBody","TransitAlertEffectiveDate","TransitAlertHeader","TransitAlertIconContainer","TransitAlerts","TransitAlertToggle","TransitLegDetails","TransitLegDetailsHeader","TransitLegExpandedBody","TransitLegFare","TransitLegSummary","DefaultAlertToggleIcon","size","DefaultAlertBodyIcon"],"mappings":"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","sourcesContent":["import { Map } from \"@opentripplanner/icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { CaretDown } from \"@styled-icons/fa-solid/CaretDown\";\nimport { CaretUp } from \"@styled-icons/fa-solid/CaretUp\";\nimport { ExclamationTriangle } from \"@styled-icons/fa-solid/ExclamationTriangle\";\n\nimport { toModeBorder, toModeColor, toSafeRouteColor } from \"./util\";\n\n// ////////////////////////////////////////////////\n// ///////////// Generic components ///////////////\n// ////////////////////////////////////////////////\n\nexport const ClearButton = styled.button`\n  background: transparent;\n  color: inherit;\n  border: 0;\n  text-align: inherit;\n  text-decoration: none;\n\n  &:focus {\n    /* What's our hover color for the     se? */\n    background-color: ${props => props.theme.tertiaryColor};\n    outline: 0;\n  }\n\n  &:hover {\n    background-color: ${props => props.theme.hoverColor};\n  }\n\n  &:active {\n    background-color: ${props => props.theme.activeColor};\n  }\n`;\n\n/*\n  This is needed to give the offset border look to stacked place rows\n  Since the value we have access to is \"interlineWithPreviousLeg\" then we\n  have to show/hide the top border of the div and apply a small offset\n*/\nexport const LightBorderDiv = styled.div`\n  border-top-style: solid;\n  border-top-width: ${props => (props.hideBorder === \"true\" ? \"0\" : \"2px\")};\n  border-top-color: ${props => props.theme.borderColor};\n  padding-top: ${props => (props.hideBorder === \"true\" ? \"0\" : \"10px\")};\n  padding-bottom: ${props => (props.hideBorder === \"true\" ? \"10px\" : \"0\")};\n  transform: ${props =>\n    props.hideBorder === \"true\" ? \"\" : \"translateY(-12px)\"};\n`;\n\nexport const TransparentButton = styled.button`\n  background: transparent;\n  border: 0;\n  color: inherit;\n  cursor: pointer;\n  font-size: inherit;\n  text-decoration: none;\n  &:focus {\n    /*\n      TODO: Add outline for keyboard tabbing only:\n      https://stackoverflow.com/a/45191208/915811\n    */\n  }\n`;\n\nexport const AnchorButton = styled.a`\n  background-color: #fff;\n  background-image: none;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  color: #333;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 400;\n  padding: 4px 6px;\n  text-align: center;\n  text-decoration: none;\n  touch-action: manipulation;\n  user-select: none;\n  white-space: nowrap;\n\n  &:hover {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #adadad;\n  }\n\n  &:active {\n    color: #333;\n    background-color: #e6e6e6;\n    background-image: none;\n    border-color: #adadad;\n    outline: 0;\n    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  }\n\n  &:focus {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #8c8c8c;\n  }\n\n  &:active:hover {\n    color: #333;\n    background-color: #d4d4d4;\n    border-color: #8c8c8c;\n  }\n`;\n\nexport const LinkButton = styled(TransparentButton)`\n  color: #008;\n  cursor: pointer;\n  margin-left: 5px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const ViewerButton = styled(LinkButton)`\n  padding-left: 0px;\n\n  &:before {\n    content: \"|\";\n    color: black;\n    margin-right: 5px;\n  }\n`;\n\n// ////////////////////////////////////////////////\n// /////////////// App components /////////////////\n// ////////////////////////////////////////////////\n\n// TODO: Can we turn this into a more abstract element to inherit from for other badges?\nexport const AccessBadge = styled.div.attrs(props => ({\n  \"aria-label\": `Travel by ${props.mode}`\n}))`\n  color: black;\n  background-color: ${props => toModeColor(props.mode, props.routeColor)};\n  border: 2px solid #bbb;\n  text-align: center;\n  width: 25px;\n  height: 25px;\n  font-size: 1.2em;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-left: 1px;\n  /* Add in border for dark mode */\n`;\n\nexport const AgencyInfo = styled.div`\n  margin-top: 5px;\n\n  a {\n    color: #337ab7;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  img {\n    margin-left: 5px;\n  }\n`;\n\nexport const CallAheadWarning = styled.div`\n  color: #b22727;\n  margin-top: 5px;\n`;\n\nexport const BookLaterContainer = styled.div`\n  bottom: 0;\n  left: 110px;\n  position: absolute;\n  right: 0;\n  top: 0;\n`;\n\nexport const BookLaterInnerContainer = styled.div`\n  background-color: #fcf9d3;\n  display: table;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const BookLaterPointer = styled.div`\n  border-bottom: 16px solid transparent;\n  border-right: 16px solid #fcf9d3;\n  border-top: 16px solid transparent;\n  height: 0;\n  left: 94px;\n  position: absolute;\n  top: 0;\n  width: 0;\n`;\n\nexport const BookLaterText = styled.div`\n  color: #444;\n  display: table-cell;\n  font-style: italic;\n  line-height: 0.95;\n  padding: 0px 2px;\n  vertical-align: middle;\n`;\n\nexport const BookTNCRideButton = styled(AnchorButton)``;\n\nexport const BookTNCRideButtonContainer = styled.div`\n  height: 32px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  position: relative;\n`;\n\nexport const TNCTravelTime = styled.div`\n  /* no styling */\n`;\n\nexport const TNCCost = styled.div`\n  /* no styling */\n`;\n\nexport const CaretToggle = ({ expanded }) =>\n  expanded ? <CaretUp size={15} /> : <CaretDown size={15} />;\n\nCaretToggle.propTypes = {\n  expanded: PropTypes.bool.isRequired\n};\n\nexport const Destination = styled.div`\n  text-align: center;\n`;\n\nexport const DetailsColumn = styled(LightBorderDiv)`\n  /* flexbox column -- remaining space */\n  flex: 2 2 auto;\n  /* overflow: hidden; this is commented out in order to show Intermediate Stop Markers */\n`;\n\nexport const InnerLine = styled.div`\n  /* the actual line element */\n  border-left: ${props => toModeBorder(props.mode, props.routeColor)};\n  height: 100%;\n  width: 0;\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nexport const InterlineDot = styled.div`\n  color: #fff;\n  flex: 0 0 15px;\n  margin-left: -33px;\n  margin-right: 18px;\n  position: relative;\n  z-index: 30;\n`;\n\nexport const InterlineName = styled.div`\n  /* special messaging, not sure yet */\n`;\n\nexport const IntermediateStops = styled.div`\n  display: block;\n  font-size: 13px;\n`;\n\nexport const ItineraryBody = styled.div``;\n\nexport const LegBody = styled.div`\n  color: #676767;\n  font-size: 13px;\n  padding: 12px 0 18px 4px;\n`;\n\nexport const LegClickable = styled(TransparentButton)`\n  cursor: pointer;\n  display: table;\n  padding: 0;\n  text-align: center;\n  line-height: 31px;\n  /* line-height: 18px; */\n`;\n\nexport const LegDescription = styled.div`\n  display: table;\n\n  > div {\n    display: table-cell;\n  }\n`;\n\nexport const LegDescriptionHeadsignPrefix = styled.span`\n  font-weight: 200;\n`;\n\nexport const LegDescriptionRouteLongName = styled.div`\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 16px;\n`;\n\nexport const LegDescriptionRouteShortName = styled.div`\n  font-weight: 800;\n  margin-right: 6px;\n`;\n\nexport const LegDescriptionForTransit = styled(LegDescription)`\n  color: #807373;\n  margin-top: 5px;\n`;\n\nexport const LegIconContainer = styled.div`\n  height: 24px;\n  width: 24px;\n  float: left;\n  margin-right: 6px;\n`;\n\nexport const LegLine = styled.div`\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n  height: 100%;\n`;\n\nexport const LineBadgeContainer = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  position: absolute;\n  left: 50%;\n  top: 0;\n  transform: translate(-51%, -10%);\n`;\n\nexport const LineColumn = styled.div`\n  /* flexbox column */\n  flex: 0 0 50px;\n  padding-right: 5px;\n`;\n\nexport const PlaceRowWrapper = styled.div`\n  /* needs to be a flexbox row */\n  max-width: 500px;\n  display: flex;\n  flex-flow: row;\n`;\n\nexport const PreviewContainer = styled.div`\n  background-color: ${props => props.active && \"#eee\"};\n  border-color: ${props => (props.active ? \"#d1d5da\" : \"#fff\")};\n  border-radius: 5px;\n  border-style: solid;\n  border-width: 1px;\n  display: inline-block;\n  font-style: normal;\n  margin: 0 4px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  width: 75%;\n\n  &:hover {\n    border-color: #d1d5da;\n    background-color: #f6f8fa;\n  }\n`;\n\nexport const TimeColumn = styled.div`\n  /* flexbox column */\n  flex: 0 0 60px;\n  padding-right: 5px;\n  font-size: 0.9em;\n`;\n\nexport const MapButton = styled(LinkButton)`\n  padding: 3px 10px 3px 10px;\n  border: 0;\n  margin-top: -15px;\n  width: 35px;\n  height: 35px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const MapButtonColumn = styled(LightBorderDiv)`\n  flex: 0 0 25px;\n`;\n\nexport const MapIcon = styled(Map).attrs(props => ({\n  fill: props.theme.secondaryColor,\n  width: 15,\n  height: 15,\n  role: \"img\"\n}))``;\n\nexport const PlaceDetails = styled.div`\n  /* container for Leg details */\n  /* padding: 15px 0 15px 15px; */\n  /* padding-bottom: 15px; */\n`;\n\nexport const PlaceHeader = styled.div`\n  display: flex;\n  font-size: 1.2em;\n`;\n\nexport const PlaceName = styled.div`\n  /* text styling */\n  font-weight: bold;\n  height: 1.2em;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  flex: 1 1 auto;\n`;\n\nexport const PlaceSubheader = styled.div`\n  color: #807373;\n  font-weight: 300;\n  padding-left: 4px;\n  padding-top: 1px;\n`;\n\nexport const PreviewDiagram = styled(TransparentButton)`\n  padding: 2px;\n  width: 100%;\n`;\n\nexport const PreviewDiagramElevationChange = styled.span`\n  font-size: xx-small;\n`;\n\nexport const PreviewDiagramElevationGain = styled(\n  PreviewDiagramElevationChange\n)`\n  color: #e60000;\n`;\n\nexport const PreviewDiagramElevationLoss = styled(\n  PreviewDiagramElevationChange\n)`\n  color: green;\n`;\n\nexport const PreviewDiagramTitle = styled.div`\n  font-size: small;\n`;\n\nexport const RouteBadge = styled.div`\n  text-align: center;\n  min-width: 30px;\n  min-height: 30px;\n  font-size: 1.2em;\n  background-color: ${props =>\n    toSafeRouteColor(props.routeColor) || props.theme.mainColor};\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-left: 1px;\n  /* Add in border for dark mode */\n  border: 1px solid ${props => props.theme.badgeBorderColor};\n  user-select: none;\n  cursor: default;\n`;\n\nexport const SROnly = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n`;\n\nexport const SRHidden = styled.span.attrs({ \"aria-hidden\": true })``;\n\nexport const Steps = styled.div`\n  display: block;\n`;\n\nexport const StepDescriptionContainer = styled.div`\n  margin-left: 24px;\n  line-height: 1.25em;\n  padding-top: 1px;\n`;\n\nexport const StepsHeader = styled(TransparentButton)`\n  color: #676767;\n  display: inline-block;\n  font-size: 13px;\n  font-style: normal;\n  margin-top: 10px;\n  vertical-align: bottom;\n`;\n\nexport const StepIconContainer = styled.div`\n  fill: #676767;\n  float: left;\n  height: 16px;\n  width: 16px;\n`;\n\nexport const StepRow = styled.div`\n  font-size: 13px;\n  margin-top: 8px;\n  color: #676767;\n  font-style: normal;\n`;\n\nexport const StepStreetName = styled.span`\n  font-weight: 500;\n`;\n\nexport const StopIdSpan = styled.span`\n  font-weight: 200;\n  font-size: 0.9em;\n  margin-left: 10px;\n`;\n\nexport const StopMarker = styled.div`\n  float: left;\n  margin-left: -36px;\n  color: #fff;\n`;\n\nexport const StopName = styled.div`\n  color: #676767;\n  margin-top: 3px;\n`;\n\nexport const StopRow = styled.div`\n  z-index: 30;\n  position: relative;\n`;\n\nexport const TransitAlert = styled.a`\n  background-color: #eee;\n  border-radius: 4px;\n  color: #000;\n  display: block;\n  margin-top: 5px;\n  padding: 8px;\n  text-decoration: none;\n`;\n\nexport const TransitAlertBody = styled.div`\n  font-size: 12px;\n  margin-left: 30px;\n  white-space: pre-wrap;\n`;\n\nexport const TransitAlertEffectiveDate = styled.div`\n  margin-top: 5px;\n  margin-left: 30px;\n  font-size: 12px;\n  font-style: italic;\n`;\n\nexport const TransitAlertHeader = styled.div`\n  font-size: 14px;\n  margin-left: 30px;\n  font-weight: 600;\n`;\n\nexport const TransitAlertIconContainer = styled.div`\n  float: left;\n  font-size: 18px;\n`;\n\nexport const TransitAlerts = styled.div`\n  display: block;\n  margin-top: 3px;\n`;\n\nexport const TransitAlertToggle = styled(TransparentButton)`\n  color: #d14727;\n  cursor: pointer;\n  display: inline-block;\n  font-weight: 400;\n  margin-top: 8px;\n  padding: 0;\n`;\n\nexport const TransitLegDetails = styled.div`\n  margin-top: 5px;\n`;\n\nexport const TransitLegDetailsHeader = styled.div`\n  color: #676767;\n`;\n\nexport const TransitLegExpandedBody = styled.div`\n  font-size: 14px;\n`;\n\nexport const TransitLegFare = styled.div`\n  /* no styling */\n`;\n\nexport const TransitLegSummary = styled(TransparentButton)`\n  padding: 0;\n`;\n\nexport const DefaultAlertToggleIcon = styled(ExclamationTriangle).attrs({\n  size: 15\n})``;\n\nexport const DefaultAlertBodyIcon = styled(ExclamationTriangle).attrs({\n  size: 18\n})``;\n"],"file":"styled.js"}