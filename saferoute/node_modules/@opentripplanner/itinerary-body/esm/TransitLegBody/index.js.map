{"version":3,"sources":["../../src/TransitLegBody/index.js"],"names":["coreUtils","PropTypes","React","Component","VelocityTransitionGroup","AlertsBody","IntermediateStops","Styled","ViewTripButton","pluralize","str","list","length","TransitLegBody","props","getFareForLeg","leg","fare","fareForLeg","details","regular","forEach","fareComponent","routes","includes","routeId","itinerary","getTransitFare","price","onToggleStopsClick","stopsExpanded","state","setState","onToggleAlertsClick","alertsExpanded","onSummaryClick","legIndex","setActiveLeg","config","LegIcon","longDateFormat","RouteDescription","setViewedTrip","showAgencyInfo","showViewTripButton","timeFormat","TransitLegSubheader","TransitLegSummary","transitOperator","AlertToggleIcon","AlertBodyIcon","languageConfig","language","agencyBrandingUrl","agencyName","agencyUrl","alerts","isReservationRequired","logoUrl","logo","expandAlerts","animation","intermediateStops","tripId","from","stopIndex","to","centsToString","transitFare","averageWait","time","formatDuration","propTypes","types","configType","isRequired","fareType","legType","elementType","number","string","func","bool","transitOperatorType","defaultProps","undefined","DefaultAlertToggleIcon"],"mappings":";;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,uBAAT,QAAwC,gBAAxC;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;AACA,OAAOC,cAAP,MAA2B,oBAA3B,C,CAEA;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AAC5B,mBAAUD,GAAV,SAAgBC,IAAI,CAACC,MAAL,GAAc,CAAd,GAAkB,GAAlB,GAAwB,EAAxC;AACD;;IAEKC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAQnBC,aARmB,GAQH,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC7B,UAAIC,UAAJ;;AACA,UAAID,IAAI,IAAIA,IAAI,CAACE,OAAb,IAAwBF,IAAI,CAACE,OAAL,CAAaC,OAAzC,EAAkD;AAChDH,QAAAA,IAAI,CAACE,OAAL,CAAaC,OAAb,CAAqBC,OAArB,CAA6B,UAAAC,aAAa,EAAI;AAC5C,cAAIA,aAAa,CAACC,MAAd,CAAqBC,QAArB,CAA8BR,GAAG,CAACS,OAAlC,CAAJ,EAAgD;AAC9CP,YAAAA,UAAU,GAAGlB,SAAS,CAAC0B,SAAV,CAAoBC,cAApB,CAAmCL,aAAa,CAACM,KAAjD,CAAb;AACD;AACF,SAJD;AAKD;;AACD,aAAOV,UAAP;AACD,KAlBkB;;AAAA,UAoBnBW,kBApBmB,GAoBE,YAAM;AACzB,UAAQC,aAAR,GAA0B,MAAKC,KAA/B,CAAQD,aAAR;;AACA,YAAKE,QAAL,CAAc;AAAEF,QAAAA,aAAa,EAAE,CAACA;AAAlB,OAAd;AACD,KAvBkB;;AAAA,UAyBnBG,mBAzBmB,GAyBG,YAAM;AAC1B,UAAQC,cAAR,GAA2B,MAAKH,KAAhC,CAAQG,cAAR;;AACA,YAAKF,QAAL,CAAc;AAAEE,QAAAA,cAAc,EAAE,CAACA;AAAnB,OAAd;AACD,KA5BkB;;AAAA,UA8BnBC,cA9BmB,GA8BF,YAAM;AACrB,wBAAwC,MAAKrB,KAA7C;AAAA,UAAQE,GAAR,eAAQA,GAAR;AAAA,UAAaoB,QAAb,eAAaA,QAAb;AAAA,UAAuBC,YAAvB,eAAuBA,YAAvB;AACAA,MAAAA,YAAY,CAACD,QAAD,EAAWpB,GAAX,CAAZ;AACD,KAjCkB;;AAEjB,UAAKe,KAAL,GAAa;AACXG,MAAAA,cAAc,EAAE,KADL;AAEXJ,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAFiB;AAMlB;;;;WA6BD,kBAAS;AACP,yBAgBI,KAAKhB,KAhBT;AAAA,UACEwB,MADF,gBACEA,MADF;AAAA,UAEErB,IAFF,gBAEEA,IAFF;AAAA,UAGED,GAHF,gBAGEA,GAHF;AAAA,UAIEuB,OAJF,gBAIEA,OAJF;AAAA,UAKEC,cALF,gBAKEA,cALF;AAAA,UAMEC,gBANF,gBAMEA,gBANF;AAAA,UAOEC,aAPF,gBAOEA,aAPF;AAAA,UAQEC,cARF,gBAQEA,cARF;AAAA,UASEC,kBATF,gBASEA,kBATF;AAAA,UAUEC,UAVF,gBAUEA,UAVF;AAAA,UAWEC,mBAXF,gBAWEA,mBAXF;AAAA,UAYEC,iBAZF,gBAYEA,iBAZF;AAAA,UAaEC,eAbF,gBAaEA,eAbF;AAAA,UAcEC,eAdF,gBAcEA,eAdF;AAAA,UAeEC,aAfF,gBAeEA,aAfF;AAiBA,UAAkBC,cAAlB,GAAqCb,MAArC,CAAQc,QAAR;AACA,UAAQC,iBAAR,GAA6DrC,GAA7D,CAAQqC,iBAAR;AAAA,UAA2BC,UAA3B,GAA6DtC,GAA7D,CAA2BsC,UAA3B;AAAA,UAAuCC,SAAvC,GAA6DvC,GAA7D,CAAuCuC,SAAvC;AAAA,UAAkDC,MAAlD,GAA6DxC,GAA7D,CAAkDwC,MAAlD;AACA,wBAA0C,KAAKzB,KAA/C;AAAA,UAAQG,cAAR,eAAQA,cAAR;AAAA,UAAwBJ,aAAxB,eAAwBA,aAAxB;AAEA,UAAM2B,qBAAqB,GAAGzD,SAAS,CAAC0B,SAAV,CAAoB+B,qBAApB,CAC5BzC,GAD4B,CAA9B,CAtBO,CA0BP;AACA;;AACA,UAAM0C,OAAO,GACXV,eAAe,IAAIA,eAAe,CAACW,IAAnC,GACIX,eAAe,CAACW,IADpB,GAEIN,iBAHN;AAKA,UAAMO,YAAY,GAChB1B,cAAc,IAAKlB,GAAG,CAACwC,MAAJ,IAAcxC,GAAG,CAACwC,MAAJ,CAAW5C,MAAX,GAAoB,CADvD;AAEA,UAAMM,UAAU,GAAG,KAAKH,aAAL,CAAmBC,GAAnB,EAAwBC,IAAxB,CAAnB;AACA,0BACE,0CACG6B,mBAAmB,iBAClB,oBAAC,mBAAD;AAAqB,QAAA,cAAc,EAAEK,cAArC;AAAqD,QAAA,GAAG,EAAEnC;AAA1D,QAFJ,eAIE,oBAAC,MAAD,CAAQ,OAAR,qBAEE,oBAAC,MAAD,CAAQ,YAAR;AAAqB,QAAA,OAAO,EAAE,KAAKmB;AAAnC,sBACE,oBAAC,gBAAD;AACE,QAAA,GAAG,EAAEnB,GADP;AAEE,QAAA,OAAO,EAAEuB,OAFX;AAGE,QAAA,eAAe,EAAES;AAHnB,QADF,CAFF,EAWGL,cAAc,iBACb,oBAAC,MAAD,CAAQ,UAAR,+BACsB,GADtB,eAEE;AAAG,QAAA,IAAI,EAAEY,SAAT;AAAoB,QAAA,GAAG,EAAC,qBAAxB;AAA8C,QAAA,MAAM,EAAC;AAArD,SACGD,UADH,EAEGI,OAAO,iBACN;AAAK,QAAA,GAAG,YAAKJ,UAAL,UAAR;AAAgC,QAAA,GAAG,EAAEI,OAArC;AAA8C,QAAA,MAAM,EAAE;AAAtD,QAHJ,CAFF,CAZJ,EAsBGD,qBAAqB,iBACpB,oBAAC,MAAD,CAAQ,gBAAR,uDAvBJ,EA6BGD,MAAM,IAAIA,MAAM,CAAC5C,MAAP,GAAgB,CAA1B,iBACC,oBAAC,MAAD,CAAQ,kBAAR;AAA2B,QAAA,OAAO,EAAE,KAAKqB;AAAzC,sBACE,oBAAC,eAAD,OADF,OACuBuB,MAAM,CAAC5C,MAD9B,OACuCH,SAAS,CAAC,OAAD,EAAU+C,MAAV,CADhD,EACmE,GADnE,eAEE,oBAAC,MAAD,CAAQ,WAAR;AAAoB,QAAA,QAAQ,EAAEtB;AAA9B,QAFF,CA9BJ,eAqCE,oBAAC,uBAAD;AACE,QAAA,KAAK,EAAE;AAAE2B,UAAAA,SAAS,EAAE;AAAb,SADT;AAEE,QAAA,KAAK,EAAE;AAAEA,UAAAA,SAAS,EAAE;AAAb;AAFT,SAIGD,YAAY,iBACX,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE5C,GAAG,CAACwC,MADd;AAEE,QAAA,cAAc,EAAEhB,cAFlB;AAGE,QAAA,UAAU,EAAEK,UAHd;AAIE,QAAA,SAAS,EAAEK;AAJb,QALJ,CArCF,EAmDGlC,GAAG,CAAC8C,iBAAJ,IAAyB9C,GAAG,CAAC8C,iBAAJ,CAAsBlD,MAAtB,GAA+B,CAAxD,iBACC,oBAAC,MAAD,CAAQ,iBAAR,qBAEE,oBAAC,MAAD,CAAQ,uBAAR,qBACE,oBAAC,iBAAD;AACE,QAAA,GAAG,EAAEI,GADP;AAEE,QAAA,OAAO,EAAE,KAAKa,kBAFhB;AAGE,QAAA,aAAa,EAAEC;AAHjB,QADF,EAOGc,kBAAkB,iBACjB,oBAAC,cAAD;AACE,QAAA,MAAM,EAAE5B,GAAG,CAAC+C,MADd;AAEE,QAAA,SAAS,EAAE/C,GAAG,CAACgD,IAAJ,CAASC,SAFtB;AAGE,QAAA,aAAa,EAAEvB,aAHjB;AAIE,QAAA,OAAO,EAAE1B,GAAG,CAACkD,EAAJ,CAAOD;AAJlB,QARJ,CAFF,eAmBE,oBAAC,uBAAD;AACE,QAAA,KAAK,EAAE;AAAEJ,UAAAA,SAAS,EAAE;AAAb,SADT;AAEE,QAAA,KAAK,EAAE;AAAEA,UAAAA,SAAS,EAAE;AAAb;AAFT,SAIG/B,aAAa,gBACZ,oBAAC,MAAD,CAAQ,sBAAR,qBACE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAEd,GAAG,CAAC8C;AAA9B,QADF,EAEG5C,UAAU,iBACT,oBAAC,MAAD,CAAQ,cAAR,kBACSA,UAAU,CAACiD,aAAX,CAAyBjD,UAAU,CAACkD,WAApC,CADT,CAHJ,CADY,GASV,IAbN,CAnBF,EAoCGpD,GAAG,CAACqD,WAAJ,iBACC,oDACiBrE,SAAS,CAACsE,IAAV,CAAeC,cAAf,CAA8BvD,GAAG,CAACqD,WAAlC,CADjB,CArCJ,CApDJ,CAJF,CADF;AAuGD;;;;EA/K0BlE,S;;AAkL7BU,cAAc,CAAC2D,SAAf,GAA2B;AACzBlC,EAAAA,MAAM,EAAEtC,SAAS,CAACyE,KAAV,CAAgBC,UAAhB,CAA2BC,UADV;AAEzB1D,EAAAA,IAAI,EAAEjB,SAAS,CAACyE,KAAV,CAAgBG,QAFG;AAGzB5D,EAAAA,GAAG,EAAEhB,SAAS,CAACyE,KAAV,CAAgBI,OAAhB,CAAwBF,UAHJ;AAIzBpC,EAAAA,OAAO,EAAEtC,SAAS,CAAC6E,WAAV,CAAsBH,UAJN;AAKzBvC,EAAAA,QAAQ,EAAEnC,SAAS,CAAC8E,MAAV,CAAiBJ,UALF;AAMzBnC,EAAAA,cAAc,EAAEvC,SAAS,CAAC+E,MAAV,CAAiBL,UANR;AAOzBlC,EAAAA,gBAAgB,EAAExC,SAAS,CAAC6E,WAAV,CAAsBH,UAPf;AAQzBtC,EAAAA,YAAY,EAAEpC,SAAS,CAACgF,IAAV,CAAeN,UARJ;AASzBjC,EAAAA,aAAa,EAAEzC,SAAS,CAACgF,IAAV,CAAeN,UATL;AAUzBhC,EAAAA,cAAc,EAAE1C,SAAS,CAACiF,IAAV,CAAeP,UAVN;AAWzB/B,EAAAA,kBAAkB,EAAE3C,SAAS,CAACiF,IAAV,CAAeP,UAXV;AAYzB9B,EAAAA,UAAU,EAAE5C,SAAS,CAAC+E,MAAV,CAAiBL,UAZJ;AAazB7B,EAAAA,mBAAmB,EAAE7C,SAAS,CAAC6E,WAbN;AAczB/B,EAAAA,iBAAiB,EAAE9C,SAAS,CAAC6E,WAAV,CAAsBH,UAdhB;AAezB3B,EAAAA,eAAe,EAAEhD,SAAS,CAACyE,KAAV,CAAgBU,mBAfR;AAgBzBlC,EAAAA,eAAe,EAAEhD,SAAS,CAAC6E,WAhBF;AAiBzB5B,EAAAA,aAAa,EAAEjD,SAAS,CAAC6E;AAjBA,CAA3B;AAoBAjE,cAAc,CAACuE,YAAf,GAA8B;AAC5BnE,EAAAA,IAAI,EAAE,IADsB;AAE5B6B,EAAAA,mBAAmB,EAAEuC,SAFO;AAG5BrC,EAAAA,eAAe,EAAE,IAHW;AAI5BC,EAAAA,eAAe,EAAE1C,MAAM,CAAC+E,sBAJI;AAK5BpC,EAAAA,aAAa,EAAEmC;AALa,CAA9B;AAQA,eAAexE,cAAf;AAEA,SAASR,UAAT,EAAqBC,iBAArB,EAAwCE,cAAxC","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { VelocityTransitionGroup } from \"velocity-react\";\n\nimport AlertsBody from \"./alerts-body\";\nimport IntermediateStops from \"./intermediate-stops\";\nimport * as Styled from \"../styled\";\nimport ViewTripButton from \"./view-trip-button\";\n\n// TODO use pluralize that for internationalization (and complex plurals, i.e., not just adding 's')\nfunction pluralize(str, list) {\n  return `${str}${list.length > 1 ? \"s\" : \"\"}`;\n}\n\nclass TransitLegBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertsExpanded: false,\n      stopsExpanded: false\n    };\n  }\n\n  getFareForLeg = (leg, fare) => {\n    let fareForLeg;\n    if (fare && fare.details && fare.details.regular) {\n      fare.details.regular.forEach(fareComponent => {\n        if (fareComponent.routes.includes(leg.routeId)) {\n          fareForLeg = coreUtils.itinerary.getTransitFare(fareComponent.price);\n        }\n      });\n    }\n    return fareForLeg;\n  };\n\n  onToggleStopsClick = () => {\n    const { stopsExpanded } = this.state;\n    this.setState({ stopsExpanded: !stopsExpanded });\n  };\n\n  onToggleAlertsClick = () => {\n    const { alertsExpanded } = this.state;\n    this.setState({ alertsExpanded: !alertsExpanded });\n  };\n\n  onSummaryClick = () => {\n    const { leg, legIndex, setActiveLeg } = this.props;\n    setActiveLeg(legIndex, leg);\n  };\n\n  render() {\n    const {\n      config,\n      fare,\n      leg,\n      LegIcon,\n      longDateFormat,\n      RouteDescription,\n      setViewedTrip,\n      showAgencyInfo,\n      showViewTripButton,\n      timeFormat,\n      TransitLegSubheader,\n      TransitLegSummary,\n      transitOperator,\n      AlertToggleIcon,\n      AlertBodyIcon\n    } = this.props;\n    const { language: languageConfig } = config;\n    const { agencyBrandingUrl, agencyName, agencyUrl, alerts } = leg;\n    const { alertsExpanded, stopsExpanded } = this.state;\n\n    const isReservationRequired = coreUtils.itinerary.isReservationRequired(\n      leg\n    );\n\n    // If the config contains an operator with a logo URL, prefer that over the\n    // one provided by OTP (which is derived from agency.txt#agency_branding_url)\n    const logoUrl =\n      transitOperator && transitOperator.logo\n        ? transitOperator.logo\n        : agencyBrandingUrl;\n\n    const expandAlerts =\n      alertsExpanded || (leg.alerts && leg.alerts.length < 3);\n    const fareForLeg = this.getFareForLeg(leg, fare);\n    return (\n      <>\n        {TransitLegSubheader && (\n          <TransitLegSubheader languageConfig={languageConfig} leg={leg} />\n        )}\n        <Styled.LegBody>\n          {/* The Route Icon/Name Bar; clickable to set as active leg */}\n          <Styled.LegClickable onClick={this.onSummaryClick}>\n            <RouteDescription\n              leg={leg}\n              LegIcon={LegIcon}\n              transitOperator={transitOperator}\n            />\n          </Styled.LegClickable>\n\n          {/* Agency information */}\n          {showAgencyInfo && (\n            <Styled.AgencyInfo>\n              Service operated by{\" \"}\n              <a href={agencyUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n                {agencyName}\n                {logoUrl && (\n                  <img alt={`${agencyName} logo`} src={logoUrl} height={25} />\n                )}\n              </a>\n            </Styled.AgencyInfo>\n          )}\n          {isReservationRequired && (\n            <Styled.CallAheadWarning>\n              Will not run unless requested ahead of time!\n            </Styled.CallAheadWarning>\n          )}\n\n          {/* Alerts toggle */}\n          {alerts && alerts.length > 2 && (\n            <Styled.TransitAlertToggle onClick={this.onToggleAlertsClick}>\n              <AlertToggleIcon /> {alerts.length} {pluralize(\"alert\", alerts)}{\" \"}\n              <Styled.CaretToggle expanded={alertsExpanded} />\n            </Styled.TransitAlertToggle>\n          )}\n\n          {/* The Alerts body, if visible */}\n          <VelocityTransitionGroup\n            enter={{ animation: \"slideDown\" }}\n            leave={{ animation: \"slideUp\" }}\n          >\n            {expandAlerts && (\n              <AlertsBody\n                alerts={leg.alerts}\n                longDateFormat={longDateFormat}\n                timeFormat={timeFormat}\n                AlertIcon={AlertBodyIcon}\n              />\n            )}\n          </VelocityTransitionGroup>\n          {/* The \"Ride X Min / X Stops\" Row, including IntermediateStops body */}\n          {leg.intermediateStops && leg.intermediateStops.length > 0 && (\n            <Styled.TransitLegDetails>\n              {/* The header summary row, clickable to expand intermediate stops */}\n              <Styled.TransitLegDetailsHeader>\n                <TransitLegSummary\n                  leg={leg}\n                  onClick={this.onToggleStopsClick}\n                  stopsExpanded={stopsExpanded}\n                />\n\n                {showViewTripButton && (\n                  <ViewTripButton\n                    tripId={leg.tripId}\n                    fromIndex={leg.from.stopIndex}\n                    setViewedTrip={setViewedTrip}\n                    toIndex={leg.to.stopIndex}\n                  />\n                )}\n              </Styled.TransitLegDetailsHeader>\n              {/* IntermediateStops expanded body */}\n              <VelocityTransitionGroup\n                enter={{ animation: \"slideDown\" }}\n                leave={{ animation: \"slideUp\" }}\n              >\n                {stopsExpanded ? (\n                  <Styled.TransitLegExpandedBody>\n                    <IntermediateStops stops={leg.intermediateStops} />\n                    {fareForLeg && (\n                      <Styled.TransitLegFare>\n                        Fare: {fareForLeg.centsToString(fareForLeg.transitFare)}\n                      </Styled.TransitLegFare>\n                    )}\n                  </Styled.TransitLegExpandedBody>\n                ) : null}\n              </VelocityTransitionGroup>\n\n              {/* Average wait details, if present */}\n              {leg.averageWait && (\n                <span>\n                  Typical Wait: {coreUtils.time.formatDuration(leg.averageWait)}\n                </span>\n              )}\n            </Styled.TransitLegDetails>\n          )}\n        </Styled.LegBody>\n      </>\n    );\n  }\n}\n\nTransitLegBody.propTypes = {\n  config: coreUtils.types.configType.isRequired,\n  fare: coreUtils.types.fareType,\n  leg: coreUtils.types.legType.isRequired,\n  LegIcon: PropTypes.elementType.isRequired,\n  legIndex: PropTypes.number.isRequired,\n  longDateFormat: PropTypes.string.isRequired,\n  RouteDescription: PropTypes.elementType.isRequired,\n  setActiveLeg: PropTypes.func.isRequired,\n  setViewedTrip: PropTypes.func.isRequired,\n  showAgencyInfo: PropTypes.bool.isRequired,\n  showViewTripButton: PropTypes.bool.isRequired,\n  timeFormat: PropTypes.string.isRequired,\n  TransitLegSubheader: PropTypes.elementType,\n  TransitLegSummary: PropTypes.elementType.isRequired,\n  transitOperator: coreUtils.types.transitOperatorType,\n  AlertToggleIcon: PropTypes.elementType,\n  AlertBodyIcon: PropTypes.elementType\n};\n\nTransitLegBody.defaultProps = {\n  fare: null,\n  TransitLegSubheader: undefined,\n  transitOperator: null,\n  AlertToggleIcon: Styled.DefaultAlertToggleIcon,\n  AlertBodyIcon: undefined\n};\n\nexport default TransitLegBody;\n\nexport { AlertsBody, IntermediateStops, ViewTripButton };\n"],"file":"index.js"}