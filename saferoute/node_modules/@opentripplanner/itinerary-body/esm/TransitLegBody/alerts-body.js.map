{"version":3,"sources":["../../src/TransitLegBody/alerts-body.js"],"names":["moment","PropTypes","React","Styled","AlertsBody","alerts","longDateFormat","timeFormat","AlertIcon","sort","a","b","effectiveStartDate","map","alert","i","dateTimeString","calendar","sameDay","nextDay","lastDay","lastWeek","sameElse","effectiveDateString","alertUrl","alertHeaderText","alertDescriptionText","propTypes","arrayOf","shape","isRequired","string","elementType","defaultProps","DefaultAlertBodyIcon"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;AAEA,eAAe,SAASC,UAAT,OAKZ;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,cAGC,QAHDA,cAGC;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADDC,SACC,QADDA,SACC;AACD,sBACE,oBAAC,MAAD,CAAQ,aAAR,QACGH,MAAM,CACJI,IADF,CACO,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,CAACC,kBAAF,GAAuBF,CAAC,CAACE,kBAAnC;AAAA,GADP,EAEEC,GAFF,CAEM,UAACC,KAAD,EAAQC,CAAR,EAAc;AACjB;AACA;AACA,QAAMC,cAAc,GAAGhB,MAAM,CAACc,KAAK,CAACF,kBAAP,CAAN,CAAiCK,QAAjC,CACrB,IADqB,EAErB;AACEC,MAAAA,OAAO,YAAKX,UAAL,cADT;AAEEY,MAAAA,OAAO,YAAKZ,UAAL,iBAFT;AAGEa,MAAAA,OAAO,YAAKb,UAAL,kBAHT;AAIEc,MAAAA,QAAQ,YAAKf,cAAL,CAJV;AAKEgB,MAAAA,QAAQ,YAAKhB,cAAL;AALV,KAFqB,CAAvB;AAUA,QAAMiB,mBAAmB,6BAAsBP,cAAtB,CAAzB;AACA,wBACE,oBAAC,MAAD,CAAQ,YAAR;AAAqB,MAAA,GAAG,EAAED,CAA1B;AAA6B,MAAA,IAAI,EAAED,KAAK,CAACU;AAAzC,oBACE,oBAAC,MAAD,CAAQ,yBAAR,qBACE,oBAAC,SAAD,OADF,CADF,EAIGV,KAAK,CAACW,eAAN,gBACC,oBAAC,MAAD,CAAQ,kBAAR,QACGX,KAAK,CAACW,eADT,CADD,GAIG,IARN,eASE,oBAAC,MAAD,CAAQ,gBAAR,QACGX,KAAK,CAACY,oBADT,CATF,eAYE,oBAAC,MAAD,CAAQ,yBAAR,QACGH,mBADH,CAZF,CADF;AAkBD,GAlCF,CADH,CADF;AAuCD;AAEDnB,UAAU,CAACuB,SAAX,GAAuB;AACrBtB,EAAAA,MAAM,EAAEJ,SAAS,CAAC2B,OAAV,CAAkB3B,SAAS,CAAC4B,KAAV,CAAgB,EAAhB,CAAlB,EAAuCC,UAD1B;AAErBxB,EAAAA,cAAc,EAAEL,SAAS,CAAC8B,MAAV,CAAiBD,UAFZ;AAGrBvB,EAAAA,UAAU,EAAEN,SAAS,CAAC8B,MAAV,CAAiBD,UAHR;AAIrBtB,EAAAA,SAAS,EAAEP,SAAS,CAAC+B;AAJA,CAAvB;AAOA5B,UAAU,CAAC6B,YAAX,GAA0B;AACxBzB,EAAAA,SAAS,EAAEL,MAAM,CAAC+B;AADM,CAA1B","sourcesContent":["import moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport * as Styled from \"../styled\";\n\nexport default function AlertsBody({\n  alerts,\n  longDateFormat,\n  timeFormat,\n  AlertIcon\n}) {\n  return (\n    <Styled.TransitAlerts>\n      {alerts\n        .sort((a, b) => b.effectiveStartDate - a.effectiveStartDate)\n        .map((alert, i) => {\n          // If alert is effective as of +/- one day, use today, tomorrow, or\n          // yesterday with time. Otherwise, use long date format.\n          const dateTimeString = moment(alert.effectiveStartDate).calendar(\n            null,\n            {\n              sameDay: `${timeFormat}, [Today]`,\n              nextDay: `${timeFormat}, [Tomorrow]`,\n              lastDay: `${timeFormat}, [Yesterday]`,\n              lastWeek: `${longDateFormat}`,\n              sameElse: `${longDateFormat}`\n            }\n          );\n          const effectiveDateString = `Effective as of ${dateTimeString}`;\n          return (\n            <Styled.TransitAlert key={i} href={alert.alertUrl}>\n              <Styled.TransitAlertIconContainer>\n                <AlertIcon />\n              </Styled.TransitAlertIconContainer>\n              {alert.alertHeaderText ? (\n                <Styled.TransitAlertHeader>\n                  {alert.alertHeaderText}\n                </Styled.TransitAlertHeader>\n              ) : null}\n              <Styled.TransitAlertBody>\n                {alert.alertDescriptionText}\n              </Styled.TransitAlertBody>\n              <Styled.TransitAlertEffectiveDate>\n                {effectiveDateString}\n              </Styled.TransitAlertEffectiveDate>\n            </Styled.TransitAlert>\n          );\n        })}\n    </Styled.TransitAlerts>\n  );\n}\n\nAlertsBody.propTypes = {\n  alerts: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  longDateFormat: PropTypes.string.isRequired,\n  timeFormat: PropTypes.string.isRequired,\n  AlertIcon: PropTypes.elementType\n};\n\nAlertsBody.defaultProps = {\n  AlertIcon: Styled.DefaultAlertBodyIcon\n};\n"],"file":"alerts-body.js"}