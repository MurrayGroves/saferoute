import coreUtils from "@opentripplanner/core-utils";
import { humanizeDistanceString } from "@opentripplanner/humanize-distance";
import React from "react";
import PropTypes from "prop-types";
import * as Styled from "../styled";
export default function AccessLegSummary(_ref) {
  var config = _ref.config,
      leg = _ref.leg,
      LegIcon = _ref.LegIcon,
      onSummaryClick = _ref.onSummaryClick,
      showLegIcon = _ref.showLegIcon;
  return /*#__PURE__*/React.createElement(Styled.LegClickable, {
    onClick: onSummaryClick
  }, showLegIcon && /*#__PURE__*/React.createElement(Styled.LegIconContainer, null, /*#__PURE__*/React.createElement(LegIcon, {
    leg: leg
  })), /*#__PURE__*/React.createElement(Styled.LegDescription, null, coreUtils.itinerary.getLegModeLabel(leg), " ", leg.distance > 0 && /*#__PURE__*/React.createElement("span", null, " ", humanizeDistanceString(leg.distance)), " to ".concat(coreUtils.itinerary.getPlaceName(leg.to, config.companies))));
}
AccessLegSummary.propTypes = {
  config: coreUtils.types.configType.isRequired,
  leg: coreUtils.types.legType.isRequired,
  LegIcon: PropTypes.elementType.isRequired,
  onSummaryClick: PropTypes.func.isRequired,
  showLegIcon: PropTypes.bool.isRequired
};
//# sourceMappingURL=access-leg-summary.js.map