{"version":3,"sources":["../../src/defaults/line-column-content.js"],"names":["coreUtils","LocationIcon","PropTypes","React","Styled","RouteBadge","LineColumnContent","interline","isDestination","leg","LegIcon","toRouteAbbreviation","mode","routeColor","transitLeg","parseInt","route","routeLongName","propTypes","bool","isRequired","types","legType","elementType","func","defaultProps"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,eAAe,SAASC,iBAAT,OAMZ;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,aAIC,QAJDA,aAIC;AAAA,MAHDC,GAGC,QAHDA,GAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,mBACC,QADDA,mBACC;AACD,sBACE,oBAAC,MAAD,CAAQ,OAAR,QACG,CAACH,aAAD,iBACC,oBAAC,MAAD,CAAQ,SAAR;AAAkB,IAAA,IAAI,EAAEC,GAAG,CAACG,IAA5B;AAAkC,IAAA,UAAU,EAAEH,GAAG,CAACI;AAAlD,IAFJ,eAIE,oBAAC,MAAD,CAAQ,kBAAR,QAEG,CAACN,SAAD,IAAc,CAACC,aAAf,IAAgCC,GAAG,CAACK,UAApC,iBACC,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEL,GAAG,CAACI,UADb;AAEE,IAAA,YAAY,EAAEF,mBAAmB,CAC/BI,QAAQ,CAACN,GAAG,CAACO,KAAL,EAAY,EAAZ,CAAR,IAA2BP,GAAG,CAACO,KADA,CAFnC;AAKE,IAAA,IAAI,EAAEP,GAAG,CAACQ,aAAJ,IAAqB;AAL7B,IAHJ,EAWG,CAACV,SAAD,IAAc,CAACC,aAAf,IAAgC,CAACC,GAAG,CAACK,UAArC,iBACC,oBAAC,MAAD,CAAQ,WAAR;AAAoB,IAAA,IAAI,EAAEL,GAAG,CAACG,IAA9B;AAAoC,IAAA,UAAU,EAAEH,GAAG,CAACI;AAApD,kBACG,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEJ,GAAd;AAAmB,IAAA,KAAK,sBAAeA,GAAG,CAACG,IAAnB,CAAxB;AAAmD,IAAA,KAAK,EAAC;AAAzD,IADH,CAZJ,EAgBGJ,aAAa,iBACZ,oBAAC,MAAD,CAAQ,WAAR,qBACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAE,EAApB;AAAwB,IAAA,IAAI,EAAC;AAA7B,IADF,CAjBJ,CAJF,CADF;AA6BD;AAEDF,iBAAiB,CAACY,SAAlB,GAA8B;AAC5B;AACAX,EAAAA,SAAS,EAAEL,SAAS,CAACiB,IAAV,CAAeC,UAFE;;AAG5B;AACAZ,EAAAA,aAAa,EAAEN,SAAS,CAACiB,IAAV,CAAeC,UAJF;;AAK5B;AACAX,EAAAA,GAAG,EAAET,SAAS,CAACqB,KAAV,CAAgBC,OANO;;AAO5B;AACAZ,EAAAA,OAAO,EAAER,SAAS,CAACqB,WAAV,CAAsBH,UARH;;AAS5B;AACAT,EAAAA,mBAAmB,EAAET,SAAS,CAACsB,IAAV,CAAeJ;AAVR,CAA9B;AAaAd,iBAAiB,CAACmB,YAAlB,GAAiC;AAC/B;AACAhB,EAAAA,GAAG,EAAE;AAF0B,CAAjC","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport LocationIcon from \"@opentripplanner/location-icon\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport * as Styled from \"../styled\";\nimport RouteBadge from \"../RouteBadge\";\n\nexport default function LineColumnContent({\n  interline,\n  isDestination,\n  leg,\n  LegIcon,\n  toRouteAbbreviation\n}) {\n  return (\n    <Styled.LegLine>\n      {!isDestination && (\n        <Styled.InnerLine mode={leg.mode} routeColor={leg.routeColor} />\n      )}\n      <Styled.LineBadgeContainer>\n        {/* TODO: This is a placeholder for a routebadge when we create the transit leg */}\n        {!interline && !isDestination && leg.transitLeg && (\n          <RouteBadge\n            color={leg.routeColor}\n            abbreviation={toRouteAbbreviation(\n              parseInt(leg.route, 10) || leg.route\n            )}\n            name={leg.routeLongName || \"\"}\n          />\n        )}\n        {!interline && !isDestination && !leg.transitLeg && (\n          <Styled.AccessBadge mode={leg.mode} routeColor={leg.routeColor}>\n            {<LegIcon leg={leg} title={`Travel by ${leg.mode}`} width=\"66%\" />}\n          </Styled.AccessBadge>\n        )}\n        {isDestination && (\n          <Styled.Destination>\n            <LocationIcon size={25} type=\"to\" />\n          </Styled.Destination>\n        )}\n      </Styled.LineBadgeContainer>\n    </Styled.LegLine>\n  );\n}\n\nLineColumnContent.propTypes = {\n  /** Whether this leg is an interlined-transit leg */\n  interline: PropTypes.bool.isRequired,\n  /** Whether this place row represents the destination */\n  isDestination: PropTypes.bool.isRequired,\n  /** Contains details about leg object that is being displayed */\n  leg: coreUtils.types.legType,\n  /** A component class used to render the icon for a leg */\n  LegIcon: PropTypes.elementType.isRequired,\n  /** Converts a route's ID to its accepted badge abbreviation */\n  toRouteAbbreviation: PropTypes.func.isRequired\n};\n\nLineColumnContent.defaultProps = {\n  // can be null if this is the destination place\n  leg: null\n};\n"],"file":"line-column-content.js"}