import coreUtils from "@opentripplanner/core-utils";
import LocationIcon from "@opentripplanner/location-icon";
import PropTypes from "prop-types";
import React from "react";
import * as Styled from "../styled";
import RouteBadge from "../RouteBadge";
export default function LineColumnContent(_ref) {
  var interline = _ref.interline,
      isDestination = _ref.isDestination,
      leg = _ref.leg,
      LegIcon = _ref.LegIcon,
      toRouteAbbreviation = _ref.toRouteAbbreviation;
  return /*#__PURE__*/React.createElement(Styled.LegLine, null, !isDestination && /*#__PURE__*/React.createElement(Styled.InnerLine, {
    mode: leg.mode,
    routeColor: leg.routeColor
  }), /*#__PURE__*/React.createElement(Styled.LineBadgeContainer, null, !interline && !isDestination && leg.transitLeg && /*#__PURE__*/React.createElement(RouteBadge, {
    color: leg.routeColor,
    abbreviation: toRouteAbbreviation(parseInt(leg.route, 10) || leg.route),
    name: leg.routeLongName || ""
  }), !interline && !isDestination && !leg.transitLeg && /*#__PURE__*/React.createElement(Styled.AccessBadge, {
    mode: leg.mode,
    routeColor: leg.routeColor
  }, /*#__PURE__*/React.createElement(LegIcon, {
    leg: leg,
    title: "Travel by ".concat(leg.mode),
    width: "66%"
  })), isDestination && /*#__PURE__*/React.createElement(Styled.Destination, null, /*#__PURE__*/React.createElement(LocationIcon, {
    size: 25,
    type: "to"
  }))));
}
LineColumnContent.propTypes = {
  /** Whether this leg is an interlined-transit leg */
  interline: PropTypes.bool.isRequired,

  /** Whether this place row represents the destination */
  isDestination: PropTypes.bool.isRequired,

  /** Contains details about leg object that is being displayed */
  leg: coreUtils.types.legType,

  /** A component class used to render the icon for a leg */
  LegIcon: PropTypes.elementType.isRequired,

  /** Converts a route's ID to its accepted badge abbreviation */
  toRouteAbbreviation: PropTypes.func.isRequired
};
LineColumnContent.defaultProps = {
  // can be null if this is the destination place
  leg: null
};
//# sourceMappingURL=line-column-content.js.map