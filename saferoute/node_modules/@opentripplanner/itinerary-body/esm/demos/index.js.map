{"version":3,"sources":["../../src/demos/index.js"],"names":["coreUtils","PropTypes","React","action","styled","ExclamationTriangle","ItineraryBody","OtpRRTransitLegSubheader","ItineraryBodyClasses","CustomPlaceName","place","name","CustomTimeColumnContent","isDestination","leg","timeOptions","time","endTime","startTime","color","formatTime","fontSize","lineHeight","height","propTypes","bool","isRequired","types","legType","timeOptionsType","defaultProps","customToRouteAbbreviation","route","toString","length","undefined","CustomTransitLegSummary","onClick","stopsExpanded","duration","formatDuration","intermediateStops","func","StyledItineraryBody","LegBody","TimeColumn","WrappedOtpRRTransitLegSubheader","languageConfig","languageConfigType"],"mappings":"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","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { action } from \"@storybook/addon-actions\";\nimport styled from \"styled-components\";\nimport { ExclamationTriangle } from \"@styled-icons/fa-solid/ExclamationTriangle\";\n\nimport ItineraryBody from \"..\";\nimport OtpRRTransitLegSubheader from \"../otp-react-redux/transit-leg-subheader\";\nimport * as ItineraryBodyClasses from \"../styled\";\n\nexport function CustomPlaceName({ place }) {\n  return `ðŸŽ‰âœ¨ðŸŽŠ ${place.name} ðŸŽ‰âœ¨ðŸŽŠ`;\n}\n\n/**\n * Custom component, for illustration purposes only, for displaying the time and other info\n * of the given leg in the time column of the ItineraryBody -> PlaceRow component.\n */\nexport function CustomTimeColumnContent({ isDestination, leg, timeOptions }) {\n  const time = isDestination ? leg.endTime : leg.startTime;\n\n  return (\n    <>\n      <div>\n        <span style={{ color: \"#E60000\" }}>\n          {time && coreUtils.time.formatTime(time, timeOptions)}\n        </span>\n      </div>\n      <div style={{ fontSize: \"80%\", lineHeight: \"1em\" }}>\n        <ExclamationTriangle style={{ height: \"1em\" }} /> Delayed xx&nbsp;min.\n      </div>\n    </>\n  );\n}\n\nCustomTimeColumnContent.propTypes = {\n  isDestination: PropTypes.bool.isRequired,\n  leg: coreUtils.types.legType.isRequired,\n  timeOptions: coreUtils.types.timeOptionsType\n};\n\nCustomTimeColumnContent.defaultProps = {\n  timeOptions: null\n};\n\nexport function customToRouteAbbreviation(route) {\n  if (route.toString().length < 3) {\n    return route;\n  }\n  return undefined;\n}\n\nexport function CustomTransitLegSummary({ leg, onClick, stopsExpanded }) {\n  return (\n    /* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events */\n    <div onClick={onClick}>\n      {leg.duration && (\n        <span>Ride {coreUtils.time.formatDuration(leg.duration)}</span>\n      )}\n      {leg.intermediateStops && (\n        <span>\n          {` (${leg.intermediateStops.length + 1} stops)`}\n          <ItineraryBodyClasses.CaretToggle expanded={stopsExpanded} />\n        </span>\n      )}\n    </div>\n  );\n}\n\nCustomTransitLegSummary.propTypes = {\n  leg: coreUtils.types.legType.isRequired,\n  onClick: PropTypes.func.isRequired,\n  stopsExpanded: PropTypes.bool.isRequired\n};\n\nexport const StyledItineraryBody = styled(ItineraryBody)`\n  ${ItineraryBodyClasses.LegBody} {\n    background-color: pink;\n  }\n\n  ${ItineraryBodyClasses.TimeColumn} {\n    color: #676767;\n    font-size: 14px;\n    padding-right: 4px;\n    padding-top: 1px;\n    text-align: right;\n    vertical-align: top;\n    width: 60px;\n  }\n`;\n\nexport function WrappedOtpRRTransitLegSubheader({ languageConfig, leg }) {\n  return (\n    <OtpRRTransitLegSubheader\n      languageConfig={languageConfig}\n      leg={leg}\n      onStopClick={action(\"Transit Stop Click\")}\n    />\n  );\n}\n\nWrappedOtpRRTransitLegSubheader.propTypes = {\n  languageConfig: coreUtils.types.languageConfigType.isRequired,\n  leg: coreUtils.types.legType.isRequired\n};\n"],"file":"index.js"}