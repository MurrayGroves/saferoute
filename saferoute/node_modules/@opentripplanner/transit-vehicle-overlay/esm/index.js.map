{"version":3,"sources":["../src/index.tsx"],"names":["MarkerWithPopup","React","getTransitIcon","VehicleTooltip","TransitVehicleOverlay","color","TooltipSlot","vehicles","validVehicles","filter","vehicle","lat","lon","length","Tooltip","map","Icon","routeType","vehicleId","offset","heading"],"mappings":"AAAA,SAASA,eAAT,QAAgC,2BAAhC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAiBA;AACA;AACA;AACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAIJ;AAAA,MAHxBC,KAGwB,QAHxBA,KAGwB;AAAA,MAFxBC,WAEwB,QAFxBA,WAEwB;AAAA,MADxBC,QACwB,QADxBA,QACwB;AACxB,MAAMC,aAAa,GAAGD,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,MAAV,CACpB,UAAAC,OAAO;AAAA,WAAI,CAAC,EAACA,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEC,GAAV,CAAD,IAAkB,CAAC,EAACD,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEE,GAAV,CAAvB;AAAA,GADa,CAAtB,CADwB,CAIxB;AACA;;AACA,MAAI,CAACJ,aAAD,IAAkBA,aAAa,CAACK,MAAd,KAAyB,CAA/C,EAAkD;AAChD,WAAO,IAAP;AACD;;AAED,MAAMC,OAAO,GAAGR,WAAW,IAAIH,cAA/B;AAEA,sBACE,0CACGK,aAAa,CAACO,GAAd,CAAkB,UAAAL,OAAO,EAAI;AAC5B,QAAMM,IAAI,GAAGd,cAAc,CAACQ,OAAO,CAACO,SAAT,CAA3B;AAEA,wBACE,oBAAC,eAAD;AACE,MAAA,GAAG,EAAEP,OAAO,CAACQ,SADf;AAEE,MAAA,QAAQ,EAAE,CAACR,OAAO,CAACC,GAAT,EAAcD,OAAO,CAACE,GAAtB,CAFZ,CAGE;AAHF;AAIE,MAAA,UAAU,EAAE;AAAEO,QAAAA,MAAM,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN;AAAV,OAJd,CAKE;AALF;AAME,MAAA,eAAe,eAAE,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAET;AAAlB;AANnB,oBASE,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAEA,OAAO,CAACU,OAAtB;AAA+B,MAAA,UAAU,EAAEf;AAA3C,MATF,CADF;AAaD,GAhBA,CADH,CADF;AAqBD,CArCD;;AAuCA,eAAeD,qBAAf","sourcesContent":["import { MarkerWithPopup } from \"@opentripplanner/base-map\";\nimport { TransitVehicle } from \"@opentripplanner/types\";\nimport React from \"react\";\n\nimport { getTransitIcon } from \"./TransitIcons\";\nimport VehicleTooltip from \"./VehicleTooltip\";\n\ntype Props = {\n  /**\n   * A hex color in the form `#fffFFF` to highlight all vehicles as\n   */\n  color?: string;\n  /**\n   * A tooltip JSX to render\n   */\n  TooltipSlot?: JSX.Element;\n  /**\n   * The list of vehicles to create stop markers for.\n   */\n  vehicles?: TransitVehicle[];\n};\n\n/**\n * An overlay to view a collection of transit vehicles.\n */\nconst TransitVehicleOverlay = ({\n  color,\n  TooltipSlot,\n  vehicles\n}: Props): JSX.Element => {\n  const validVehicles = vehicles?.filter(\n    vehicle => !!vehicle?.lat && !!vehicle?.lon\n  );\n  // Don't render if no map or no vehicles are defined.\n  // (ZoomBasedMarkers will also not render below the minimum zoom threshold defined in the symbols prop.)\n  if (!validVehicles || validVehicles.length === 0) {\n    return null;\n  }\n\n  const Tooltip = TooltipSlot || VehicleTooltip;\n\n  return (\n    <>\n      {validVehicles.map(vehicle => {\n        const Icon = getTransitIcon(vehicle.routeType);\n\n        return (\n          <MarkerWithPopup\n            key={vehicle.vehicleId}\n            position={[vehicle.lat, vehicle.lon]}\n            // @ts-expect-error the prop override doesn't require all props to be present\n            popupProps={{ offset: [-15, 0] }}\n            // @ts-expect-error TODO FIX\n            tooltipContents={<Tooltip vehicle={vehicle} />}\n          >\n            {/* @ts-expect-error We know the icon is set dynamically */}\n            <Icon rotate={vehicle.heading} routeColor={color} />\n          </MarkerWithPopup>\n        );\n      })}\n    </>\n  );\n};\n\nexport default TransitVehicleOverlay;\n"],"file":"index.js"}