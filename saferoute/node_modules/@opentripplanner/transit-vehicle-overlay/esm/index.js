import { MarkerWithPopup } from "@opentripplanner/base-map";
import React from "react";
import { getTransitIcon } from "./TransitIcons";
import VehicleTooltip from "./VehicleTooltip";

/**
 * An overlay to view a collection of transit vehicles.
 */
var TransitVehicleOverlay = function TransitVehicleOverlay(_ref) {
  var color = _ref.color,
      TooltipSlot = _ref.TooltipSlot,
      vehicles = _ref.vehicles;
  var validVehicles = vehicles === null || vehicles === void 0 ? void 0 : vehicles.filter(function (vehicle) {
    return !!(vehicle !== null && vehicle !== void 0 && vehicle.lat) && !!(vehicle !== null && vehicle !== void 0 && vehicle.lon);
  }); // Don't render if no map or no vehicles are defined.
  // (ZoomBasedMarkers will also not render below the minimum zoom threshold defined in the symbols prop.)

  if (!validVehicles || validVehicles.length === 0) {
    return null;
  }

  var Tooltip = TooltipSlot || VehicleTooltip;
  return /*#__PURE__*/React.createElement(React.Fragment, null, validVehicles.map(function (vehicle) {
    var Icon = getTransitIcon(vehicle.routeType);
    return /*#__PURE__*/React.createElement(MarkerWithPopup, {
      key: vehicle.vehicleId,
      position: [vehicle.lat, vehicle.lon] // @ts-expect-error the prop override doesn't require all props to be present
      ,
      popupProps: {
        offset: [-15, 0]
      } // @ts-expect-error TODO FIX
      ,
      tooltipContents: /*#__PURE__*/React.createElement(Tooltip, {
        vehicle: vehicle
      })
    }, /*#__PURE__*/React.createElement(Icon, {
      rotate: vehicle.heading,
      routeColor: color
    }));
  }));
};

export default TransitVehicleOverlay;
//# sourceMappingURL=index.js.map