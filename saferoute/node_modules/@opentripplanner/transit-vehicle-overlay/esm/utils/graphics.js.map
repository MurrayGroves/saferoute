{"version":3,"sources":["../../src/utils/graphics.js"],"names":["PropTypes","React","ReactDOMServer","styled","L","cloneDeep","RotatedMarker","linterIgnoreTheseProps","renderAsImage","icon","size","anchor","pop","tt","cls","x","y","Math","round","retVal","divIcon","html","renderToString","className","iconSize","iconAnchor","popupAnchor","tooltipAnchor","setColor","color","obj","makeBasicVehicleShape","NormalShape","TrackedShape","getSize","Shape","highlightColor","isTracked","zoom","propTypes","string","bool","number","defaultProps","makeVehicleIcon","Styled","mode","makeModeStyles","normal","tracked","busIcon","railIcon","tramIcon","streetcarIcon","gondolaIcon","NormBus","TrackedBus","NormRail","TrackedRail","NormTram","TrackedTram","NormSC","TrackedSC","NormGond","TrackedGond","makeRotatedMarker","Icon","VehicleMarker","children","onVehicleClicked","vehicle","lat","lon","heading","routeType","arrayOf","element","func","object","isRequired"],"mappings":"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","sourcesContent":["// Removed as core-utils is typescripted. TODO: Remove when typescripting!\n/* eslint-disable react/forbid-prop-types */\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport styled from \"styled-components\";\nimport L from \"leaflet\";\nimport cloneDeep from \"lodash.clonedeep\";\n\nimport RotatedMarker from \"../components/markers/RotatedMarker\";\nimport { linterIgnoreTheseProps } from \"./data\";\n\n/**\n * helper to render a React .svg structure, ala icons/Bus.js as a leaflet marker\n *\n * @param icon\n * @param size\n * @param anchor\n * @param pop\n * @param tt\n * @param cls\n */\nexport function renderAsImage(\n  icon,\n  size = [22, 22],\n  anchor = null,\n  pop = null,\n  tt = null,\n  cls = \"\"\n) {\n  const x = size[0];\n  const y = size[1];\n\n  // debugger;\n  if (!pop) pop = [0, 0];\n  if (!tt) tt = [0, 0];\n  if (!anchor) anchor = [Math.round(x / 2), Math.round(y / 2)];\n\n  const retVal = L.divIcon({\n    html: ReactDOMServer.renderToString(icon),\n    className: cls,\n    iconSize: size,\n    iconAnchor: anchor,\n    popupAnchor: pop,\n    tooltipAnchor: tt\n  });\n  return retVal;\n}\n\n/**\n * will take an input object (e.g., probably a defaultProp representing a leaflet style),\n * deep copy that object, and return back a new obj with the .color set\n *\n * @param color\n * @param obj\n * @return deep copied object with color set\n */\nexport function setColor(color, obj) {\n  const retVal = cloneDeep(obj);\n  retVal.color = color;\n  return retVal;\n}\n\n/**\n * Associates two shapes, one for rendering tracked vehicles, and one for untracked vehicles,\n * and optionally renders a size (number) prop determined by the optional getSize function argument.\n */\nexport const makeBasicVehicleShape = (NormalShape, TrackedShape, getSize) => {\n  const Shape = ({ color, highlightColor, isTracked, zoom }) => {\n    const size = getSize && getSize(zoom);\n    return isTracked ? (\n      <TrackedShape color={color} colorselected={highlightColor} size={size} />\n    ) : (\n      <NormalShape color={color} colorselected={highlightColor} size={size} />\n    );\n  };\n\n  Shape.propTypes = {\n    /** fill color (#AABBCC format) for all (non-tracked) map vehicle markers */\n    color: PropTypes.string,\n\n    /** fill color of tracked vehicle */\n    highlightColor: PropTypes.string,\n\n    /** tracking boolean + colors all work to color the marker */\n    isTracked: PropTypes.bool,\n\n    /** map zoom: is part of the props due to redrawing this layer on map zoom */\n    zoom: PropTypes.number\n  };\n\n  Shape.defaultProps = {\n    color: \"\",\n    highlightColor: \"\",\n    isTracked: false,\n    zoom: null\n  };\n\n  return Shape;\n};\n\n/**\n * makes a circular marker icon with a vehicle image based on mode\n *\n * @param Styled\n * @param mode\n * @param color\n * @param highlightColor\n * @param isTracked\n * @return marker object\n */\nexport function makeVehicleIcon(\n  Styled,\n  mode,\n  color,\n  highlightColor,\n  isTracked\n) {\n  let icon;\n  switch (mode) {\n    case \"TRAM\":\n      icon = isTracked ? (\n        <Styled.TrackedTram color={color} colorselected={highlightColor} />\n      ) : (\n        <Styled.NormTram color={color} colorselected={highlightColor} />\n      );\n      break;\n    case \"SC\":\n      icon = isTracked ? (\n        <Styled.TrackedSC color={color} colorselected={highlightColor} />\n      ) : (\n        <Styled.NormSC color={color} colorselected={highlightColor} />\n      );\n      break;\n    case \"GONDOLA\":\n      icon = isTracked ? (\n        <Styled.TrackedGond color={color} colorselected={highlightColor} />\n      ) : (\n        <Styled.NormGond color={color} colorselected={highlightColor} />\n      );\n      break;\n    case \"RAIL\":\n    case \"SUBWAY\":\n      icon = isTracked ? (\n        <Styled.TrackedRail color={color} colorselected={highlightColor} />\n      ) : (\n        <Styled.NormRail color={color} colorselected={highlightColor} />\n      );\n      break;\n    case \"BUS\":\n      icon = isTracked ? (\n        <Styled.TrackedBus color={color} colorselected={highlightColor} />\n      ) : (\n        <Styled.NormBus color={color} colorselected={highlightColor} />\n      );\n      break;\n    default:\n      icon = isTracked ? (\n        <Styled.TrackedShape color={color} colorselected={highlightColor} />\n      ) : (\n        <Styled.Shape color={color} colorselected={highlightColor} />\n      );\n      break;\n  }\n  return icon;\n}\n\n/**\n * different icons per mode is repeated in multiple places. This helper function is reused\n * in multiple places to apply a normal and tracked style, based on various transit modes\n *\n * @param normal\n * @param tracked\n * @param busIcon\n * @param railIcon\n * @param tramIcon\n * @param streetcarIcon\n * @param gondolaIcon\n * @return {array} - styled icon objects (two for each mode, ala tracked and normal styles)\n */\nexport function makeModeStyles(\n  normal,\n  tracked,\n  busIcon,\n  railIcon,\n  tramIcon,\n  streetcarIcon,\n  gondolaIcon\n) {\n  if (!railIcon) railIcon = busIcon;\n  if (!tramIcon) tramIcon = railIcon;\n  if (!streetcarIcon) streetcarIcon = railIcon;\n  if (!gondolaIcon) gondolaIcon = busIcon;\n\n  const NormBus = styled(busIcon)`\n    ${normal}\n  `;\n\n  const TrackedBus = styled(NormBus)`\n    ${tracked}\n  `;\n\n  const NormRail = styled(railIcon)`\n    ${normal}\n  `;\n\n  const TrackedRail = styled(NormRail)`\n    ${tracked}\n  `;\n\n  const NormTram = styled(tramIcon)`\n    ${normal}\n  `;\n\n  const TrackedTram = styled(NormTram)`\n    ${tracked}\n  `;\n\n  const NormSC = styled(streetcarIcon)`\n    ${normal}\n  `;\n\n  const TrackedSC = styled(NormSC)`\n    ${tracked}\n  `;\n\n  const NormGond = styled(gondolaIcon)`\n    ${normal}\n  `;\n\n  const TrackedGond = styled(NormGond)`\n    ${tracked}\n  `;\n\n  return [\n    NormBus,\n    TrackedBus,\n    NormRail,\n    TrackedRail,\n    NormTram,\n    TrackedTram,\n    NormSC,\n    TrackedSC,\n    NormGond,\n    TrackedGond\n  ];\n}\n\n/**\n * Renders the provided Icon with a RotatedMarker component (for rendering rotated vehicle symbols)\n * and make the component render the icon with the size returned by the optional getSize function argument.\n */\nexport const makeRotatedMarker = (Icon, getSize) => {\n  const VehicleMarker = ({\n    children,\n    color,\n    highlightColor,\n    isTracked,\n    onVehicleClicked,\n    vehicle,\n    zoom\n  }) => {\n    if (!vehicle) {\n      return null;\n    }\n    const { lat, lon, heading } = vehicle;\n    const icon = (\n      <Icon\n        color={color}\n        highlightColor={highlightColor}\n        isTracked={isTracked}\n        routeType={vehicle.routeType}\n        zoom={zoom}\n      />\n    );\n\n    return (\n      <RotatedMarker\n        icon={renderAsImage(icon, getSize && getSize(zoom))}\n        position={[lat, lon]}\n        rotationAngle={heading}\n        rotationOrigin=\"center center\"\n        onClick={() => onVehicleClicked(vehicle, isTracked)}\n        zIndexOffset={isTracked ? 1000 : 0}\n      >\n        {children}\n      </RotatedMarker>\n    );\n  };\n\n  VehicleMarker.propTypes = {\n    /** React children */\n    children: PropTypes.arrayOf(PropTypes.element),\n\n    /** fill color (#AABBCC format) for all (non-tracked) map vehicle markers */\n    color: PropTypes.string,\n\n    /** fill color of tracked vehicle */\n    highlightColor: PropTypes.string,\n\n    /** tracking boolean + colors all work to color the marker */\n    isTracked: PropTypes.bool,\n\n    /** Callback fired when the vehicle marker is clicked (vehicle: object) => {} */\n    onVehicleClicked: PropTypes.func,\n\n    /** vehicle record  - @see: core-utils/types/transitVehicleType */\n    // vehicle: coreUtils.types.transitVehicleType.isRequired,\n    vehicle: PropTypes.object.isRequired,\n\n    /** map zoom: is part of the props due to redrawing this layer on map zoom */\n    zoom: PropTypes.number\n  };\n\n  VehicleMarker.defaultProps = {\n    children: null,\n    color: \"\",\n    highlightColor: \"\",\n    isTracked: false,\n    onVehicleClicked: (vehicle, isTracked) => {\n      linterIgnoreTheseProps(vehicle, isTracked);\n    },\n    zoom: null\n  };\n\n  return VehicleMarker;\n};\n"],"file":"graphics.js"}