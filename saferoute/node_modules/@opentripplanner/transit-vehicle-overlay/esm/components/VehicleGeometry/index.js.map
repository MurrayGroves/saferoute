{"version":3,"sources":["../../../src/components/VehicleGeometry/index.js"],"names":["React","PropTypes","useLeaflet","CircledVehicle","linterIgnoreTheseProps","VehicleGeometry","props","zoom","vehicle","isTracked","onVehicleClicked","onRecenterMap","color","highlightColor","MarkerSlot","PopupSlot","TooltipSlot","map","lat","lon","propTypes","number","isRequired","object","bool","func","string","defaultProps"],"mappings":"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","sourcesContent":["// Removed as core-utils is typescripted. TODO: Remove when typescripting!\n/* eslint-disable react/forbid-prop-types */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useLeaflet } from \"react-leaflet\";\n\nimport { CircledVehicle } from \"../markers/ModeCircles\";\nimport { linterIgnoreTheseProps } from \"../../utils\";\n\n/**\n * presentational component for rendering transit vehicle positions atop a map\n * will show both point positions for a collection of vehicles, as well as being\n * able to render a 'selected' vehicle\n */\nexport default function VehicleGeometry(props) {\n  const {\n    zoom,\n    vehicle,\n    isTracked,\n    onVehicleClicked,\n    onRecenterMap,\n    color,\n    highlightColor,\n    MarkerSlot,\n    PopupSlot,\n    TooltipSlot\n  } = props;\n\n  // recenter the map to focus on selected vehicle\n  if (isTracked && onRecenterMap) {\n    // TODO: very leaflet specific - e.g., mb geo\n    const { map } = useLeaflet();\n    onRecenterMap(map, vehicle.lat, vehicle.lon);\n  }\n\n  return (\n    <MarkerSlot\n      zoom={zoom}\n      vehicle={vehicle}\n      isTracked={isTracked}\n      onVehicleClicked={onVehicleClicked}\n      color={color}\n      highlightColor={highlightColor}\n    >\n      {PopupSlot && <PopupSlot vehicle={vehicle} isTracked={isTracked} />}\n      {TooltipSlot && <TooltipSlot vehicle={vehicle} isTracked={isTracked} />}\n    </MarkerSlot>\n  );\n}\n\nVehicleGeometry.propTypes = {\n  /** map zoom: is part of the props due to redrawing this layer on map zoom */\n  zoom: PropTypes.number.isRequired,\n\n  /** required vehicle record for the vehicle */\n  // vehicle: coreUtils.types.transitVehicleType.isRequired,\n  vehicle: PropTypes.object.isRequired,\n\n  isTracked: PropTypes.bool,\n\n  /** Callback fired when the vehicle is clicked (vehicle: object) => {} */\n  onVehicleClicked: PropTypes.func,\n\n  /** will pan the map to the coordinates of the selected vehicle */\n  onRecenterMap: PropTypes.func,\n\n  /**\n   * A custom leaflet marker component with the signature\n   * ({vehicle: object, onVehicleClicked: (vehicle) => {}, children: Element}) => Element\n   */\n  MarkerSlot: PropTypes.func,\n\n  /** optional / customizable popup slot */\n  PopupSlot: PropTypes.func,\n\n  /** optional / customizable tooltip slot */\n  TooltipSlot: PropTypes.func,\n\n  /** fill color of a vehicle */\n  color: PropTypes.string,\n\n  /** fill color of a tracked vehicle (see isTracked above) */\n  highlightColor: PropTypes.string\n};\n\nVehicleGeometry.defaultProps = {\n  isTracked: false,\n  onVehicleClicked: (vehicle, isTracked) => {\n    linterIgnoreTheseProps(vehicle, isTracked);\n  },\n  onRecenterMap: null,\n  MarkerSlot: CircledVehicle,\n  PopupSlot: null,\n  TooltipSlot: null,\n  color: \"\",\n  highlightColor: \"\"\n};\n"],"file":"index.js"}