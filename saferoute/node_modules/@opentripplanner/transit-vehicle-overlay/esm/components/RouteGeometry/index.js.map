{"version":3,"sources":["../../../src/components/RouteGeometry/index.js"],"names":["React","PropTypes","FeatureGroup","utils","RouteGeometry","props","pattern","zoom","selectedVehicle","highlightColor","lowlightColor","highlight","lowlight","linterIgnoreTheseProps","setColor","splitCoord","getVehicleCoordinates","pt","findPointOnLine","data","geom","splitLineGeometry","id","segments","makeSplitLine","retVal","length","propTypes","number","shape","string","isRequired","arrayOf","defaultProps","color","weight","opacity","dashArray"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FeatureGroup } from \"react-leaflet\";\n\nimport * as utils from \"../../utils\";\n\n/**\n * vehicle geometry presentational component that creates a map overlay for the line\n * geometry showing the travel pattern of a vehicle\n */\nexport default function RouteGeometry(props) {\n  const { pattern, zoom, selectedVehicle } = props;\n  const { highlightColor, lowlightColor } = props;\n  let { highlight, lowlight } = props;\n\n  utils.linterIgnoreTheseProps(zoom);\n\n  if (highlightColor) highlight = utils.setColor(highlightColor, highlight);\n  if (lowlightColor) lowlight = utils.setColor(lowlightColor, lowlight);\n\n  const splitCoord =\n    selectedVehicle && utils.getVehicleCoordinates(selectedVehicle);\n  const pt = utils.findPointOnLine(splitCoord, pattern.data);\n  const geom = utils.splitLineGeometry(pattern.data, pt, pattern.id);\n  const segments = utils.makeSplitLine(geom, highlight, lowlight);\n\n  let retVal = <FeatureGroup />;\n  if (segments && segments.length === 2) {\n    retVal = <FeatureGroup>{segments}</FeatureGroup>;\n  }\n  return retVal;\n}\n\nRouteGeometry.propTypes = {\n  /** map zoom: is part of the props due to redrawing this layer on map zoom */\n  zoom: PropTypes.number,\n\n  /** optional vehicle record for the (tracked) vehicle */\n  // selectedVehicle: transitVehicleType,\n\n  /** line geometry, ala { id: <tripId>, data: [[lat, lon], [45.50,-122.41], etc..] } */\n  pattern: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired\n  }),\n\n  /** color of the *to be travelled* portion of tracked route geom */\n  highlightColor: PropTypes.string,\n\n  /** color of the *already travelled* tracked vehicle route (see highlightColor) */\n  lowlightColor: PropTypes.string\n\n  /** line styling options for the to be traveled part of the line geom */\n  // highlight: leafletPathType,\n\n  /** line styling options for the already traveled portion of the line geom */\n  // lowlight: leafletPathType\n};\n\nRouteGeometry.defaultProps = {\n  zoom: 13,\n  pattern: null,\n  selectedVehicle: null,\n  highlightColor: null,\n  lowlightColor: null,\n  highlight: {\n    color: \"#00bfff\",\n    weight: 5.0,\n    opacity: 0.85\n  },\n  lowlight: {\n    color: \"#777\",\n    weight: 5.0,\n    opacity: 0.7,\n    dashArray: \"1, 10, 1, 10\"\n  }\n};\n"],"file":"index.js"}