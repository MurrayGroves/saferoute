{"version":3,"sources":["../../../../src/components/popups/VehicleTooltip/index.js"],"names":["React","PropTypes","FormattedMessage","Tooltip","L","TooltipStyle","defaultMessages","linterIgnoreTheseProps","FormattedDurationWithSeconds","VehicleTooltip","props","vehicle","isTracked","direction","permanent","offset","routeShortName","routeType","seconds","name","length","route","routeLabel","duration","propTypes","object","bool","string","defaultProps","Point"],"mappings":"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","sourcesContent":["// Removed as core-utils is typescripted. TODO: Remove when typescripting!\n/* eslint-disable react/forbid-prop-types */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Tooltip } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nimport { TooltipStyle } from \"../styled\";\nimport { defaultMessages, linterIgnoreTheseProps } from \"../../../utils\";\nimport FormattedDurationWithSeconds from \"../../../utils/formatted-duration-with-seconds\";\n\n/** will show a (leaflet) map tooltip on a vehicle, showing route and update recency */\nexport default function VehicleTooltip(props) {\n  const { vehicle, isTracked, direction, permanent, offset } = props;\n  linterIgnoreTheseProps(isTracked);\n\n  const { routeShortName, routeType, seconds } = vehicle;\n\n  let name = routeShortName;\n  // This condition avoids processing long route names such as \"Portland Streetcar\".\n  if (routeShortName?.length <= 5) {\n    name = routeType ? (\n      // This produces text such as \"MAX Green\", so don't localize.\n      `${routeType} ${routeShortName}`\n    ) : (\n      <FormattedMessage\n        defaultMessage={\n          defaultMessages[\"otpUi.TransitVehicleOverlay.genericRouteFormat\"]\n        }\n        description=\"Formats a route label\"\n        id=\"otpUi.TransitVehicleOverlay.genericRouteFormat\"\n        values={{\n          route: routeShortName\n        }}\n      />\n    );\n  }\n\n  return (\n    <Tooltip permanent={permanent} direction={direction} offset={offset}>\n      <TooltipStyle>\n        <TooltipStyle.Title>\n          <FormattedMessage\n            defaultMessage={\n              defaultMessages[\"otpUi.TransitVehicleOverlay.tooltipRouteLabel\"]\n            }\n            description=\"Displays a route label in a tooltip\"\n            id=\"otpUi.TransitVehicleOverlay.tooltipRouteLabel\"\n            values={{\n              routeLabel: name\n            }}\n          />\n        </TooltipStyle.Title>\n        <FormattedMessage\n          defaultMessage={\n            defaultMessages[\"otpUi.TransitVehicleOverlay.durationAgo\"]\n          }\n          description=\"Text describing a past duration\"\n          id=\"otpUi.TransitVehicleOverlay.durationAgo\"\n          values={{\n            duration: <FormattedDurationWithSeconds seconds={seconds} />\n          }}\n        />\n      </TooltipStyle>\n    </Tooltip>\n  );\n}\n\nVehicleTooltip.propTypes = {\n  /** vehicle record - @see: core-utils/types/transitVehicleType */\n  // vehicle: coreUtils.types.transitVehicleType,\n  vehicle: PropTypes.object,\n\n  /** indicate if this vehicle is being tracked, */\n  isTracked: PropTypes.bool,\n\n  /** is the tip always shown, or just shown on mouse hover */\n  permanent: PropTypes.bool,\n\n  /** tip placement (side(s), top, bottom) */\n  direction: PropTypes.string,\n\n  /** center of the marker, or some X,Y position in relation to the marker's center */\n  offset: PropTypes.object // eslint-disable-line react/forbid-prop-types\n};\n\nVehicleTooltip.defaultProps = {\n  vehicle: null,\n  isTracked: false,\n  permanent: false,\n  direction: \"auto\",\n  offset: new L.Point(0, 0)\n};\n"],"file":"index.js"}