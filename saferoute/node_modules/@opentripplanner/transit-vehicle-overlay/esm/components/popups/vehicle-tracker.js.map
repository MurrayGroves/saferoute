{"version":3,"sources":["../../../src/components/popups/vehicle-tracker.js"],"names":["React","FormattedMessage","PropTypes","defaultMessages","S","VehicleTracker","vehicle","isTracked","setTracked","text","cls","handleClick","propTypes","object","bool","func","isRequired","defaultProps","Styled"],"mappings":"AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,eAAT,QAAgC,aAAhC;AAEA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAEA;AACA;AACA;;AACA,eAAe,SAASC,cAAT,OAA4D;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACzE,MAAMC,IAAI,GAAGF,SAAS,gBACpB,oBAAC,gBAAD;AACE,IAAA,cAAc,EAAEJ,eAAe,CAAC,uCAAD,CADjC;AAEE,IAAA,WAAW,EAAC,oCAFd;AAGE,IAAA,EAAE,EAAC;AAHL,IADoB,gBAOpB,oBAAC,gBAAD;AACE,IAAA,cAAc,EAAEA,eAAe,CAAC,wCAAD,CADjC;AAEE,IAAA,WAAW,EAAC,qCAFd;AAGE,IAAA,EAAE,EAAC;AAHL,IAPF;AAaA,MAAMO,GAAG,GAAGH,SAAS,GAAG,QAAH,GAAc,EAAnC;;AAEA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBH,IAAAA,UAAU,CAACF,OAAD,EAAUC,SAAV,CAAV;AACD,GAFD;;AAIA,sBACE,oBAAC,CAAD,CAAG,UAAH,CAAc,MAAd;AAAqB,IAAA,OAAO,EAAEI,WAA9B;AAA2C,IAAA,SAAS,EAAED;AAAtD,KACGD,IADH,CADF;AAKD;AAEDJ,cAAc,CAACO,SAAf,GAA2B;AACzB;AACA;AACAN,EAAAA,OAAO,EAAEJ,SAAS,CAACW,MAHM;;AAKzB;AACAN,EAAAA,SAAS,EAAEL,SAAS,CAACY,IANI;;AAQzB;AACAN,EAAAA,UAAU,EAAEN,SAAS,CAACa,IAAV,CAAeC;AATF,CAA3B;AAYAX,cAAc,CAACY,YAAf,GAA8B;AAC5BX,EAAAA,OAAO,EAAE,IADmB;AAE5BC,EAAAA,SAAS,EAAE;AAFiB,CAA9B,C,CAKA;;AACA,SAASH,CAAC,IAAIc,MAAd","sourcesContent":["// Removed as core-utils is typescripted. TODO: Remove when typescripting!\n/* eslint-disable react/forbid-prop-types */\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport PropTypes from \"prop-types\";\n\nimport { defaultMessages } from \"../../utils\";\n\nimport * as S from \"./styled\";\n\n/**\n * presentational component for tracking button on marker popup\n */\nexport default function VehicleTracker({ vehicle, isTracked, setTracked }) {\n  const text = isTracked ? (\n    <FormattedMessage\n      defaultMessage={defaultMessages[\"otpUi.TransitVehicleOverlay.trackStop\"]}\n      description=\"Prompt to stop tracking a vehicle.\"\n      id=\"otpUi.TransitVehicleOverlay.trackStop\"\n    />\n  ) : (\n    <FormattedMessage\n      defaultMessage={defaultMessages[\"otpUi.TransitVehicleOverlay.trackStart\"]}\n      description=\"Prompt to start tracking a vehicle.\"\n      id=\"otpUi.TransitVehicleOverlay.trackStart\"\n    />\n  );\n  const cls = isTracked ? \"active\" : \"\";\n\n  const handleClick = () => {\n    setTracked(vehicle, isTracked);\n  };\n\n  return (\n    <S.PopupStyle.Button onClick={handleClick} className={cls}>\n      {text}\n    </S.PopupStyle.Button>\n  );\n}\n\nVehicleTracker.propTypes = {\n  /** vehicle record - @see: core-utils/types/transitVehicleType */\n  // vehicle: coreUtils.types.transitVehicleType,\n  vehicle: PropTypes.object,\n\n  /** tracking state for this vehicle (marker) .. determines button content */\n  isTracked: PropTypes.bool,\n\n  /** callback for when the button is triggered ... cb(vehicle, isTracked); */\n  setTracked: PropTypes.func.isRequired\n};\n\nVehicleTracker.defaultProps = {\n  vehicle: null,\n  isTracked: false\n};\n\n// Rename styled components for export\nexport { S as Styled };\n"],"file":"vehicle-tracker.js"}