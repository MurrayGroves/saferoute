{"version":3,"sources":["../../../../src/components/popups/VehiclePopup/index.js"],"names":["React","PropTypes","FormattedDate","FormattedMessage","Popup","PopupStyle","VehicleTracker","defaultMessages","linterIgnoreTheseProps","FormattedDurationWithSeconds","VehiclePopup","isTracked","setTracked","vehicle","blockId","reportDate","routeLongName","seconds","status","stopId","stopSequence","tripId","vehicleId","displayedStatus","isMultipleVehicles","indexOf","vehicleMessageValues","count","vehicleIds","replace","durationText","duration","date","propTypes","bool","func","object","defaultProps"],"mappings":"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","sourcesContent":["// Removed as core-utils is typescripted. TODO: Remove when typescripting!\n/* eslint-disable react/forbid-prop-types */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedDate, FormattedMessage } from \"react-intl\";\nimport { Popup } from \"react-leaflet\";\n\nimport { PopupStyle } from \"../styled\";\nimport VehicleTracker from \"../vehicle-tracker\";\nimport { defaultMessages, linterIgnoreTheseProps } from \"../../../utils\";\nimport FormattedDurationWithSeconds from \"../../../utils/formatted-duration-with-seconds\";\n\n/**\n * view component for vehicle marker popup\n * content is derived from the vehicle record\n */\nexport default function VehiclePopup({ isTracked, setTracked, vehicle }) {\n  const {\n    blockId,\n    reportDate,\n    routeLongName,\n    seconds,\n    status,\n    stopId,\n    stopSequence,\n    tripId,\n    vehicleId\n  } = vehicle;\n  let displayedStatus;\n  if (status === \"IN_TRANSIT_TO\") {\n    displayedStatus = (\n      <FormattedMessage\n        defaultMessage={\n          defaultMessages[\"otpUi.TransitVehicleOverlay.statusEnRoute\"]\n        }\n        description=\"Text shown for a moving transit vehicle\"\n        id=\"otpUi.TransitVehicleOverlay.statusEnRoute\"\n        values={{ stopId }}\n      />\n    );\n  } else if (status === \"STOPPED_AT\") {\n    if (stopSequence === 1) {\n      displayedStatus = (\n        <FormattedMessage\n          defaultMessage={\n            defaultMessages[\"otpUi.TransitVehicleOverlay.statusAtStart\"]\n          }\n          description=\"Text shown for a transit vehicle at the beginning of the line\"\n          id=\"otpUi.TransitVehicleOverlay.statusAtStart\"\n          values={{ stopId }}\n        />\n      );\n    } else {\n      displayedStatus = (\n        <FormattedMessage\n          defaultMessage={\n            defaultMessages[\"otpUi.TransitVehicleOverlay.statusAtStop\"]\n          }\n          description=\"Text shown for a transit vehicle stopped at a stop\"\n          id=\"otpUi.TransitVehicleOverlay.statusAtStop\"\n          values={{ stopId }}\n        />\n      );\n    }\n  } else {\n    displayedStatus = (\n      <FormattedMessage\n        defaultMessage={\n          defaultMessages[\"otpUi.TransitVehicleOverlay.statusUnknown\"]\n        }\n        description=\"Text shown for an unknown status\"\n        id=\"otpUi.TransitVehicleOverlay.statusUnknown\"\n      />\n    );\n  }\n\n  const isMultipleVehicles = vehicleId.indexOf(\"+\") > 0;\n  const vehicleMessageValues = isMultipleVehicles\n    ? {\n        count: 2,\n        // TODO: ideally you would want to use the equivalent of the comma of the desired language.\n        vehicleIds: vehicleId.replace(/\\+/g, \", \")\n      }\n    : {\n        count: 1,\n        vehicleIds: vehicleId\n      };\n\n  return (\n    <Popup>\n      <PopupStyle>\n        <PopupStyle.Title>{routeLongName}</PopupStyle.Title>\n        <PopupStyle.Span>\n          <FormattedMessage\n            defaultMessage={\n              defaultMessages[\"otpUi.TransitVehicleOverlay.lastSeen\"]\n            }\n            description=\"Text describing how long ago a transit vehicle last reported its status\"\n            id=\"otpUi.TransitVehicleOverlay.lastSeen\"\n            values={{\n              durationText: (\n                <FormattedMessage\n                  defaultMessage={\n                    defaultMessages[\"otpUi.TransitVehicleOverlay.durationAgo\"]\n                  }\n                  description=\"Text describing a past duration\"\n                  id=\"otpUi.TransitVehicleOverlay.durationAgo\"\n                  values={{\n                    duration: <FormattedDurationWithSeconds seconds={seconds} />\n                  }}\n                />\n              )\n            }}\n          />\n        </PopupStyle.Span>\n        <PopupStyle.Span>\n          <FormattedMessage\n            defaultMessage={defaultMessages[\"otpUi.TransitVehicleOverlay.date\"]}\n            description=\"Text describing when a transit vehicle last reported its status\"\n            id=\"otpUi.TransitVehicleOverlay.date\"\n            values={{\n              date: <FormattedDate value={reportDate} />\n            }}\n          />\n        </PopupStyle.Span>\n        <PopupStyle.Span>\n          <FormattedMessage\n            defaultMessage={\n              defaultMessages[\"otpUi.TransitVehicleOverlay.status\"]\n            }\n            description=\"Text describing the status of a transit vehicle\"\n            id=\"otpUi.TransitVehicleOverlay.status\"\n            values={{ status: displayedStatus }}\n          />\n        </PopupStyle.Span>\n        <PopupStyle.Span>\n          <FormattedMessage\n            defaultMessage={\n              defaultMessages[\"otpUi.TransitVehicleOverlay.tripAndBlockIds\"]\n            }\n            description=\"Text showing a transit vehicle trip and block ids\"\n            id=\"otpUi.TransitVehicleOverlay.tripAndBlockIds\"\n            values={{ blockId, tripId }}\n          />\n        </PopupStyle.Span>\n        <PopupStyle.Span>\n          <FormattedMessage\n            defaultMessage={\n              defaultMessages[\"otpUi.TransitVehicleOverlay.vehicleIds\"]\n            }\n            description=\"Displays transit vehicle numbers\"\n            id=\"otpUi.TransitVehicleOverlay.vehicleIds\"\n            values={vehicleMessageValues}\n          />\n        </PopupStyle.Span>\n        <VehicleTracker\n          isTracked={isTracked}\n          setTracked={setTracked}\n          vehicle={vehicle}\n        />\n      </PopupStyle>\n    </Popup>\n  );\n}\n\nVehiclePopup.propTypes = {\n  /** indicate if this vehicle is being tracked, */\n  isTracked: PropTypes.bool,\n\n  /** callback which forwards the vehicle and tracking status from track button */\n  setTracked: PropTypes.func,\n\n  /** vehicle record - @see: core-utils/types/transitVehicleType */\n  // TODO: add typescript\n  // vehicle: coreUtils.types.transitVehicleType,\n  vehicle: PropTypes.object\n};\n\nVehiclePopup.defaultProps = {\n  isTracked: false,\n  setTracked: (vehicle, isTracked) => {\n    linterIgnoreTheseProps(vehicle, isTracked);\n  },\n  vehicle: null\n};\n"],"file":"index.js"}