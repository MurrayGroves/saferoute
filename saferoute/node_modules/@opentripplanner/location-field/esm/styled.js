import React from "react";
import { useIntl } from "react-intl";
import styled, { keyframes } from "styled-components";
import { Spinner as FASpinner } from "@styled-icons/fa-solid/Spinner";
export var HiddenContent = styled.span.withConfig({
  displayName: "styled__HiddenContent",
  componentId: "sc-wgpkt8-0"
})(["clip:rect(0,0,0,0);display:inline-block;height:0;overflow:hidden;width:0;"]);
export var BaseButton = styled.button.withConfig({
  displayName: "styled__BaseButton",
  componentId: "sc-wgpkt8-1"
})(["border:none;background:none;"]);
export var Button = styled(BaseButton).withConfig({
  displayName: "styled__Button",
  componentId: "sc-wgpkt8-2"
})(["color:#888;margin:0;padding:2px 5px;"]);
export var ClearBoth = styled.div.withConfig({
  displayName: "styled__ClearBoth",
  componentId: "sc-wgpkt8-3"
})(["clear:both;"]);
export var DropdownButton = styled(BaseButton).withConfig({
  displayName: "styled__DropdownButton",
  componentId: "sc-wgpkt8-4"
})(["width:30px;"]);
export var DropdownContainer = styled.span.withConfig({
  displayName: "styled__DropdownContainer",
  componentId: "sc-wgpkt8-5"
})(["position:contents;width:100%;"]);
export var MenuItemList = styled.ul.attrs({
  role: "listbox"
}).withConfig({
  displayName: "styled__MenuItemList",
  componentId: "sc-wgpkt8-6"
})(["background-clip:padding-box;background-color:#fff;border-radius:4px;border:1px solid rgba(0,0,0,0.15);box-shadow:0 6px 12px rgba(0,0,0,0.175);float:left;font-size:14px;left:0;list-style:none;margin:2px 0 0;min-width:160px;padding:5px 0;position:absolute;text-align:left;top:100%;z-index:1000000;"]);
export var Dropdown = function Dropdown(_ref) {
  var children = _ref.children,
      input = _ref.input,
      listBoxIdentifier = _ref.listBoxIdentifier,
      _ref$onToggle = _ref.onToggle,
      onToggle = _ref$onToggle === void 0 ? function () {} : _ref$onToggle,
      open = _ref.open,
      status = _ref.status,
      title = _ref.title;
  var intl = useIntl();
  return /*#__PURE__*/React.createElement(DropdownContainer, null, /*#__PURE__*/React.createElement(DropdownButton, {
    "aria-controls": listBoxIdentifier,
    "aria-expanded": open,
    "aria-label": intl.formatMessage({
      defaultMessage: "Open the list of location suggestions",
      description: "Text to show as a a11y label for the button that opens the dropdown list of locations",
      id: "otpUi.LocationField.suggestedLocationsLong"
    }),
    onClick: onToggle,
    tabIndex: -1
  }, title), input, /*#__PURE__*/React.createElement(HiddenContent, {
    role: "status"
  }, status), open && /*#__PURE__*/React.createElement(MenuItemList, {
    "aria-label": intl.formatMessage({
      defaultMessage: "Suggested locations",
      description: "Text to show as a label for the dropdown list of locations",
      id: "otpUi.LocationField.suggestedLocations"
    }),
    id: listBoxIdentifier
  }, children));
};
export var FormGroup = styled.div.withConfig({
  displayName: "styled__FormGroup",
  componentId: "sc-wgpkt8-7"
})(["border-collapse:separate;display:table;margin-bottom:15px;position:relative;"]);
export var Input = styled.input.withConfig({
  displayName: "styled__Input",
  componentId: "sc-wgpkt8-8"
})(["border:none;box-shadow:none;font-size:17px;outline:none;"]);
export var InputGroup = styled.span.withConfig({
  displayName: "styled__InputGroup",
  componentId: "sc-wgpkt8-9"
})(["border-bottom:1px solid #000;border-collapse:separate;display:table;position:relative;"]);
export var InputGroupAddon = styled.span.withConfig({
  displayName: "styled__InputGroupAddon",
  componentId: "sc-wgpkt8-10"
})(["background:none;border-radius:4px;border:none;color:#888;cursor:pointer;font-size:14px;font-weight:400;line-height:1;padding:6px 12px;text-align:center;"]);
export var MenuItemA = styled.a.withConfig({
  displayName: "styled__MenuItemA",
  componentId: "sc-wgpkt8-11"
})(["background-color:", ";clear:both;color:", ";display:block;font-weight:400;line-height:1.42857143;padding:3px 20px;text-decoration:none;white-space:nowrap;"], function (props) {
  return props.active ? "#337ab7" : "transparent";
}, function (props) {
  return props.active ? "#fff" : "#333";
});
export var MenuItemHeader = styled.div.withConfig({
  displayName: "styled__MenuItemHeader",
  componentId: "sc-wgpkt8-12"
})(["color:", ";background-color:", ";display:block;font-size:12px;line-height:1.42857143;padding:0px 10px;text-align:", ";white-space:nowrap;"], function (props) {
  return props.fgColor || "#eee";
}, function (props) {
  return props.bgColor || "#333";
}, function (props) {
  return props.centeredText ? "center" : "left";
});
export var MenuItemLi = styled.li.withConfig({
  displayName: "styled__MenuItemLi",
  componentId: "sc-wgpkt8-13"
})(["&:hover{cursor:pointer;background-color:", ";}"], function (props) {
  return !props.disabled && "#f5f5f5";
});
export var MenuItem = function MenuItem(_ref2) {
  var _ref2$active = _ref2.active,
      active = _ref2$active === void 0 ? false : _ref2$active,
      _ref2$bgColor = _ref2.bgColor,
      bgColor = _ref2$bgColor === void 0 ? null : _ref2$bgColor,
      _ref2$centeredText = _ref2.centeredText,
      centeredText = _ref2$centeredText === void 0 ? false : _ref2$centeredText,
      children = _ref2.children,
      _ref2$disabled = _ref2.disabled,
      disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,
      _ref2$fgColor = _ref2.fgColor,
      fgColor = _ref2$fgColor === void 0 ? null : _ref2$fgColor,
      _ref2$header = _ref2.header,
      header = _ref2$header === void 0 ? false : _ref2$header,
      id = _ref2.id,
      _ref2$level = _ref2.level,
      level = _ref2$level === void 0 ? 1 : _ref2$level,
      _ref2$onClick = _ref2.onClick,
      onClick = _ref2$onClick === void 0 ? null : _ref2$onClick,
      _ref2$role = _ref2.role,
      role = _ref2$role === void 0 ? undefined : _ref2$role;

  var handleClick = function handleClick() {
    if (!disabled) onClick();
  };

  return header ? /*#__PURE__*/React.createElement(MenuItemHeader, {
    "aria-level": level,
    bgColor: bgColor,
    centeredText: centeredText,
    className: "header",
    fgColor: fgColor,
    role: role || "none"
  }, children) : /*#__PURE__*/React.createElement(MenuItemLi // Hide disabled choices from screen readers (a relevant status is already provided).
  , {
    "aria-hidden": disabled || undefined,
    disabled: disabled,
    role: disabled ? undefined : "none"
  }, /*#__PURE__*/React.createElement(MenuItemA, {
    active: active,
    id: id,
    onClick: handleClick,
    role: "option",
    tabIndex: -1
  }, children));
};
export var OptionContainer = styled.span.withConfig({
  displayName: "styled__OptionContainer",
  componentId: "sc-wgpkt8-14"
})(["display:block;padding-top:5px;padding-bottom:3px;"]);
export var OptionSubTitle = styled.span.withConfig({
  displayName: "styled__OptionSubTitle",
  componentId: "sc-wgpkt8-15"
})(["color:#686868;font-size:12px;margin-left:6px;"]);
export var OptionContent = styled.span.withConfig({
  displayName: "styled__OptionContent",
  componentId: "sc-wgpkt8-16"
})(["margin-left:30px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;"]);
export var OptionIconContainer = styled.span.withConfig({
  displayName: "styled__OptionIconContainer",
  componentId: "sc-wgpkt8-17"
})(["float:left;"]);
export var RouteName = styled.span.withConfig({
  displayName: "styled__RouteName",
  componentId: "sc-wgpkt8-18"
})(["background-color:gray;color:white;padding:2px 3px 0px;margin-right:5px;"]);
export var StaticMenuItemList = styled(MenuItemList).withConfig({
  displayName: "styled__StaticMenuItemList",
  componentId: "sc-wgpkt8-19"
})(["border:none;box-shadow:none;display:block;position:static;li:not(.header):hover{background-color:transparent;}"]);
export var StopContentContainer = styled.span.withConfig({
  displayName: "styled__StopContentContainer",
  componentId: "sc-wgpkt8-20"
})(["margin-left:30px;"]);
export var StopDistance = styled.span.withConfig({
  displayName: "styled__StopDistance",
  componentId: "sc-wgpkt8-21"
})(["font-size:8px;"]);
export var StopIconAndDistanceContainer = styled.span.withConfig({
  displayName: "styled__StopIconAndDistanceContainer",
  componentId: "sc-wgpkt8-22"
})(["float:left;padding-top:3px;"]);
export var StopName = styled.span.withConfig({
  displayName: "styled__StopName",
  componentId: "sc-wgpkt8-23"
})([""]);
export var StopRoutes = styled.span.withConfig({
  displayName: "styled__StopRoutes",
  componentId: "sc-wgpkt8-24"
})(["font-size:9px;"]);
var rotateAnimation = keyframes(["0%{transform:rotate(0deg);}100%{transform:rotate(360deg);}"]);
export var Spinner = styled(FASpinner).withConfig({
  displayName: "styled__Spinner",
  componentId: "sc-wgpkt8-25"
})(["animation:", " 1.2s linear infinite;"], rotateAnimation);
//# sourceMappingURL=styled.js.map