{"version":3,"sources":["../src/styled.tsx"],"names":["React","useIntl","styled","keyframes","Spinner","FASpinner","HiddenContent","span","BaseButton","button","Button","ClearBoth","div","DropdownButton","DropdownContainer","MenuItemList","ul","attrs","role","Dropdown","children","input","listBoxIdentifier","onToggle","open","status","title","intl","formatMessage","defaultMessage","description","id","FormGroup","Input","InputGroup","InputGroupAddon","MenuItemA","a","props","active","MenuItemHeader","fgColor","bgColor","centeredText","MenuItemLi","li","disabled","MenuItem","header","level","onClick","undefined","handleClick","OptionContainer","OptionSubTitle","OptionContent","OptionIconContainer","RouteName","StaticMenuItemList","StopContentContainer","StopDistance","StopIconAndDistanceContainer","StopName","StopRoutes","rotateAnimation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Spinner as FASpinner } from \"@styled-icons/fa-solid/Spinner\";\n\nexport const HiddenContent = styled.span`\n  clip: rect(0, 0, 0, 0);\n  display: inline-block;\n  height: 0;\n  overflow: hidden;\n  width: 0;\n`;\n\nexport const BaseButton = styled.button`\n  border: none;\n  background: none;\n`;\n\nexport const Button = styled(BaseButton)`\n  color: #888;\n  margin: 0;\n  padding: 2px 5px;\n`;\n\nexport const ClearBoth = styled.div`\n  clear: both;\n`;\n\nexport const DropdownButton = styled(BaseButton)`\n  width: 30px;\n`;\n\nexport const DropdownContainer = styled.span`\n  position: contents;\n  width: 100%;\n`;\n\nexport const MenuItemList = styled.ul.attrs({\n  role: \"listbox\"\n})`\n  background-clip: padding-box;\n  background-color: #fff;\n  border-radius: 4px;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  float: left;\n  font-size: 14px;\n  left: 0;\n  list-style: none;\n  margin: 2px 0 0;\n  min-width: 160px;\n  padding: 5px 0;\n  position: absolute;\n  text-align: left;\n  top: 100%;\n  /* this is an annoyingly high number, but is needed to be on top of some otp-rr components */\n  z-index: 1000000;\n`;\n\nexport const Dropdown = ({\n  children,\n  input,\n  listBoxIdentifier,\n  onToggle = () => {},\n  open,\n  status,\n  title\n}: {\n  children: React.ReactNode;\n  input?: JSX.Element;\n  listBoxIdentifier: string;\n  onToggle?: () => void;\n  open: boolean;\n  status: string;\n  title: React.ReactNode;\n}): React.ReactElement => {\n  const intl = useIntl();\n\n  return (\n    <DropdownContainer>\n      <DropdownButton\n        aria-controls={listBoxIdentifier}\n        aria-expanded={open}\n        aria-label={intl.formatMessage({\n          defaultMessage: \"Open the list of location suggestions\",\n          description:\n            \"Text to show as a a11y label for the button that opens the dropdown list of locations\",\n          id: \"otpUi.LocationField.suggestedLocationsLong\"\n        })}\n        onClick={onToggle}\n        tabIndex={-1}\n      >\n        {title}\n      </DropdownButton>\n      {input}\n      {/* Note: always render this status tag regardless of the open state,\n          so that assistive technologies correctly set up status monitoring. */}\n      <HiddenContent role=\"status\">{status}</HiddenContent>\n      {open && (\n        <MenuItemList\n          aria-label={intl.formatMessage({\n            defaultMessage: \"Suggested locations\",\n            description:\n              \"Text to show as a label for the dropdown list of locations\",\n            id: \"otpUi.LocationField.suggestedLocations\"\n          })}\n          id={listBoxIdentifier}\n        >\n          {children}\n        </MenuItemList>\n      )}\n    </DropdownContainer>\n  );\n};\n\nexport const FormGroup = styled.div`\n  border-collapse: separate;\n  display: table;\n  margin-bottom: 15px;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  border: none;\n  box-shadow: none;\n  font-size: 17px;\n  outline: none;\n`;\n\nexport const InputGroup = styled.span`\n  border-bottom: 1px solid #000;\n  border-collapse: separate;\n  display: table;\n  position: relative;\n`;\n\nexport const InputGroupAddon = styled.span`\n  background: none;\n  border-radius: 4px;\n  border: none;\n  color: #888;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1;\n  padding: 6px 12px;\n  text-align: center;\n`;\n\nexport const MenuItemA = styled.a<{ active?: boolean }>`\n  background-color: ${props => (props.active ? \"#337ab7\" : \"transparent\")};\n  clear: both;\n  color: ${props => (props.active ? \"#fff\" : \"#333\")};\n  display: block;\n  font-weight: 400;\n  line-height: 1.42857143;\n  padding: 3px 20px;\n  text-decoration: none;\n  white-space: nowrap;\n`;\n\nexport const MenuItemHeader = styled.div<{\n  bgColor?: string;\n  centeredText?: boolean;\n  fgColor?: string;\n}>`\n  color: ${props => props.fgColor || \"#eee\"};\n  background-color: ${props => props.bgColor || \"#333\"};\n  display: block;\n  font-size: 12px;\n  line-height: 1.42857143;\n  padding: 0px 10px;\n  text-align: ${props => (props.centeredText ? \"center\" : \"left\")};\n  white-space: nowrap;\n`;\nexport const MenuItemLi = styled.li<{ disabled?: boolean }>`\n  &:hover {\n    cursor: pointer;\n    /* TODO: adjust highlight color based on props.color? */\n    background-color: ${props => !props.disabled && \"#f5f5f5\"};\n  }\n`;\n\nexport const MenuItem = ({\n  active = false,\n  // foregroundColor and backgroundColor would be preferred, but React has issues with\n  // these since they are style keywords\n  bgColor = null,\n  centeredText = false,\n  children,\n  disabled = false,\n  fgColor = null,\n  header = false,\n  id,\n  level = 1,\n  onClick = null,\n  role = undefined\n}: {\n  active?: boolean;\n  bgColor?: string;\n  centeredText?: boolean;\n  children: React.ReactNode;\n  disabled?: boolean;\n  fgColor?: string;\n  header?: boolean;\n  id?: string;\n  level?: number;\n  onClick?: () => void;\n  role?: string;\n}): React.ReactElement => {\n  const handleClick = () => {\n    if (!disabled) onClick();\n  };\n\n  return header ? (\n    <MenuItemHeader\n      aria-level={level}\n      bgColor={bgColor}\n      centeredText={centeredText}\n      className=\"header\"\n      fgColor={fgColor}\n      role={role || \"none\"}\n    >\n      {children}\n    </MenuItemHeader>\n  ) : (\n    <MenuItemLi\n      // Hide disabled choices from screen readers (a relevant status is already provided).\n      aria-hidden={disabled || undefined}\n      disabled={disabled}\n      role={disabled ? undefined : \"none\"}\n    >\n      <MenuItemA\n        active={active}\n        id={id}\n        onClick={handleClick}\n        role=\"option\"\n        tabIndex={-1}\n      >\n        {children}\n      </MenuItemA>\n    </MenuItemLi>\n  );\n};\n\nexport const OptionContainer = styled.span`\n  display: block;\n  padding-top: 5px;\n  padding-bottom: 3px;\n`;\n\nexport const OptionSubTitle = styled.span`\n  color: #686868;\n  font-size: 12px;\n  margin-left: 6px;\n`;\n\nexport const OptionContent = styled.span`\n  margin-left: 30px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const OptionIconContainer = styled.span`\n  float: left;\n`;\n\nexport const RouteName = styled.span`\n  background-color: gray;\n  color: white;\n  padding: 2px 3px 0px;\n  margin-right: 5px;\n`;\n\nexport const StaticMenuItemList = styled(MenuItemList)`\n  border: none;\n  box-shadow: none;\n  display: block;\n  position: static;\n\n  li:not(.header):hover {\n    background-color: transparent;\n  }\n`;\n\nexport const StopContentContainer = styled.span`\n  margin-left: 30px;\n`;\n\nexport const StopDistance = styled.span`\n  font-size: 8px;\n`;\n\nexport const StopIconAndDistanceContainer = styled.span`\n  float: left;\n  padding-top: 3px;\n`;\n\nexport const StopName = styled.span``;\n\nexport const StopRoutes = styled.span`\n  font-size: 9px;\n`;\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Spinner = styled(FASpinner)`\n  animation: ${rotateAnimation} 1.2s linear infinite;\n`;\n"],"file":"styled.js"}