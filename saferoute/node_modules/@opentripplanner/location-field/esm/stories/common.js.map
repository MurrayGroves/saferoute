{"version":3,"sources":["../../src/stories/common.tsx"],"names":["action","currentPosition","coords","latitude","longitude","geocoderConfig","baseUrl","boundary","rect","minLon","maxLon","minLat","maxLat","maxNearbyStops","type","unreachableGeocoderConfig","slowGeocoderConfig","hereGeocoderConfig","apiKey","focusPoint","lat","lng","badGeocoderConfig","getCurrentPosition","onLocationSelected","selectedLocation","lon","name","layerColorMap","stops","stations","locality"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,0BAAvB;AAEA,OAAO,IAAMC,eAAe,GAAG;AAC7BC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,QAAQ,EAAE,SAAZ;AAAuBC,IAAAA,SAAS,EAAE,CAAC;AAAnC;AADqB,CAAxB;AAGP,OAAO,IAAMC,cAAc,GAAG;AAC5BC,EAAAA,OAAO,EAAE,oCADmB;AACmB;AAC/CC,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,CAAC,QADL;AAEJC,MAAAA,MAAM,EAAE,CAAC,OAFL;AAGJC,MAAAA,MAAM,EAAE,MAHJ;AAIJC,MAAAA,MAAM,EAAE;AAJJ;AAFE,GAFkB;AAW5BC,EAAAA,cAAc,EAAE,CAXY;AAY5BC,EAAAA,IAAI,EAAE;AAZsB,CAAvB;AAeP,OAAO,IAAMC,yBAAyB,mCACjCV,cADiC;AAEpC;AACAC,EAAAA,OAAO,EAAE;AAH2B,EAA/B;AAMP,OAAO,IAAMU,kBAAkB,mCAC1BX,cAD0B;AAE7B;AACAC,EAAAA,OAAO,EAAE;AAHoB,EAAxB;AAMP,OAAO,IAAMW,kBAAkB,GAAG;AAChCH,EAAAA,IAAI,EAAE,MAD0B;AAEhCI,EAAAA,MAAM,EAAE,sBAFwB;AAGhCC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE,CAAC;AAAvB;AAHoB,CAA3B;AAMP,OAAO,IAAMC,iBAAiB,GAAG;AAC/BR,EAAAA,IAAI,EAAE,KADyB;AAE/BI,EAAAA,MAAM,EAAE,sBAFuB;AAG/BC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE,CAAC;AAAvB;AAHmB,CAA1B;AAMP,OAAO,IAAME,kBAAkB,GAAGvB,MAAM,CAAC,oBAAD,CAAjC;AACP,OAAO,IAAMwB,kBAAkB,GAAGxB,MAAM,CAAC,oBAAD,CAAjC;AACP,OAAO,IAAMyB,gBAAgB,GAAG;AAAEL,EAAAA,GAAG,EAAE,CAAP;AAAUM,EAAAA,GAAG,EAAE,CAAf;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAAzB;AAEP,OAAO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,KAAK,EAAE,QADoB;AAE3BC,EAAAA,QAAQ,EAAE,MAFiB;AAG3BC,EAAAA,QAAQ,EAAE;AAHiB,CAAtB","sourcesContent":["import { action } from \"@storybook/addon-actions\";\n\nexport const currentPosition = {\n  coords: { latitude: 45.508246, longitude: -122.711574 }\n};\nexport const geocoderConfig = {\n  baseUrl: \"https://ws-st.trimet.org/pelias/v1\", // TriMet-specific default\n  boundary: {\n    // TriMet-specific default\n    rect: {\n      minLon: -123.2034,\n      maxLon: -122.135,\n      minLat: 45.273,\n      maxLat: 45.7445\n    }\n  },\n  maxNearbyStops: 4,\n  type: \"PELIAS\"\n};\n\nexport const unreachableGeocoderConfig = {\n  ...geocoderConfig,\n  // Putting an erroneous URL on purpose.\n  baseUrl: \"https://www.example.com/pelias/v1\"\n};\n\nexport const slowGeocoderConfig = {\n  ...geocoderConfig,\n  // URL to a simulated slow geocoder (see handlers.js).\n  baseUrl: \"https://slow.trimet.org/pelias/v1\"\n};\n\nexport const hereGeocoderConfig = {\n  type: \"HERE\",\n  apiKey: \"placeholder_here_key\",\n  focusPoint: { lat: 47.67552, lng: -122.31831 }\n};\n\nexport const badGeocoderConfig = {\n  type: \"BAD\",\n  apiKey: \"placeholder_here_key\",\n  focusPoint: { lat: 47.67552, lng: -122.31831 }\n};\n\nexport const getCurrentPosition = action(\"getCurrentPosition\");\nexport const onLocationSelected = action(\"onLocationSelected\");\nexport const selectedLocation = { lat: 0, lon: 0, name: \"123 Main St\" };\n\nexport const layerColorMap = {\n  stops: \"purple\",\n  stations: \"navy\",\n  locality: \"orange\"\n};\n"],"file":"common.js"}