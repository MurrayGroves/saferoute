{"version":3,"sources":["../src/options.tsx"],"names":["coreUtils","humanizeDistanceStringImperial","React","FormattedMessage","Bus","Briefcase","Home","MapMarker","MapPin","S","ICON_SIZE","GeocodedOptionIcon","feature","properties","source","Option","classes","color","disabled","icon","id","isActive","onClick","subTitle","title","ui","isIE","TransitStopOption","stop","stopOptionIcon","dist","name","code","routes","map","route","shortName","longName","UserLocationIcon","userLocation","LocationName","location","type","StoredPlaceName","withDetails","detailText","details","placeName"],"mappings":"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","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport { humanizeDistanceStringImperial } from \"@opentripplanner/humanize-distance\";\nimport React, { ReactElement } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Bus } from \"@styled-icons/fa-solid/Bus\";\nimport { Briefcase } from \"@styled-icons/fa-solid/Briefcase\";\nimport { Home } from \"@styled-icons/fa-solid/Home\";\nimport { MapMarker } from \"@styled-icons/fa-solid/MapMarker\";\nimport { MapPin } from \"@styled-icons/fa-solid/MapPin\";\n\nimport { Stop, UserLocation } from \"@opentripplanner/types\";\nimport * as S from \"./styled\";\n\nexport const ICON_SIZE = 13;\n\nexport function GeocodedOptionIcon({\n  feature = {}\n}: {\n  feature: {\n    properties?: { source: string };\n  };\n}): React.ReactElement {\n  const { properties } = feature;\n  if (feature && properties) {\n    const { source } = properties;\n    if (source === \"transit\") {\n      return <Bus size={ICON_SIZE} />;\n    }\n  }\n  return <MapPin size={ICON_SIZE} />;\n}\n\nexport function Option({\n  classes = \"\",\n  color = null,\n  disabled = false,\n  icon = null,\n  id,\n  isActive = false,\n  onClick,\n  subTitle = null,\n  title = null\n}: {\n  classes?: string;\n  color?: string;\n  disabled?: boolean;\n  icon?: React.ReactNode;\n  id?: string;\n  isActive?: boolean;\n  onClick?: () => void;\n  subTitle?: React.ReactNode;\n  title?: React.ReactNode;\n}): React.ReactElement {\n  return (\n    <S.MenuItem active={isActive} disabled={disabled} id={id} onClick={onClick}>\n      {coreUtils.ui.isIE() ? (\n        // In internet explorer 11, some really weird stuff is happening where it\n        // is not possible to click the text of the title, but if you click just\n        // above it, then it works. So, if using IE 11, just return the title text\n        // and avoid all the extra fancy stuff.\n        // See https://github.com/ibi-group/trimet-mod-otp/issues/237\n        title\n      ) : (\n        <S.OptionContainer className={classes}>\n          <S.OptionIconContainer style={{ color }}>\n            {icon}\n          </S.OptionIconContainer>\n          <S.OptionContent>\n            {title}\n            {subTitle && (\n              <S.OptionSubTitle>\n                <S.HiddenContent>, </S.HiddenContent>\n                {subTitle}\n              </S.OptionSubTitle>\n            )}\n          </S.OptionContent>\n        </S.OptionContainer>\n      )}\n    </S.MenuItem>\n  );\n}\n\nexport function TransitStopOption({\n  id,\n  isActive = false,\n  onClick,\n  stop,\n  stopOptionIcon\n}: {\n  id?: string;\n  isActive?: boolean;\n  onClick: () => void;\n  stop: Stop;\n  stopOptionIcon: React.ReactNode;\n}): React.ReactElement {\n  return (\n    <S.MenuItem id={id} onClick={onClick} active={isActive}>\n      <S.StopIconAndDistanceContainer>\n        {stopOptionIcon}\n        <S.StopDistance>\n          {humanizeDistanceStringImperial(stop.dist, true)}\n        </S.StopDistance>\n      </S.StopIconAndDistanceContainer>\n      <S.StopContentContainer>\n        <S.StopName>\n          {stop.name} ({stop.code})\n        </S.StopName>\n        <S.StopRoutes>\n          {(stop.routes || []).map(route => {\n            const name = route.shortName || route.longName;\n            return <S.RouteName key={`route-${name}`}>{name}</S.RouteName>;\n          })}\n        </S.StopRoutes>\n      </S.StopContentContainer>\n      <S.ClearBoth />\n    </S.MenuItem>\n  );\n}\n\nexport function UserLocationIcon({\n  userLocation\n}: {\n  userLocation: UserLocation;\n}): React.ReactElement {\n  if (userLocation.icon === \"work\") return <Briefcase size={ICON_SIZE} />;\n  if (userLocation.icon === \"home\") return <Home size={ICON_SIZE} />;\n  return <MapMarker size={ICON_SIZE} />;\n}\n\nfunction LocationName({ location }: { location: UserLocation }): ReactElement {\n  switch (location.type) {\n    case \"home\":\n      return (\n        <FormattedMessage\n          defaultMessage=\"Home\"\n          description=\"The home location\"\n          id=\"otpUi.LocationField.homeLocation\"\n        />\n      );\n    case \"work\":\n      return (\n        <FormattedMessage\n          defaultMessage=\"Work\"\n          description=\"The work location\"\n          id=\"otpUi.LocationField.workLocation\"\n        />\n      );\n    default:\n      return <>{location.name}</>;\n  }\n}\n\nexport function StoredPlaceName({\n  location,\n  withDetails = true\n}: {\n  location: UserLocation;\n  withDetails?: boolean;\n}): React.ReactElement {\n  let detailText;\n  if (withDetails) {\n    if (location.type === \"home\" || location.type === \"work\") {\n      detailText = location.name;\n    } else if (location.type === \"stop\") {\n      detailText = location.id;\n    }\n    // The case below for recent searches is not currently being used.\n    // } else if (location.type === \"recent\" && location.timestamp) {\n    //   detailText = moment(location.timestamp).fromNow();\n  }\n\n  return detailText && detailText !== \"\" ? (\n    <FormattedMessage\n      defaultMessage=\"{placeName} ({details})\"\n      description=\"Renders a place and some brief detail text.\"\n      id=\"otpUi.LocationField.placeNameWithDetails\"\n      values={{\n        details: detailText,\n        placeName: <LocationName location={location} />\n      }}\n    />\n  ) : (\n    <LocationName location={location} />\n  );\n}\n"],"file":"options.js"}