{"version":3,"sources":["../../../src/apis/otp/index.ts"],"names":["run","query","url","fetch","then","res","text","JSON","parse","autocomplete","search","console","warn","reverse"],"mappings":";;;AACA;AAkBA,SAASA,GAAT,OAAsE;AAAA,MAAvDC,KAAuD,QAAvDA,KAAuD;AAAA,MAAhDC,GAAgD,QAAhDA,GAAgD;AACpE;AACA,SAAOC,KAAK,WAAID,GAAJ,0CAAuCD,KAAvC,EAAL,CACJG,IADI,CACC,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADJ,EAEJF,IAFI,CAEC,UAAAC,GAAG;AAAA,WAAIE,IAAI,CAACC,KAAL,yBAA0BH,GAA1B,OAAJ;AAAA,GAFJ,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACeI,Y;;;;;2EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEP,YAAAA,GADF,SACEA,GADF,EAEEI,IAFF,SAEEA,IAFF;AAAA,6CAISN,GAAG,CAAC;AACTC,cAAAA,KAAK,EAAEK,IADE;AAETJ,cAAAA,GAAG,EAAHA;AAFS,aAAD,CAJZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAUA,SAASQ,MAAT,GAAoC;AAAEC,EAAAA,OAAO,CAACC,IAAR,CAAa,iBAAb;AAAiC,SAAO,IAAP;AAAa;;AACpF,SAASC,OAAT,GAAqC;AAAEF,EAAAA,OAAO,CAACC,IAAR,CAAa,iBAAb;AAAiC,SAAO,IAAP;AAAa;;AAGrF,SAASH,YAAT,EAAuBI,OAAvB,EAAgCH,MAAhC","sourcesContent":["\n// eslint-disable-next-line prettier/prettier\nimport type { AutocompleteQuery } from \"../../geocoders/types\"\n\ntype FetchArgs = {\n  url: string\n  query: string\n}\n\ntype OTPGeocoderResponse = {\n  results: {\n    lat: number,\n    lng: number,\n    description: string,\n    id: string\n  }[]\n} | undefined\n\n\nfunction run({ query, url }: FetchArgs): Promise<OTPGeocoderResponse> {\n  // TODO: Support corners/osm nodes?\n  return fetch(`${url}/geocode?corners=false&query=${query}`)\n    .then(res => res.text())\n    .then(res => JSON.parse(`{\"results\": ${res}}`));\n}\n\n/**\n * Search for an address using\n * OTP Geocoder\n *\n * @param  {Object} $0\n * @param  {string} $0.url  The OTP instance, ending with /default/\n * @param  {string} $0.text query\n * @return {Promise}        A Promise that'll get resolved with the autocomplete result\n */\nasync function autocomplete({\n  url,\n  text\n}: AutocompleteQuery): Promise<OTPGeocoderResponse> {\n  return run({\n    query: text,\n    url\n  })\n}\n\nfunction search(): Promise<unknown> { console.warn(\"Not implemented\"); return null }\nfunction reverse(): Promise<unknown> { console.warn(\"Not implemented\"); return null }\n\n\nexport { autocomplete, reverse, search };\nexport type { OTPGeocoderResponse }\n"],"file":"index.js"}