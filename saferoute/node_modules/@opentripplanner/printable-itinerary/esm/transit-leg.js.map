{"version":3,"sources":["../src/transit-leg.js"],"names":["coreUtils","PropTypes","React","AccessibilityAnnotation","S","TransitLeg","accessibilityScoreGradationMap","leg","LegIcon","interlineFollows","timeOptions","interlineWithPreviousLeg","routeShortName","routeLongName","to","name","time","formatTime","endTime","from","startTime","propTypes","shape","color","string","text","icon","element","bool","types","legType","isRequired","elementType","timeOptionsType","defaultProps"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,uBAAP,MAAoC,4BAApC;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAEA,eAAe,SAASC,UAAT,OAMZ;AAAA,MALDC,8BAKC,QALDA,8BAKC;AAAA,MAJDC,GAIC,QAJDA,GAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,gBAEC,QAFDA,gBAEC;AAAA,MADDC,WACC,QADDA,WACC;;AACD;AACA,MAAIH,GAAG,CAACI,wBAAR,EAAkC;AAChC,wBACE,oBAAC,CAAD,CAAG,YAAH,qBACE,oBAAC,CAAD,CAAG,OAAH,qBACE,oBAAC,CAAD,CAAG,SAAH,wBACe,GADf,eAEE,+BACGJ,GAAG,CAACK,cADP,OACwBL,GAAG,CAACM,aAD5B,CAFF,EAIO,GAJP,sBAKK,+BAAIN,GAAG,CAACO,EAAJ,CAAOC,IAAX,CALL,CADF,eAQE,oBAAC,CAAD,CAAG,UAAH,qBACE,oBAAC,CAAD,CAAG,SAAH,oCACa,+BAAIR,GAAG,CAACO,EAAJ,CAAOC,IAAX,CADb,SACqC,GADrC,EAEGf,SAAS,CAACgB,IAAV,CAAeC,UAAf,CAA0BV,GAAG,CAACW,OAA9B,EAAuCR,WAAvC,CAFH,CADF,CARF,CADF,CADF;AAmBD;;AAED,sBACE,oBAAC,CAAD,CAAG,GAAH,qBACE,oBAAC,uBAAD;AACE,IAAA,8BAA8B,EAAEJ,8BADlC;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,GAAG,EAAEC,GAHP;AAIE,IAAA,OAAO,EAAEC;AAJX,IADF,eAOE,oBAAC,CAAD,CAAG,OAAH,qBACE,oBAAC,CAAD,CAAG,SAAH,qBACE,+BACGD,GAAG,CAACK,cADP,OACwBL,GAAG,CAACM,aAD5B,CADF,EAGO,GAHP,sBAIK,+BAAIN,GAAG,CAACO,EAAJ,CAAOC,IAAX,CAJL,CADF,eAOE,oBAAC,CAAD,CAAG,UAAH,qBACE,oBAAC,CAAD,CAAG,SAAH,kCACW,+BAAIR,GAAG,CAACY,IAAJ,CAASJ,IAAb,CADX,SACqC,GADrC,EAEGf,SAAS,CAACgB,IAAV,CAAeC,UAAf,CAA0BV,GAAG,CAACa,SAA9B,EAAyCV,WAAzC,CAFH,CADF,eAKE,oBAAC,CAAD,CAAG,SAAH,QACGD,gBAAgB,gBACf,oEACmB,+BAAIF,GAAG,CAACO,EAAJ,CAAOC,IAAX,CADnB,CADe,gBAKf,8DACa,+BAAIR,GAAG,CAACO,EAAJ,CAAOC,IAAX,CADb,SACqC,GADrC,EAEGf,SAAS,CAACgB,IAAV,CAAeC,UAAf,CAA0BV,GAAG,CAACW,OAA9B,EAAuCR,WAAvC,CAFH,CANJ,CALF,CAPF,CAPF,CADF;AAoCD;AAEDL,UAAU,CAACgB,SAAX,GAAuB;AACrBf,EAAAA,8BAA8B,EAAEL,SAAS,CAACqB,KAAV,CAAgB;AAC9CC,IAAAA,KAAK,EAAEtB,SAAS,CAACuB,MAD6B;AAE9CC,IAAAA,IAAI,EAAExB,SAAS,CAACuB,MAF8B;AAG9CE,IAAAA,IAAI,EAAEzB,SAAS,CAAC0B;AAH8B,GAAhB,CADX;AAMrBlB,EAAAA,gBAAgB,EAAER,SAAS,CAAC2B,IANP;AAOrBrB,EAAAA,GAAG,EAAEP,SAAS,CAAC6B,KAAV,CAAgBC,OAAhB,CAAwBC,UAPR;AAQrBvB,EAAAA,OAAO,EAAEP,SAAS,CAAC+B,WAAV,CAAsBD,UARV;AASrBrB,EAAAA,WAAW,EAAEV,SAAS,CAAC6B,KAAV,CAAgBI;AATR,CAAvB;AAYA5B,UAAU,CAAC6B,YAAX,GAA0B;AACxB5B,EAAAA,8BAA8B,EAAE,IADR;AAExBG,EAAAA,gBAAgB,EAAE,KAFM;AAGxBC,EAAAA,WAAW,EAAE;AAHW,CAA1B","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport AccessibilityAnnotation from \"./accessibility-annotation\";\nimport * as S from \"./styled\";\n\nexport default function TransitLeg({\n  accessibilityScoreGradationMap,\n  leg,\n  LegIcon,\n  interlineFollows,\n  timeOptions\n}) {\n  // Handle case of transit leg interlined w/ previous\n  if (leg.interlineWithPreviousLeg) {\n    return (\n      <S.CollapsedTop>\n        <S.LegBody>\n          <S.LegHeader>\n            Continues as{\" \"}\n            <b>\n              {leg.routeShortName} {leg.routeLongName}\n            </b>{\" \"}\n            to <b>{leg.to.name}</b>\n          </S.LegHeader>\n          <S.LegDetails>\n            <S.LegDetail>\n              Get off at <b>{leg.to.name}</b> at{\" \"}\n              {coreUtils.time.formatTime(leg.endTime, timeOptions)}\n            </S.LegDetail>\n          </S.LegDetails>\n        </S.LegBody>\n      </S.CollapsedTop>\n    );\n  }\n\n  return (\n    <S.Leg>\n      <AccessibilityAnnotation\n        accessibilityScoreGradationMap={accessibilityScoreGradationMap}\n        grayscale\n        leg={leg}\n        LegIcon={LegIcon}\n      />\n      <S.LegBody>\n        <S.LegHeader>\n          <b>\n            {leg.routeShortName} {leg.routeLongName}\n          </b>{\" \"}\n          to <b>{leg.to.name}</b>\n        </S.LegHeader>\n        <S.LegDetails>\n          <S.LegDetail>\n            Board at <b>{leg.from.name}</b> at{\" \"}\n            {coreUtils.time.formatTime(leg.startTime, timeOptions)}\n          </S.LegDetail>\n          <S.LegDetail>\n            {interlineFollows ? (\n              <span>\n                Stay on board at <b>{leg.to.name}</b>\n              </span>\n            ) : (\n              <span>\n                Get off at <b>{leg.to.name}</b> at{\" \"}\n                {coreUtils.time.formatTime(leg.endTime, timeOptions)}\n              </span>\n            )}\n          </S.LegDetail>\n        </S.LegDetails>\n      </S.LegBody>\n    </S.Leg>\n  );\n}\n\nTransitLeg.propTypes = {\n  accessibilityScoreGradationMap: PropTypes.shape({\n    color: PropTypes.string,\n    text: PropTypes.string,\n    icon: PropTypes.element\n  }),\n  interlineFollows: PropTypes.bool,\n  leg: coreUtils.types.legType.isRequired,\n  LegIcon: PropTypes.elementType.isRequired,\n  timeOptions: coreUtils.types.timeOptionsType\n};\n\nTransitLeg.defaultProps = {\n  accessibilityScoreGradationMap: null,\n  interlineFollows: false,\n  timeOptions: null\n};\n"],"file":"transit-leg.js"}