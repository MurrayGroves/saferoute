import coreUtils from "@opentripplanner/core-utils";
import PropTypes from "prop-types";
import React from "react";
import AccessibilityAnnotation from "./accessibility-annotation";
import * as S from "./styled";
export default function TransitLeg(_ref) {
  var accessibilityScoreGradationMap = _ref.accessibilityScoreGradationMap,
      leg = _ref.leg,
      LegIcon = _ref.LegIcon,
      interlineFollows = _ref.interlineFollows,
      timeOptions = _ref.timeOptions;

  // Handle case of transit leg interlined w/ previous
  if (leg.interlineWithPreviousLeg) {
    return /*#__PURE__*/React.createElement(S.CollapsedTop, null, /*#__PURE__*/React.createElement(S.LegBody, null, /*#__PURE__*/React.createElement(S.LegHeader, null, "Continues as", " ", /*#__PURE__*/React.createElement("b", null, leg.routeShortName, " ", leg.routeLongName), " ", "to ", /*#__PURE__*/React.createElement("b", null, leg.to.name)), /*#__PURE__*/React.createElement(S.LegDetails, null, /*#__PURE__*/React.createElement(S.LegDetail, null, "Get off at ", /*#__PURE__*/React.createElement("b", null, leg.to.name), " at", " ", coreUtils.time.formatTime(leg.endTime, timeOptions)))));
  }

  return /*#__PURE__*/React.createElement(S.Leg, null, /*#__PURE__*/React.createElement(AccessibilityAnnotation, {
    accessibilityScoreGradationMap: accessibilityScoreGradationMap,
    grayscale: true,
    leg: leg,
    LegIcon: LegIcon
  }), /*#__PURE__*/React.createElement(S.LegBody, null, /*#__PURE__*/React.createElement(S.LegHeader, null, /*#__PURE__*/React.createElement("b", null, leg.routeShortName, " ", leg.routeLongName), " ", "to ", /*#__PURE__*/React.createElement("b", null, leg.to.name)), /*#__PURE__*/React.createElement(S.LegDetails, null, /*#__PURE__*/React.createElement(S.LegDetail, null, "Board at ", /*#__PURE__*/React.createElement("b", null, leg.from.name), " at", " ", coreUtils.time.formatTime(leg.startTime, timeOptions)), /*#__PURE__*/React.createElement(S.LegDetail, null, interlineFollows ? /*#__PURE__*/React.createElement("span", null, "Stay on board at ", /*#__PURE__*/React.createElement("b", null, leg.to.name)) : /*#__PURE__*/React.createElement("span", null, "Get off at ", /*#__PURE__*/React.createElement("b", null, leg.to.name), " at", " ", coreUtils.time.formatTime(leg.endTime, timeOptions))))));
}
TransitLeg.propTypes = {
  accessibilityScoreGradationMap: PropTypes.shape({
    color: PropTypes.string,
    text: PropTypes.string,
    icon: PropTypes.element
  }),
  interlineFollows: PropTypes.bool,
  leg: coreUtils.types.legType.isRequired,
  LegIcon: PropTypes.elementType.isRequired,
  timeOptions: coreUtils.types.timeOptionsType
};
TransitLeg.defaultProps = {
  accessibilityScoreGradationMap: null,
  interlineFollows: false,
  timeOptions: null
};
//# sourceMappingURL=transit-leg.js.map