import coreUtils from "@opentripplanner/core-utils";
import { humanizeDistanceString } from "@opentripplanner/humanize-distance";
import PropTypes from "prop-types";
import React from "react";
import AccessibilityAnnotation from "./accessibility-annotation";
import * as S from "./styled";
export default function AccessLeg(_ref) {
  var accessibilityScoreGradationMap = _ref.accessibilityScoreGradationMap,
      config = _ref.config,
      leg = _ref.leg,
      LegIcon = _ref.LegIcon;
  return /*#__PURE__*/React.createElement(S.Leg, null, /*#__PURE__*/React.createElement(AccessibilityAnnotation, {
    accessibilityScoreGradationMap: accessibilityScoreGradationMap,
    grayscale: true,
    leg: leg,
    LegIcon: LegIcon
  }), /*#__PURE__*/React.createElement(S.LegBody, null, /*#__PURE__*/React.createElement(S.LegHeader, null, /*#__PURE__*/React.createElement("b", null, coreUtils.itinerary.getLegModeLabel(leg)), " ", leg.distance > 0 && /*#__PURE__*/React.createElement("span", null, " ", humanizeDistanceString(leg.distance)), " to ", /*#__PURE__*/React.createElement("b", null, coreUtils.itinerary.getPlaceName(leg.to, config.companies))), !leg.hailedCar && /*#__PURE__*/React.createElement(S.LegDetails, null, leg.steps.map(function (step, k) {
    return /*#__PURE__*/React.createElement(S.LegDetail, {
      key: k
    }, coreUtils.itinerary.getStepDirection(step), " on", " ", /*#__PURE__*/React.createElement("b", null, coreUtils.itinerary.getStepStreetName(step)));
  }))));
}
AccessLeg.propTypes = {
  accessibilityScoreGradationMap: PropTypes.shape({
    color: PropTypes.string,
    text: PropTypes.string,
    icon: PropTypes.element
  }),
  config: coreUtils.types.configType.isRequired,
  leg: coreUtils.types.legType.isRequired,
  LegIcon: PropTypes.elementType.isRequired
};
AccessLeg.defaultProps = {
  accessibilityScoreGradationMap: null
};
//# sourceMappingURL=access-leg.js.map