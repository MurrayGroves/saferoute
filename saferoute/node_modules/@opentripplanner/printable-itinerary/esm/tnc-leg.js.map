{"version":3,"sources":["../src/tnc-leg.js"],"names":["coreUtils","PropTypes","React","AccessibilityAnnotation","S","TNCLeg","accessibilityScoreGradationMap","leg","LegIcon","tncData","displayName","to","name","time","formatDuration","estimatedArrival","duration","propTypes","shape","color","string","text","icon","element","types","legType","isRequired","elementType","defaultProps"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,uBAAP,MAAoC,4BAApC;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAEA,eAAe,SAASC,MAAT,OAIZ;AAAA,MAHDC,8BAGC,QAHDA,8BAGC;AAAA,MAFDC,GAEC,QAFDA,GAEC;AAAA,MADDC,OACC,QADDA,OACC;AACD,MAAQC,OAAR,GAAoBF,GAApB,CAAQE,OAAR;AACA,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AAEd,sBACE,oBAAC,CAAD,CAAG,GAAH,qBACE,oBAAC,uBAAD;AACE,IAAA,8BAA8B,EAAEH,8BADlC;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,GAAG,EAAEC,GAHP;AAIE,IAAA,OAAO,EAAEC;AAJX,IADF,eAOE,oBAAC,CAAD,CAAG,OAAH,qBACE,oBAAC,CAAD,CAAG,SAAH,qBACE,wCAASC,OAAO,CAACC,WAAjB,CADF,uBACuC,+BAAIH,GAAG,CAACI,EAAJ,CAAOC,IAAX,CADvC,CADF,eAIE,oBAAC,CAAD,CAAG,UAAH,qBACE,oBAAC,CAAD,CAAG,SAAH,2CACkC,GADlC,eAEE,+BAAIZ,SAAS,CAACa,IAAV,CAAeC,cAAf,CAA8BL,OAAO,CAACM,gBAAtC,CAAJ,CAFF,CADF,eAKE,oBAAC,CAAD,CAAG,SAAH,kCACyB,GADzB,eAEE,+BAAIf,SAAS,CAACa,IAAV,CAAeC,cAAf,CAA8BP,GAAG,CAACS,QAAlC,CAAJ,CAFF,oCALF,CAJF,CAPF,CADF;AA0BD;AAEDX,MAAM,CAACY,SAAP,GAAmB;AACjBX,EAAAA,8BAA8B,EAAEL,SAAS,CAACiB,KAAV,CAAgB;AAC9CC,IAAAA,KAAK,EAAElB,SAAS,CAACmB,MAD6B;AAE9CC,IAAAA,IAAI,EAAEpB,SAAS,CAACmB,MAF8B;AAG9CE,IAAAA,IAAI,EAAErB,SAAS,CAACsB;AAH8B,GAAhB,CADf;AAMjBhB,EAAAA,GAAG,EAAEP,SAAS,CAACwB,KAAV,CAAgBC,OAAhB,CAAwBC,UANZ;AAOjBlB,EAAAA,OAAO,EAAEP,SAAS,CAAC0B,WAAV,CAAsBD;AAPd,CAAnB;AAUArB,MAAM,CAACuB,YAAP,GAAsB;AACpBtB,EAAAA,8BAA8B,EAAE;AADZ,CAAtB","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport AccessibilityAnnotation from \"./accessibility-annotation\";\nimport * as S from \"./styled\";\n\nexport default function TNCLeg({\n  accessibilityScoreGradationMap,\n  leg,\n  LegIcon\n}) {\n  const { tncData } = leg;\n  if (!tncData) return null;\n\n  return (\n    <S.Leg>\n      <AccessibilityAnnotation\n        accessibilityScoreGradationMap={accessibilityScoreGradationMap}\n        grayscale\n        leg={leg}\n        LegIcon={LegIcon}\n      />\n      <S.LegBody>\n        <S.LegHeader>\n          <b>Take {tncData.displayName}</b> to <b>{leg.to.name}</b>\n        </S.LegHeader>\n        <S.LegDetails>\n          <S.LegDetail>\n            Estimated wait time for pickup:{\" \"}\n            <b>{coreUtils.time.formatDuration(tncData.estimatedArrival)}</b>\n          </S.LegDetail>\n          <S.LegDetail>\n            Estimated travel time:{\" \"}\n            <b>{coreUtils.time.formatDuration(leg.duration)}</b> (does not\n            account for traffic)\n          </S.LegDetail>\n        </S.LegDetails>\n      </S.LegBody>\n    </S.Leg>\n  );\n}\n\nTNCLeg.propTypes = {\n  accessibilityScoreGradationMap: PropTypes.shape({\n    color: PropTypes.string,\n    text: PropTypes.string,\n    icon: PropTypes.element\n  }),\n  leg: coreUtils.types.legType.isRequired,\n  LegIcon: PropTypes.elementType.isRequired\n};\n\nTNCLeg.defaultProps = {\n  accessibilityScoreGradationMap: null\n};\n"],"file":"tnc-leg.js"}