{"version":3,"sources":["../src/ui.js"],"names":["bowser","isMobile","test","navigator","userAgent","isIE","name","enableScrollForSelector","selector","overlay","document","querySelector","clientY","isOverlayTotallyScrolled","scrollHeight","scrollTop","clientHeight","disableRubberBand","event","clientYDelta","targetTouches","preventDefault","addEventListener","length"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,QAAT,GAAoB;AACzB;AACA,SAAO,iEAAiEC,IAAjE,CACLC,SAAS,CAACC,SADL,CAAP;AAGD;AAED;AACA;AACA;;AACA,OAAO,SAASC,IAAT,GAAgB;AACrB,SAAOL,MAAM,CAACM,IAAP,KAAgB,mBAAvB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAA2C;AAChD,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuBH,QAAvB,CAAhB;AACA,MAAII,OAAO,GAAG,IAAd,CAFgD,CAE5B;;AAEpB,WAASC,wBAAT,GAAoC;AAClC;AACA,WAAOJ,OAAO,CAACK,YAAR,GAAuBL,OAAO,CAACM,SAA/B,IAA4CN,OAAO,CAACO,YAA3D;AACD;;AAED,WAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,QAAMC,YAAY,GAAGD,KAAK,CAACE,aAAN,CAAoB,CAApB,EAAuBR,OAAvB,GAAiCA,OAAtD;;AAEA,QAAIH,OAAO,CAACM,SAAR,KAAsB,CAAtB,IAA2BI,YAAY,GAAG,CAA9C,EAAiD;AAC/C;AACAD,MAAAA,KAAK,CAACG,cAAN;AACD;;AAED,QAAIR,wBAAwB,MAAMM,YAAY,GAAG,CAAjD,EAAoD;AAClD;AACAD,MAAAA,KAAK,CAACG,cAAN;AACD;AACF;;AAEDZ,EAAAA,OAAO,CAACa,gBAAR,CACE,YADF,EAEE,UAASJ,KAAT,EAAgB;AACd,QAAIA,KAAK,CAACE,aAAN,CAAoBG,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACAX,MAAAA,OAAO,GAAGM,KAAK,CAACE,aAAN,CAAoB,CAApB,EAAuBR,OAAjC;AACD;AACF,GAPH,EAQE,KARF;AAWAH,EAAAA,OAAO,CAACa,gBAAR,CACE,WADF,EAEE,UAASJ,KAAT,EAAgB;AACd,QAAIA,KAAK,CAACE,aAAN,CAAoBG,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACAN,MAAAA,iBAAiB,CAACC,KAAD,CAAjB;AACD;AACF,GAPH,EAQE,KARF;AAUD","sourcesContent":["import bowser from \"bowser\";\n\nexport function isMobile() {\n  // TODO: consider using 3rd-party library?\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n}\n\n/**\n * Returns true if the user is using a [redacted] browser\n */\nexport function isIE() {\n  return bowser.name === \"Internet Explorer\";\n}\n\n/**\n * Enables scrolling for a specified selector, while disabling scrolling for all\n * other targets. This is adapted from https://stackoverflow.com/a/41601290/915811\n * and intended to fix issues with iOS elastic scrolling, e.g.,\n * https://github.com/conveyal/trimet-mod-otp/issues/92.\n */\nexport function enableScrollForSelector(selector) {\n  const overlay = document.querySelector(selector);\n  let clientY = null; // remember Y position on touch start\n\n  function isOverlayTotallyScrolled() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n    return overlay.scrollHeight - overlay.scrollTop <= overlay.clientHeight;\n  }\n\n  function disableRubberBand(event) {\n    const clientYDelta = event.targetTouches[0].clientY - clientY;\n\n    if (overlay.scrollTop === 0 && clientYDelta > 0) {\n      // element is at the top of its scroll\n      event.preventDefault();\n    }\n\n    if (isOverlayTotallyScrolled() && clientYDelta < 0) {\n      // element is at the top of its scroll\n      event.preventDefault();\n    }\n  }\n\n  overlay.addEventListener(\n    \"touchstart\",\n    function(event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch\n        clientY = event.targetTouches[0].clientY;\n      }\n    },\n    false\n  );\n\n  overlay.addEventListener(\n    \"touchmove\",\n    function(event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch\n        disableRubberBand(event);\n      }\n    },\n    false\n  );\n}\n"],"file":"ui.js"}