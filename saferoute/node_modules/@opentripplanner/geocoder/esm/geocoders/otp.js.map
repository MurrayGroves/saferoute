{"version":3,"sources":["../../src/geocoders/otp.ts"],"names":["Geocoder","OTPGeocoder","query","baseUrl","geocoderConfig","url","response","features","results","map","stop","geometry","type","coordinates","coordinate","lng","lat","id","properties","layer","source","name","label","code"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAGA,OAAOA,QAAP,MAAqB,qBAArB;;AAGA;AACA;AACA;IACqBC,W;;;;;;;;;;;;;WACnB,8BAAqBC,KAArB,EAAkE;AAChE,UACEC,OADF,GAEI,KAAKC,cAFT,CACED,OADF;AAGA;AACEE,QAAAA,GAAG,EAAEF;AADP,SAEKD,KAFL;AAID;;;WAGD,qCAA4BI,QAA5B,EAAkF;AAAA;;AAChF,aAAO;AACHC,QAAAA,QAAQ,EAAED,QAAF,aAAEA,QAAF,4CAAEA,QAAQ,CAAEE,OAAZ,sDAAE,kBAAmBC,GAAnB,CAAuB,UAAAC,IAAI;AAAA,iBAAK;AACtCC,YAAAA,QAAQ,EAAE;AAAEC,cAAAA,IAAI,EAAE,OAAR;AAAiBC,cAAAA,WAAW,EAAE,CAACH,IAAI,CAACI,UAAL,CAAgBC,GAAjB,EAAsBL,IAAI,CAACI,UAAL,CAAgBE,GAAtC;AAA9B,aAD4B;AAEtCC,YAAAA,EAAE,EAAEP,IAAI,CAACO,EAF6B;AAGtC;AACA;AACAC,YAAAA,UAAU,EAAE;AAAEC,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,MAAM,EAAE,KAA1B;AAAiCC,cAAAA,IAAI,EAAEX,IAAI,CAACW,IAA5C;AAAkDC,cAAAA,KAAK,EAAEZ,IAAI,CAACa;AAA9D,aAL0B;AAMtCX,YAAAA,IAAI,EAAE;AANgC,WAAL;AAAA,SAA3B,CADP;AASLA,QAAAA,IAAI,EAAE;AATD,OAAP;AAWD;;;;EAxBsCZ,Q;;SAApBC,W","sourcesContent":["// Prettier does not support typescript annotation\n// eslint-disable-next-line prettier/prettier\nimport type { AutocompleteQuery, MultiGeocoderResponse } from \"./types\";\n\nimport Geocoder from \"./abstract-geocoder\";\nimport { OTPGeocoderResponse } from \"../apis/otp\";\n\n/**\n * Allows fetching results from OTP instance with the geocoder endpoint enabled\n */\nexport default class OTPGeocoder extends Geocoder {\n  getAutocompleteQuery(query: AutocompleteQuery): AutocompleteQuery {\n    const {\n      baseUrl,\n    } = this.geocoderConfig;\n    return {\n      url: baseUrl,\n      ...query\n    };\n  }\n\n\n  rewriteAutocompleteResponse(response: OTPGeocoderResponse): MultiGeocoderResponse {\n    return {\n        features: response?.results?.map(stop => ({\n            geometry: { type: \"Point\", coordinates: [stop.coordinate.lng, stop.coordinate.lat] },\n            id: stop.id, \n            // TODO: if non-stops are supported, these need to be detected here and \n            // this layer property updated accordingly\n            properties: { layer: \"stops\", source: \"otp\", name: stop.name, label: stop.code }, \n            type: \"Feature\"\n        })),\n      type: \"FeatureCollection\"\n    };\n  }\n\n}\n"],"file":"otp.js"}